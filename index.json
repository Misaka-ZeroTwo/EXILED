{
  "api/Exiled.API.Enums.AmmoType.html": {
    "href": "api/Exiled.API.Enums.AmmoType.html",
    "title": "Enum AmmoType | EXILED Docs",
    "keywords": "Enum AmmoType Ammo types present in the game. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum AmmoType Fields Name Description Ammo12Gauge 12 gauge shotgun ammo. Used by ItemType.GunShotgun Ammo44Cal 44 caliber. Nato556 5.56mm Ammunition. Used by ItemType.GunE11SR . Nato762 7.62mm Ammunition. Used by and ItemType.GunLogicer . Nato9 9mm Ammunition. Used by ItemType.GunCOM15 ,. None Not ammo. Extension Methods ItemExtensions.GetItemType() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.AuthenticationType.html": {
    "href": "api/Exiled.API.Enums.AuthenticationType.html",
    "title": "Enum AuthenticationType | EXILED Docs",
    "keywords": "Enum AuthenticationType Players authentication types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum AuthenticationType Fields Name Description Discord Indicates that the player has been authenticated through Discord. Northwood Indicates that the player has been authenticated as a Northwood staffer. Patreon Indicates that the player has been authenticated as a Patreon. Steam Indicates that the player has been authenticated through Steam. Unknown Indicates that the player has been authenticated through an unknown provider. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.BarrelType.html": {
    "href": "api/Exiled.API.Enums.BarrelType.html",
    "title": "Enum BarrelType | EXILED Docs",
    "keywords": "Enum BarrelType Possible barrel weapon modifications. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum BarrelType Fields Name Description HeavyBarrel Heavy Barrel. MuzzleBooster Muzzle Booster. MuzzleBrake Muzzle Brake. None No barrel Silencer Silencer. Suppressor Suppressor. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.CameraType.html": {
    "href": "api/Exiled.API.Enums.CameraType.html",
    "title": "Enum CameraType | EXILED Docs",
    "keywords": "Enum CameraType Unique identifier for the different types of SCP-079 cameras. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum CameraType Fields Name Description Backstreet Represents the camera facing the NUKE_SURFACE door. Bridge Represents the camera above the Gate A balcony. EscapeZone Represents the ESCAPE ZONE camera (facing toward the ESCAPE door). Exit Represents the EXIT camera (above the Class-D and Scientist extraction point). EzChkpHcz Represents the camera facing toward the heavy containment zone checkpoint (in EZ). EzGateA Represents the camera inside of Gate A (entrance zone). EzGateB Represents the camera inside of Gate B (entrance zone). EzIntercomHall Represents the camera outside the INTERCOM door. EzIntercomInterior Represents the camera facing the intercom. EzIntercomStairs Represents the camera inside the INTERCOM door. GateA Represents the camera outside of the Gate A elevator (surface). Hcz049Armory Represents the camera that faces toward the 049_ARMORY door. Hcz049Elevator Represents the camera in the SCP-049 Lift hallway that is in front of the elevator. Hcz049Hall Represents the camera in the SCP-049 Lift hallway that is not in front of the elevator. Hcz079Hallway Represents the camera in the hallway between the 079_FIRST and 079_SECOND doors. Hcz079Interior Represents the camera inside SCP-079's containment chamber. Hcz079PreHallway Represents the camera in the pre-hallway in front of 079_FIRST door. Hcz096 Represents the camera outside of SCP-096's containment chamber. Hcz106First Represents the SCP-106 MAIN CAM camera (above the door leading to SCP-106's room). Hcz106Primary Represents the 106 ENT A camera (above the 106_PRIMARY door inside the containment room). Hcz106Recontainer Represents the camera above the femur breaker. Hcz106Second Represents the SCP-106 SECOND camera (outside the 106_PRIMARY door). Hcz106Secondary Represents the 106 ENT B camera (above the 106_SECONDARY door inside the containment room). Hcz106Stairs Represents the camera facing toward the stairs in SCP-106's containment chamber. Hcz939 Represents the camera inside SCP-939's containment room. HczAChkp Represents the camera facing the LCZ/HCZ A checkpoint, on the Heavy Containment side. HczArmory Represents the camera above the HCZ_ARMORY door. HczBChkp Represents the camera facing the LCZ/HCZ B checkpoint, on the Heavy Containment side. HczChkpEz Represents the camera facing toward the entrance zone checkpoint (in HCZ). HczHidHall Represents the camera in the HID hallway. HczHidInterior Represents the camera inside the Micro-HID room. HczServerBottom Represents the camera on the bottom level of the server room. HczServerHall Represents the hallway camera in the server room. HczServerTop Represents the camera on the top level of the server room. HczWarheadArmory Represents the camera inside the alpha warhead armory. HczWarheadHall Represents the camera outside of the alpha warhead Lift in HCZ. HczWarheadRoom Represents the camera inside of the alpha warhead room. HczWarheadSwitch Represents the camera above the alpha warhead switch. Helipad Represents the HELIPAD camera. Lcz012 Represents the camera outside of SCP-012's room Lcz012Bottom Represents the camera at the bottom of SCP-012's containment chamber. Lcz173Armory Represents the camera outside the 173_ARMORY door. Lcz173Bottom Represents the camera above the 173_BOTTOM door. Lcz173Containment Represents the camera inside of SCP-173's containment chamber. Lcz173Hallway Represents the camera outside of SCP-173's containment chamber. Lcz914 Represents the camera inside SCP-914. Lcz914Hallway Represents the camera outside SCP-914. LczAChkp Represents the camera facing the LCZ/HCZ A checkpoint, on the Light Containment side. LczAHeavy Represents the camera in the LCZ A Lift in HCZ. LczALight Represents the camera in the LCZ A Lift in LCZ. LczArmory Represents the camera inside the LCZ armory. LczBChkp Represents the camera facing the LCZ/HCZ B checkpoint, on the Light Containment side. LczBHeavy Represents the camera in the LCZ B Lift in heavy. LczBLight Represents the camera in the LCZ B Lift in LCZ. LczCafe Represents the LCZ cafe. LczClassDSpawn Represents the camera inside the Class-D spawns. LczGlassBox Represents the camera inside SCP-372's containment room. LczPlants Represents the plant room in LCZ. Streetcam Represents the camera on the Gate B walkway. SurfaceGate Represents the camera facing the SURFACE_GATE door (Gate B side) Tower Represents the camera on the tower at Gate A. Unknown Represents an unknown camera. WC Represents the camera inside the WC hallway. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DamageType.html": {
    "href": "api/Exiled.API.Enums.DamageType.html",
    "title": "Enum DamageType | EXILED Docs",
    "keywords": "Enum DamageType Identifiers for types of damage. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum DamageType Fields Name Description Asphyxiation Asphyxiated . Bleeding Bleeding . Crushed Crushed by the checkpoint killer trigger. Decontamination LCZ Decontamination. Explosion Damage dealt by frag grenades. Falldown Fall damage. FemurBreaker Damage caused by the femur breaker. Firearm Damage dealt by a Firearm . FriendlyFireDetector Damage caused by the friendly fire detector. MicroHid Damage dealt by a MicroHid . PocketDimension Damage caused by the pocket dimension. Poison Poisoned . Recontainment Damage is dealt by SCP Recontainment procedure. Scp Damage is dealt by an SCP. Scp018 Damage dealt by SCP-018. Scp207 Damage dealt by SCP-207. SeveredHands Damage caused by severed hands. Tesla Damage dealt by a Tesla Gate. Unknown Unknown damage source. Warhead Alpha Warhead. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DoorBeepType.html": {
    "href": "api/Exiled.API.Enums.DoorBeepType.html",
    "title": "Enum DoorBeepType | EXILED Docs",
    "keywords": "Enum DoorBeepType Door beep types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum DoorBeepType Fields Name Description InteractionAllowed Interaction allowed. InteractionDenied Interaction denied. LockBypassDenied Lock bypass is denied. PermissionDenied Permission denied beep. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DoorLockType.html": {
    "href": "api/Exiled.API.Enums.DoorLockType.html",
    "title": "Enum DoorLockType | EXILED Docs",
    "keywords": "Enum DoorLockType All possible door locks. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum DoorLockType Fields Name Description AdminCommand Locked via admin command. DecontEvacuate Locked by decontamination evacuation (during final countdown to decon). DecontLockdown Locked by decontamination lockdown (after decon starts). Isolation Isloation. Lockdown079 SCP-079 lockdown room lock. None Unlocked. NoPower Door has no power. Regular079 Regular SCP-079 door lock. SpecialDoorFeature Special door features. Warhead Alpha Warhead detonation lock. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DoorType.html": {
    "href": "api/Exiled.API.Enums.DoorType.html",
    "title": "Enum DoorType | EXILED Docs",
    "keywords": "Enum DoorType Unique identifier for the different types of doors. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum DoorType Fields Name Description CheckpointEntrance Represents the CHECKPOINT_ENT door. CheckpointLczA Represents the CHECKPOINT_LCZ_A door. CheckpointLczB Represents the CHECKPOINT_LCZ_B door. EntranceDoor Represents any entrance zone styled door. EscapePrimary Represents the ESCAPE_PRIMARY door. EscapeSecondary Represents the ESCAPE_SECONDARY door. GateA Represents the GATE_A door. GateB Represents the GATE_B door. GR18 Represents the GR18 door. HczArmory Represents the HCZ_ARMORY door. HeavyContainmentDoor Represents any heavy containment styled door. HID Represents the HID door. HIDLeft Represents the HID_LEFT door. HIDRight Represents the HID_RIGHT door. Intercom Represents the INTERCOM door. LczArmory Represents the LCZ_ARMORY door. LczCafe Represents the LCZ_CAFE door. LczWc Represents the LCZ_WC door. LightContainmentDoor Represents any light containment styled door. NukeArmory Represents the NUKE_ARMORY door. NukeSurface Represents the NUKE_SURFACE door. PrisonDoor Represents any of the Class-D cell doors. Scp012 Represents the 012 door. Scp012Bottom Represents the 012_BOTTOM door. Scp012Locker Represents the 012_LOCKER door. Scp049Armory Represents the 049_ARMORY door. Scp079First Represents the 079_FIRST door. Scp079Second Represents the 079_SECOND door. Scp096 Represents the 096 door. Scp106Bottom Represents the 106_BOTTOM door. Scp106Primary Represents the 106_PRIMARY door. Scp106Secondary Represents the 106_SECONDARY door. Scp173Armory Represents the 173_ARMORY door. Scp173Bottom Represents the 173_BOTTOM door. Scp173Connector Represents the door between the 173 gate and the 173 armory. Scp173Gate Represents the 173 gate. Scp914 Represents the 914 door. ServersBottom Represents the SERVERS_BOTTOM door. SurfaceGate Represents the SURFACE_GATE door. UnknownDoor Represents an unknown door. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.EffectType.html": {
    "href": "api/Exiled.API.Enums.EffectType.html",
    "title": "Enum EffectType | EXILED Docs",
    "keywords": "Enum EffectType Status effects as enum. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum EffectType Fields Name Description Amnesia The player isn't able to open their inventory or reload a weapon. Asphyxiated Drains the player's stamina and then health. Bleeding Damages the player over time. Blinded Blurs the player's screen. BodyshotReduction Reduces damage taken by body shots. Burned Increases damage the player gets. Concussed Blurs the player's screen when rotating. Corroding Teleports the player to the pocket dimension and drains health. DamageReduction Reduces all damage taken. Deafened Deafens the player. Decontaminating Removes 10% of the player's health per second. Disabled Slows down the player's movement. Ensnared Stops the player's movement. Exhausted Halves the player's maximum stamina and stamina regeneration rate. Flashed Flashes the player. Hemorrhage Drains the player's health while sprinting. Invigorated Reduces the player's FOV, gives infinite stamina and gives the effect of underwater sound. Invisible Makes the player invisibility. MovementBoost Increases movement speed. Poisoned Damages the player every 5 seconds, starting low and ramping hight. RainbowTaste Severely reduces damage taken. Scp207 Makes the player faster but also drains health. SeveredHands Drops the player's current item and deals damage while effect is active. SinkHole Slows down the player's movement with SCP-106 effect. Stained Stops the player from sprinting and reduces movement speed by 20%. Visual173Blink Causes the player to blink. Visuals939 Gives the player the sound vision of SCP-939. Vitality Causes the player to slowly regenerate health. Extension Methods EffectTypeExtension.Type() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ElevatorType.html": {
    "href": "api/Exiled.API.Enums.ElevatorType.html",
    "title": "Enum ElevatorType | EXILED Docs",
    "keywords": "Enum ElevatorType The unique type of elevator. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ElevatorType : byte Fields Name Description GateA Entrance Gate A elevator. GateB Entrance Gate B elevator. LczA Light Containment Zone checkpoint A elevator. LczB Light Containment Zone checkpoint B elevator. Nuke Heavy Containment Zone Nuke elevator. Scp049 Heavy Containment Zone SCP-049 elevator. Unknown Unknown elevator Type. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.EnvironmentType.html": {
    "href": "api/Exiled.API.Enums.EnvironmentType.html",
    "title": "Enum EnvironmentType | EXILED Docs",
    "keywords": "Enum EnvironmentType A set of environment types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum EnvironmentType Fields Name Description Development The development environment, for developers. Production The production environment, for the public. Ptb The ptb environment, for Public Test Builds. Testing The testing environment, for testing things. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.GrenadeType.html": {
    "href": "api/Exiled.API.Enums.GrenadeType.html",
    "title": "Enum GrenadeType | EXILED Docs",
    "keywords": "Enum GrenadeType The unique type of grenade. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum GrenadeType Fields Name Description Flashbang Flashbang. Used by ItemType.GrenadeFlash . FragGrenade Frag grenade. Used by ItemType.GrenadeHE . Scp018 Scp018 ball. Used by ItemType.SCP018 . Extension Methods ItemExtensions.GetItemType() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.HotkeyButton.html": {
    "href": "api/Exiled.API.Enums.HotkeyButton.html",
    "title": "Enum HotkeyButton | EXILED Docs",
    "keywords": "Enum HotkeyButton Hotkey button types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum HotkeyButton Fields Name Description Grenade The hotkey button for selecting the grenade. Keycard The hotkey button for selecting the keycard. Medical The hotkey button for selecting the medical item. PrimaryFirearm The hotkey button for selecting the primary firearm. SecondaryFirearm The hotkey button for selecting the secondary firearm. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.html": {
    "href": "api/Exiled.API.Enums.html",
    "title": "Namespace Exiled.API.Enums | EXILED Docs",
    "keywords": "Namespace Exiled.API.Enums Enums AmmoType Ammo types present in the game. AuthenticationType Players authentication types. BarrelType Possible barrel weapon modifications. CameraType Unique identifier for the different types of SCP-079 cameras. DamageType Identifiers for types of damage. DoorBeepType Door beep types. DoorLockType All possible door locks. DoorType Unique identifier for the different types of doors. EffectType Status effects as enum. ElevatorType The unique type of elevator. EnvironmentType A set of environment types. GrenadeType The unique type of grenade. HotkeyButton Hotkey button types. KeycardPermissions The types of permissions assigned to keycards. LeadingTeam The team that is currently leading the round. OtherType Possible other weapon modifications. PluginPriority Provides simple and readable plugin priority values. RadioRange All possible Radio ranges. RespawnEffectType Layers game respawn effects. RoomType Unique identifier for the different types of rooms. ShootingTargetButton Possible shooting target buttons. ShootingTargetType Shooting target types present in the game. Side In which side a certain RoleType belongs. SightType Possible sight weapon modifications. SpawnReason Possible spawn reasons. ThrowRequest Possible throwable throw types. ZoneType Facility zone types."
  },
  "api/Exiled.API.Enums.KeycardPermissions.html": {
    "href": "api/Exiled.API.Enums.KeycardPermissions.html",
    "title": "Enum KeycardPermissions | EXILED Docs",
    "keywords": "Enum KeycardPermissions The types of permissions assigned to keycards. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum KeycardPermissions Fields Name Description AlphaWarhead Opens the Alpha Warhead detonation room on surface. ArmoryLevelOne Checkpoints , Opens Light Containment armory. ArmoryLevelThree ArmoryLevelTwo , Intercom , Opens MicroHID room. ArmoryLevelTwo ArmoryLevelOne , ExitGates , Opens Heavy Containment armories. Checkpoints Opens checkpoints. ContainmentLevelOne Opens 914. ContainmentLevelThree ContainmentLevelTwo , Intercom , AlphaWarhead . ContainmentLevelTwo ContainmentLevelOne , Checkpoints . ExitGates Opens Exit Gates. Intercom Opens the Intercom door. None No permissions. ScpOverride Checkpoints . Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.LeadingTeam.html": {
    "href": "api/Exiled.API.Enums.LeadingTeam.html",
    "title": "Enum LeadingTeam | EXILED Docs",
    "keywords": "Enum LeadingTeam The team that is currently leading the round. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum LeadingTeam : byte Fields Name Description Anomalies Represents SCPs. ChaosInsurgency Represents Class-D and Chaos Insurgency. Draw Represents a draw. FacilityForces Represents Scientists, Guards, and NTF. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.OtherType.html": {
    "href": "api/Exiled.API.Enums.OtherType.html",
    "title": "Enum OtherType | EXILED Docs",
    "keywords": "Enum OtherType Possible other weapon modifications. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum OtherType Fields Name Description AmmoCounter Ammo Counter. Flashlight Flashlight. GyroscopicStabilizer Gyroscopic Stabilizer. Laser Laser. None No other Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.PluginPriority.html": {
    "href": "api/Exiled.API.Enums.PluginPriority.html",
    "title": "Enum PluginPriority | EXILED Docs",
    "keywords": "Enum PluginPriority Provides simple and readable plugin priority values. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum PluginPriority Fields Name Description Default First Execute the plugin first, before other ones. High Higher plugin priority. Higher Higher plugin priority. Highest Last Execute the plugin last, after other ones. Low Low plugin priority. Lower Default plugin priority. Lowest Medium Medium plugin priority. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.RadioRange.html": {
    "href": "api/Exiled.API.Enums.RadioRange.html",
    "title": "Enum RadioRange | EXILED Docs",
    "keywords": "Enum RadioRange All possible Radio ranges. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum RadioRange Fields Name Description Disabled The radio is disabled. Long A longer range with increased battery usage. Medium The standard, default range. Short The shortest range with the least battery usage. Ultra The longest range with the most battery usage. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.RespawnEffectType.html": {
    "href": "api/Exiled.API.Enums.RespawnEffectType.html",
    "title": "Enum RespawnEffectType | EXILED Docs",
    "keywords": "Enum RespawnEffectType Layers game respawn effects. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum RespawnEffectType : byte Fields Name Description PlayChaosInsurgencyMusic Plays the ChaosInsurgency music to alive RoleType.ClassD and ChaosInsurgency . SummonChaosInsurgencyVan Summons the ChaosInsurgency van. SummonNtfChopper Summons the NTF chopper. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.RoomType.html": {
    "href": "api/Exiled.API.Enums.RoomType.html",
    "title": "Enum RoomType | EXILED Docs",
    "keywords": "Enum RoomType Unique identifier for the different types of rooms. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum RoomType Fields Name Description EzCafeteria Entrance Cafeteria Room. EzCollapsedTunnel Entrance Red Collapsed Tunnel Room. EzConference Entrance |-Shaped Dr.L Room. EzCrossing Entrance X-Shaped Room. EzCurve Entrance L-Shaped Room. EzDownstairsPcs Entrance PC Room With Downstairs. EzGateA Entrance Gate A Room. EzGateB Entrance Gate B Room. EzIntercom Entrance Intercom Room. EzPcs Entrance PC Room. EzShelter Entrance Shelter Room. EzStraight Entrance |-Shaped Room EzTCross Entrance T-Shaped Room. EzUpstairsPcs Entrance PC Room With Upstairs. EzVent Entrance Red Vent Room. Hcz049 Heavy Containment SCP 049 Room. Hcz079 Heavy Containment SCP 079 Room. Hcz096 Heavy Containment SCP 096 Room. Hcz106 Heavy Containment SCP 106 Room. Hcz939 Heavy Containment SCP 939 Room. HczArmory Heavy Containment T-Shaped Armory Room. HczChkpA Heavy Containment Checkpoint A Room. HczChkpB Heavy Containment Checkpoint B Room. HczCrossing Heavy Containment X-Shaped Room. HczCurve Heavy Containment L-Shaped Room. HczEzCheckpoint Heavy Containment Entrance Checkpoint Room. HczHid Heavy Containment HID-Spawn Room. HczNuke Heavy Containment Nuke Room. HczServers Heavy Containment Servers Room. HczStraight Heavy Containment |-Shaped Room. HczTCross Heavy Containment T-Shaped Room. HczTesla Heavy Containment Tesla Room. Lcz012 Lower Containment SCP 012 Room. Lcz173 Lower Containment SCP 173 Room. Lcz914 Lower Containment SCP 914 Room. LczAirlock Lower Containment Airlock Room. LczArmory Lower Containment Armory. LczCafe Lower Containment Cafe Room. LczChkpA Lower Containment Checkpoint A Room. LczChkpB Lower Containment Checkpoint B Room. LczClassDSpawn Lower Containment Class D Spawn Room. LczCrossing Lower Containment X-Shaped Room. LczCurve Lower Containment L-Shaped Room. LczGlassBox Lower Containment Glass Box Room. LczPlants Lower Containment T-Shaped Plants Room. LczStraight Lower Containment |-Shaped Room. LczTCross Lower Containment T-Shaped Room. LczToilets Lower Containment Toilets Room. Pocket Pocket Dimension. Surface The Surface. Unknown Unknown Room Type. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ShootingTargetButton.html": {
    "href": "api/Exiled.API.Enums.ShootingTargetButton.html",
    "title": "Enum ShootingTargetButton | EXILED Docs",
    "keywords": "Enum ShootingTargetButton Possible shooting target buttons. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ShootingTargetButton Fields Name Description DecreaseHp Decrease HP button. DecreaseResetTime Decrease reset time button. IncreaseHp Increase HP button. IncreaseResetTime Increase reset time button. Remove Remove button. Reset Reset button. ToggleSync Toggle sync mode button. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ShootingTargetType.html": {
    "href": "api/Exiled.API.Enums.ShootingTargetType.html",
    "title": "Enum ShootingTargetType | EXILED Docs",
    "keywords": "Enum ShootingTargetType Shooting target types present in the game. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ShootingTargetType Fields Name Description Binary Binary target. ClassD D-Class target. Sport Radial sport target. Unknown Unknown target. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.Side.html": {
    "href": "api/Exiled.API.Enums.Side.html",
    "title": "Enum Side | EXILED Docs",
    "keywords": "Enum Side In which side a certain RoleType belongs. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum Side Fields Name Description ChaosInsurgency Chaos Insurgency team. Contains RoleType.ClassD , RoleType.ChaosConscript , RoleType.ChaosRepressor , RoleType.ChaosRifleman and RoleType.ChaosMarauder . Mtf Mobile Task Forces team. Contains RoleType.Scientist , RoleType.FacilityGuard , RoleType.NtfPrivate , RoleType.NtfSergeant , RoleType.NtfCaptain and RoleType.NtfSpecialist . None Team.RIP . Scp The same as Team.SCP . Tutorial Team.TUT . Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.SightType.html": {
    "href": "api/Exiled.API.Enums.SightType.html",
    "title": "Enum SightType | EXILED Docs",
    "keywords": "Enum SightType Possible sight weapon modifications. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum SightType Fields Name Description BlueDotSight Blue Dot Sight Collimator Collimator HoloSight Holo Sight NightVisionSight Night Vision Sight None No sight RedDot Red Dot SniperScope Sniper Scope Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.SpawnReason.html": {
    "href": "api/Exiled.API.Enums.SpawnReason.html",
    "title": "Enum SpawnReason | EXILED Docs",
    "keywords": "Enum SpawnReason Possible spawn reasons. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum SpawnReason : byte Fields Name Description Died The player has died. Escaped The player has escaped. ForceClass The player's role was changed by an admin command or plugin. LateJoin The player joined and the round recently started. None No reason specified. Overwatch The user has entered Overwatch mode. Respawn The player was dead and is respawning. Revived The player was revived by 049. RoundStart The round has just started. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ThrowRequest.html": {
    "href": "api/Exiled.API.Enums.ThrowRequest.html",
    "title": "Enum ThrowRequest | EXILED Docs",
    "keywords": "Enum ThrowRequest Possible throwable throw types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ThrowRequest Fields Name Description BeginThrow Requesting to begin throwing a throwable item. FullForceThrow Requesting to confirm a strong throw. WeakThrow Requesting to confirm a weak throw. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ZoneType.html": {
    "href": "api/Exiled.API.Enums.ZoneType.html",
    "title": "Enum ZoneType | EXILED Docs",
    "keywords": "Enum ZoneType Facility zone types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum ZoneType Fields Name Description Entrance The Entrance Zone. HeavyContainment The Heavy Containment Zone. LightContainment The Light Containment Zone. Surface The Surface Zone. Unspecified An unknown zone. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Extensions.CameraExtensions.html": {
    "href": "api/Exiled.API.Extensions.CameraExtensions.html",
    "title": "Class CameraExtensions | EXILED Docs",
    "keywords": "Class CameraExtensions Contains an extension method to get CameraType from Camera079 , as well as additional methods to get the Room(Camera079) and ZoneType of a camera. Internal class Exiled.API.Extensions.CameraExtensions.RegisterCameraInfoOnLevelLoad to cache the CameraType and Room(Camera079) on level load. Inheritance System.Object CameraExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class CameraExtensions Methods | Improve this Doc View Source Room(Camera079) Returns the Room(Camera079) the camera is in, or null if not found. Declaration public static Room Room(this Camera079 camera) Parameters Type Name Description Camera079 camera The Camera079 to check. Returns Type Description Room A Room(Camera079) , or null if not found. | Improve this Doc View Source Type(Camera079) Gets the CameraType . Declaration public static CameraType Type(this Camera079 camera) Parameters Type Name Description Camera079 camera The Camera079 to check. Returns Type Description CameraType The CameraType . | Improve this Doc View Source Zone(Camera079) Returns the ZoneType the camera is in. Declaration public static ZoneType Zone(this Camera079 camera) Parameters Type Name Description Camera079 camera The Camera079 to check. Returns Type Description ZoneType The ZoneType of the zone the camera is in."
  },
  "api/Exiled.API.Extensions.EffectTypeExtension.html": {
    "href": "api/Exiled.API.Extensions.EffectTypeExtension.html",
    "title": "Class EffectTypeExtension | EXILED Docs",
    "keywords": "Class EffectTypeExtension Contains an extension method to get System.Type from EffectType . Inheritance System.Object EffectTypeExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class EffectTypeExtension Methods | Improve this Doc View Source Type(EffectType) Gets an instance of System.Type points to an effect. Declaration public static Type Type(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType enum. Returns Type Description System.Type The System.Type ."
  },
  "api/Exiled.API.Extensions.html": {
    "href": "api/Exiled.API.Extensions.html",
    "title": "Namespace Exiled.API.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.API.Extensions Classes CameraExtensions Contains an extension method to get CameraType from Camera079 , as well as additional methods to get the Room(Camera079) and ZoneType of a camera. Internal class Exiled.API.Extensions.CameraExtensions.RegisterCameraInfoOnLevelLoad to cache the CameraType and Room(Camera079) on level load. EffectTypeExtension Contains an extension method to get System.Type from EffectType . ItemExtensions A set of extensions for ItemType . LiftTypeExtension Contains an extension method to get ElevatorType from Lift . Internal class Exiled.API.Extensions.LiftTypeExtension.RegisterElevatorTypesOnLevelLoad to cache the ElevatorType on level load. MirrorExtensions A set of extensions for Mirror Networking. ReflectionExtensions A set of extensions for System.Type . RoleExtensions A set of extensions for RoleType . SpawnExtensions A set of extensions for SpawnLocation . StringExtensions A set of extensions for System.String . UserGroupExtensions Contains a useful extension to compare two UserGroup 's."
  },
  "api/Exiled.API.Extensions.ItemExtensions.html": {
    "href": "api/Exiled.API.Extensions.ItemExtensions.html",
    "title": "Class ItemExtensions | EXILED Docs",
    "keywords": "Class ItemExtensions A set of extensions for ItemType . Inheritance System.Object ItemExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class ItemExtensions Methods | Improve this Doc View Source GetAmmoType(ItemType) Converts a valid ammo ItemType into an AmmoType . Declaration public static AmmoType GetAmmoType(this ItemType type) Parameters Type Name Description ItemType type The ItemType to convert. Returns Type Description AmmoType The ammo type of the given item type. | Improve this Doc View Source GetItemType(AmmoType) Converts an AmmoType into it's corresponding ItemType . Declaration public static ItemType GetItemType(this AmmoType type) Parameters Type Name Description AmmoType type The AmmoType to convert. Returns Type Description ItemType The Item type of the specified ammo. | Improve this Doc View Source GetItemType(GrenadeType) Converts a GrenadeType into the corresponding ItemType . Declaration public static ItemType GetItemType(this GrenadeType type) Parameters Type Name Description GrenadeType type Returns Type Description ItemType | Improve this Doc View Source GetItemTypes(IEnumerable<Item>) Converts a System.Collections.Generic.IEnumerable<T> of Item s into the corresponding System.Collections.Generic.List<T> of ItemType s. Declaration public static List<ItemType> GetItemTypes(this IEnumerable<Item> items) Parameters Type Name Description System.Collections.Generic.IEnumerable < Item > items The items to convert. Returns Type Description System.Collections.Generic.List < ItemType > A new System.Collections.Generic.List<T> of ItemType s. | Improve this Doc View Source GetMaxAmmo(ItemType) Gets the default ammo of a weapon. Declaration public static byte GetMaxAmmo(this ItemType item) Parameters Type Name Description ItemType item The ItemType that you want to get durability of. Returns Type Description System.Byte Returns the item durability. | Improve this Doc View Source IsAmmo(ItemType) Check if an ItemType is an ammo. Declaration public static bool IsAmmo(this ItemType item) Parameters Type Name Description ItemType item The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is an ammo or not. | Improve this Doc View Source IsArmor(ItemType) Check if a ItemType is an armor item. Declaration public static bool IsArmor(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is an armor or not. | Improve this Doc View Source IsKeycard(ItemType) Check if an ItemType is a keycard. Declaration public static bool IsKeycard(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is a keycard or not. | Improve this Doc View Source IsMedical(ItemType) Check if an ItemType is a medical item. Declaration public static bool IsMedical(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is a medical item or not. | Improve this Doc View Source IsScp(ItemType) Check if an ItemType is an SCP. Declaration public static bool IsScp(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is an SCP or not. | Improve this Doc View Source IsThrowable(ItemType) Check if an ItemType is a throwable item. Declaration public static bool IsThrowable(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is a throwable item or not. | Improve this Doc View Source IsUtility(ItemType) Check if an ItemType is a utility item. Declaration public static bool IsUtility(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is an utilty item or not. | Improve this Doc View Source IsWeapon(ItemType, Boolean) Check if an ItemType is a weapon. Declaration public static bool IsWeapon(this ItemType type, bool checkMicro = true) Parameters Type Name Description ItemType type The item to be checked. System.Boolean checkMicro Indicates whether the MicroHID item should be taken into account or not. Returns Type Description System.Boolean Returns whether the ItemType is a weapon or not."
  },
  "api/Exiled.API.Extensions.LiftTypeExtension.html": {
    "href": "api/Exiled.API.Extensions.LiftTypeExtension.html",
    "title": "Class LiftTypeExtension | EXILED Docs",
    "keywords": "Class LiftTypeExtension Contains an extension method to get ElevatorType from Lift . Internal class Exiled.API.Extensions.LiftTypeExtension.RegisterElevatorTypesOnLevelLoad to cache the ElevatorType on level load. Inheritance System.Object LiftTypeExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class LiftTypeExtension Methods | Improve this Doc View Source Type(Lift) Gets the ElevatorType . Declaration public static ElevatorType Type(this Lift lift) Parameters Type Name Description Lift lift The Lift to check. Returns Type Description ElevatorType The ElevatorType ."
  },
  "api/Exiled.API.Extensions.MirrorExtensions.html": {
    "href": "api/Exiled.API.Extensions.MirrorExtensions.html",
    "title": "Class MirrorExtensions | EXILED Docs",
    "keywords": "Class MirrorExtensions A set of extensions for Mirror Networking. Inheritance System.Object MirrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class MirrorExtensions Properties | Improve this Doc View Source SendSpawnMessageMethodInfo Gets a NetworkServer.SendSpawnMessage's System.Reflection.MethodInfo . Declaration public static MethodInfo SendSpawnMessageMethodInfo { get; } Property Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source SetDirtyBitsMethodInfo Gets a Mirror.NetworkBehaviour.SetDirtyBit(System.UInt64) 's System.Reflection.MethodInfo . Declaration public static MethodInfo SetDirtyBitsMethodInfo { get; } Property Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source SyncVarDirtyBits Gets a all DirtyBit System.UInt64 from StringExtensions (format:classname.methodname). Declaration public static ReadOnlyDictionary<string, ulong> SyncVarDirtyBits { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyDictionary < System.String , System.UInt64 > | Improve this Doc View Source WriterExtensions Gets System.Reflection.MethodInfo corresponding to System.Type . Declaration public static ReadOnlyDictionary<Type, MethodInfo> WriterExtensions { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyDictionary < System.Type , System.Reflection.MethodInfo > Methods | Improve this Doc View Source ChangeAppearance(Player, RoleType) Change Player character model for appearance. It will continue until Player 's RoleType changes. Declaration public static void ChangeAppearance(this Player player, RoleType type) Parameters Type Name Description Player player Player to change. RoleType type Model type. | Improve this Doc View Source ChangeRunningSpeed(Player, Single, Boolean) Changes the Player 's running speed. Negative values will invert the player's controls. Declaration public static void ChangeRunningSpeed(this Player player, float multiplier, bool useCap = true) Parameters Type Name Description Player player Player to change. System.Single multiplier Speed multiplier. System.Boolean useCap Allow multiplier values to be larger than safe amount. | Improve this Doc View Source ChangeWalkingSpeed(Player, Single, Boolean) Changes the Player 's walking speed. Negative values will invert the player's controls. Declaration public static void ChangeWalkingSpeed(this Player player, float multiplier, bool useCap = true) Parameters Type Name Description Player player Player to change. System.Single multiplier Speed multiplier. System.Boolean useCap Allow multiplier values to be larger than safe amount. | Improve this Doc View Source EditNetworkObject(NetworkIdentity, Action<NetworkIdentity>) Edit Mirror.NetworkIdentity 's parameter and sync. Declaration public static void EditNetworkObject(NetworkIdentity identity, Action<NetworkIdentity> customAction) Parameters Type Name Description Mirror.NetworkIdentity identity Target object. System.Action < Mirror.NetworkIdentity > customAction Edit function. | Improve this Doc View Source PlayBeepSound(Player) Play beep sound to Player . Declaration public static void PlayBeepSound(this Player player) Parameters Type Name Description Player player Target to play. | Improve this Doc View Source PlayCassieAnnouncement(Player, String, Boolean, Boolean) Send CASSIE announcement that only Player can hear. It will continue until Player 's RoleType changes. Declaration public static void PlayCassieAnnouncement(this Player player, string words, bool makeHold = false, bool makeNoise = true) Parameters Type Name Description Player player Target to send. System.String words Announcement words. System.Boolean makeHold Same on Message(String, Boolean, Boolean) 's isHeld. System.Boolean makeNoise Same on Message(String, Boolean, Boolean) 's isNoisy. | Improve this Doc View Source PlayGunSound(Player, Vector3, ItemType, Byte, Byte) Play gun sound to Player . Declaration public static void PlayGunSound(this Player player, Vector3 position, ItemType itemType, byte volume, byte audioClipId = 0) Parameters Type Name Description Player player Target to play. UnityEngine.Vector3 position Position to play on. ItemType itemType Weapon' sound to play. System.Byte volume Sound's volume to set. System.Byte audioClipId GunAudioMessage's audioClipId to set (default = 0). | Improve this Doc View Source ResyncSyncVar(NetworkIdentity, Type, String) Force resync to client's Mirror.SyncVarAttribute . Declaration public static void ResyncSyncVar(NetworkIdentity behaviorOwner, Type targetType, string propertyName) Parameters Type Name Description Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.String propertyName Property name starting with Network. | Improve this Doc View Source SendFakeSyncObject(Player, NetworkIdentity, Type, Action<NetworkWriter>) Send fake values to client's Mirror.SyncObject . Declaration public static void SendFakeSyncObject(Player target, NetworkIdentity behaviorOwner, Type targetType, Action<NetworkWriter> customAction) Parameters Type Name Description Player target Target to send. Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.Action < Mirror.NetworkWriter > customAction Custom writing action. Examples EffectOnlySCP207. MirrorExtensions.SendCustomSync(player, player.ReferenceHub.networkIdentity, typeof(PlayerEffectsController), (writer) => { writer.WriteUInt64(1ul); // DirtyObjectsBit writer.WriteUInt32(1); // DirtyIndexCount writer.WriteByte((byte)SyncList<byte>.Operation.OP_SET); // Operations writer.WriteUInt32(17); // EditIndex writer.WriteByte(1); // Value }); | Improve this Doc View Source SendFakeSyncVar(Player, NetworkIdentity, Type, String, Object) Send fake values to client's Mirror.SyncVarAttribute . Declaration public static void SendFakeSyncVar(this Player target, NetworkIdentity behaviorOwner, Type targetType, string propertyName, object value) Parameters Type Name Description Player target Target to send. Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.String propertyName Property name starting with Network. System.Object value Value of send to target. | Improve this Doc View Source SendFakeTargetRpc(Player, NetworkIdentity, Type, String, Object[]) Send fake values to client's Mirror.ClientRpcAttribute . Declaration public static void SendFakeTargetRpc(Player target, NetworkIdentity behaviorOwner, Type targetType, string rpcName, params object[] values) Parameters Type Name Description Player target Target to send. Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.String rpcName Property name starting with Rpc. System.Object [] values Values of send to target. | Improve this Doc View Source SetPlayerInfoForTargetOnly(Player, Player, String) Set NicknameSync.Network_customPlayerInfoString that only Player can see. Declaration public static void SetPlayerInfoForTargetOnly(this Player player, Player target, string info) Parameters Type Name Description Player player Only this player can see info. Player target Target to set info. System.String info Setting info. | Improve this Doc View Source SetRoomColorForTargetOnly(Room, Player, Color) Set FlickerableLightController.Network_warheadLightColor that only Player can see. Declaration public static void SetRoomColorForTargetOnly(this Room room, Player target, Color color) Parameters Type Name Description Room room Room to modify. Player target Only this player can see room color. UnityEngine.Color color Color to set. | Improve this Doc View Source SetRoomLightIntensityForTargetOnly(Room, Player, Single) Set FlickerableLightController.Network_lightIntensityMultiplier that only Player can see. Declaration public static void SetRoomLightIntensityForTargetOnly(this Room room, Player target, float multiplier) Parameters Type Name Description Room room Room to modify. Player target Only this player can see room color. System.Single multiplier Light intensity multiplier to set. | Improve this Doc View Source Shake(Player) Shaking target Player window. Declaration public static void Shake(this Player player) Parameters Type Name Description Player player Target to shake."
  },
  "api/Exiled.API.Extensions.ReflectionExtensions.html": {
    "href": "api/Exiled.API.Extensions.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | EXILED Docs",
    "keywords": "Class ReflectionExtensions A set of extensions for System.Type . Inheritance System.Object ReflectionExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class ReflectionExtensions Methods | Improve this Doc View Source CopyProperties(Object, Object) Copy all properties from the source class to the target one. Declaration public static void CopyProperties(this object target, object source) Parameters Type Name Description System.Object target The target object. System.Object source The source object to copy properties from. | Improve this Doc View Source InvokeStaticMethod(Type, String, Object[]) Invoke a static method. Declaration public static void InvokeStaticMethod(this Type type, string methodName, object[] param) Parameters Type Name Description System.Type type The method type. System.String methodName The method name. System.Object [] param The method parameters."
  },
  "api/Exiled.API.Extensions.RoleExtensions.html": {
    "href": "api/Exiled.API.Extensions.RoleExtensions.html",
    "title": "Class RoleExtensions | EXILED Docs",
    "keywords": "Class RoleExtensions A set of extensions for RoleType . Inheritance System.Object RoleExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class RoleExtensions Methods | Improve this Doc View Source GetColor(RoleType) Get a RoleType UnityEngine.Color . Declaration public static Color GetColor(this RoleType role) Parameters Type Name Description RoleType role The RoleType to get the color of. Returns Type Description UnityEngine.Color The UnityEngine.Color of the role. | Improve this Doc View Source GetLeadingTeam(Team) Get the LeadingTeam . Declaration public static LeadingTeam GetLeadingTeam(this Team team) Parameters Type Name Description Team team Team. Returns Type Description LeadingTeam LeadingTeam . | Improve this Doc View Source GetRandomSpawnProperties(RoleType) Gets a random spawn point of a RoleType . Declaration public static Tuple<Vector3, float> GetRandomSpawnProperties(this RoleType roleType) Parameters Type Name Description RoleType roleType The RoleType to get the spawn point from. Returns Type Description System.Tuple < UnityEngine.Vector3 , System.Single > Returns the spawn point UnityEngine.Vector3 and rotation System.Single . | Improve this Doc View Source GetSide(RoleType) Get a RoleType Side . Declaration public static Side GetSide(this RoleType role) Parameters Type Name Description RoleType role The RoleType to check the side of. Returns Type Description Side Side . | Improve this Doc View Source GetSide(Team) Get a Team Side . Declaration public static Side GetSide(this Team team) Parameters Type Name Description Team team The Team to get the Side of. Returns Type Description Side Side . | Improve this Doc View Source GetTeam(RoleType) Get the Team of the given RoleType . Declaration public static Team GetTeam(this RoleType roleType) Parameters Type Name Description RoleType roleType Role. Returns Type Description Team Team ."
  },
  "api/Exiled.API.Extensions.SpawnExtensions.html": {
    "href": "api/Exiled.API.Extensions.SpawnExtensions.html",
    "title": "Class SpawnExtensions | EXILED Docs",
    "keywords": "Class SpawnExtensions A set of extensions for SpawnLocation . Inheritance System.Object SpawnExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class SpawnExtensions Fields | Improve this Doc View Source ReversedLocations The names of spawn locations who's positions are on the opposite side of their door, and must be corrected. Declaration public static readonly SpawnLocation[] ReversedLocations Field Value Type Description SpawnLocation [] Methods | Improve this Doc View Source GetDoor(SpawnLocation) Tries to get the UnityEngine.Transform of the door used for a specific SpawnLocation . Declaration public static Transform GetDoor(this SpawnLocation location) Parameters Type Name Description SpawnLocation location The SpawnLocation to check. Returns Type Description UnityEngine.Transform The UnityEngine.Transform used for that spawn location. Can be null. | Improve this Doc View Source GetDoorName(SpawnLocation) The names of the doors attached to each spawn location. Declaration public static string GetDoorName(this SpawnLocation spawnLocation) Parameters Type Name Description SpawnLocation spawnLocation The SpawnLocation . Returns Type Description System.String Returns the door name. | Improve this Doc View Source GetPosition(SpawnLocation) Tries to get the UnityEngine.Vector3 used for a specific SpawnLocation . Declaration public static Vector3 GetPosition(this SpawnLocation location) Parameters Type Name Description SpawnLocation location The SpawnLocation to check. Returns Type Description UnityEngine.Vector3 The UnityEngine.Vector3 used for that spawn location. Can be UnityEngine.Vector3.zero ."
  },
  "api/Exiled.API.Extensions.StringExtensions.html": {
    "href": "api/Exiled.API.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | EXILED Docs",
    "keywords": "Class StringExtensions A set of extensions for System.String . Inheritance System.Object StringExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source ExtractCommand(String) Extract command name and arguments from a System.String . Declaration public static (string commandName, string[] arguments) ExtractCommand(this string commandLine) Parameters Type Name Description System.String commandLine The System.String to extract from. Returns Type Description System.ValueTuple < System.String , System.String []> Returns a System.ValueTuple containing the exctracted command name and arguments. | Improve this Doc View Source GetBefore(String, Char) Retrieves a string before a symbol from an input. Declaration public static string GetBefore(this string input, char symbol) Parameters Type Name Description System.String input The input. System.Char symbol The symbol. Returns Type Description System.String Substring before the symbol. | Improve this Doc View Source GetDistance(String, String) Compute the distance between two System.String . Declaration public static int GetDistance(this string firstString, string secondString) Parameters Type Name Description System.String firstString The first string to be compared. System.String secondString The second string to be compared. Returns Type Description System.Int32 Returns the distance between the two strings. | Improve this Doc View Source GetHashedUserId(String) Gets a SHA256 hash of a player's user id without the authentication. Declaration public static string GetHashedUserId(this string userId) Parameters Type Name Description System.String userId The user id. Returns Type Description System.String The hashed userid. | Improve this Doc View Source GetRawUserId(String) Gets the player's user id without the authentication. Declaration public static string GetRawUserId(this string userId) Parameters Type Name Description System.String userId The user id. Returns Type Description System.String Returns the raw user id. | Improve this Doc View Source RemoveBracketsOnEndOfName(String) Removes the prefab-generated brackets (#) on UnityEngine.GameObject names. Declaration public static string RemoveBracketsOnEndOfName(this string name) Parameters Type Name Description System.String name Name of the UnityEngine.GameObject . Returns Type Description System.String Name without brackets. | Improve this Doc View Source RemoveSpaces(String) Removes all space symbols from string. Declaration public static string RemoveSpaces(this string input) Parameters Type Name Description System.String input Input string. Returns Type Description System.String String without spaces. | Improve this Doc View Source SplitCamelCase(String) Splits camel case string to space-separated words. Ex: SomeCamelCase -> Some Camel Case. Declaration public static string SplitCamelCase(this string input) Parameters Type Name Description System.String input Camel case string. Returns Type Description System.String Splitted string. | Improve this Doc View Source ToSnakeCase(String, Boolean) Converts a System.String to snake_case convention. Declaration public static string ToSnakeCase(this string str, bool shouldReplaceSpecialChars = true) Parameters Type Name Description System.String str The string to be converted. System.Boolean shouldReplaceSpecialChars Indicates whether special chars has to be replaced or not. Returns Type Description System.String Returns the new snake_case string. | Improve this Doc View Source ToString<T>(IEnumerable<T>, Boolean) Converts an System.Collections.Generic.IEnumerable<T> into a string. Declaration public static string ToString<T>(this IEnumerable<T> enumerable, bool showIndex = true) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> enumerable The instance. System.Boolean showIndex Indicates whether the enumerator index should be shown or not. Returns Type Description System.String Returns the converted System.Collections.Generic.IEnumerable<T> . Type Parameters Name Description T The type of the IEnumerable."
  },
  "api/Exiled.API.Extensions.UserGroupExtensions.html": {
    "href": "api/Exiled.API.Extensions.UserGroupExtensions.html",
    "title": "Class UserGroupExtensions | EXILED Docs",
    "keywords": "Class UserGroupExtensions Contains a useful extension to compare two UserGroup 's. Inheritance System.Object UserGroupExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class UserGroupExtensions Methods | Improve this Doc View Source EqualsTo(UserGroup, UserGroup) Compares two UserGroup 's for equality. Declaration public static bool EqualsTo(this UserGroup this, UserGroup other) Parameters Type Name Description UserGroup this The fist UserGroup . UserGroup other The second UserGroup . Returns Type Description System.Boolean true if they are equal; otherwise, false . | Improve this Doc View Source GetKey(UserGroup) Searches for a key of a group in the PermissionsHandler config. Declaration public static string GetKey(this UserGroup this) Parameters Type Name Description UserGroup this The UserGroup . Returns Type Description System.String The key of that group, or null if not found. | Improve this Doc View Source GetValue(String) Searches for a value of a group in the PermissionsHandler config. Declaration public static UserGroup GetValue(string groupName) Parameters Type Name Description System.String groupName The System.String . Returns Type Description UserGroup The value of that group, or null if not found."
  },
  "api/Exiled.API.Features.Badge.html": {
    "href": "api/Exiled.API.Features.Badge.html",
    "title": "Struct Badge | EXILED Docs",
    "keywords": "Struct Badge Represents the in-game badge. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public struct Badge Constructors | Improve this Doc View Source Badge(String, String, Int32, Boolean) Initializes a new instance of the Badge struct. Declaration public Badge(string text, string color, int type, bool isGlobal = false) Parameters Type Name Description System.String text The badge text. System.String color The badge color. System.Int32 type The badge type. System.Boolean isGlobal Indicates whether the badge is global or not. Properties | Improve this Doc View Source Color Gets the badge color. Declaration public string Color { get; } Property Value Type Description System.String | Improve this Doc View Source IsGlobal Gets a value indicating whether the badge is global or not. Declaration public bool IsGlobal { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Text Gets the badge text. Declaration public string Text { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets the badge type. Declaration public int Type { get; } Property Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Broadcast.html": {
    "href": "api/Exiled.API.Features.Broadcast.html",
    "title": "Class Broadcast | EXILED Docs",
    "keywords": "Class Broadcast Useful class to save broadcast configs in a cleaner way. Inheritance System.Object Broadcast Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Broadcast Constructors | Improve this Doc View Source Broadcast() Initializes a new instance of the Broadcast class. Declaration public Broadcast() | Improve this Doc View Source Broadcast(String, UInt16, Boolean, Broadcast.BroadcastFlags) Initializes a new instance of the Broadcast class. Declaration public Broadcast(string content, ushort duration = 10, bool show = true, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal) Parameters Type Name Description System.String content System.UInt16 duration System.Boolean show Broadcast.BroadcastFlags type Properties | Improve this Doc View Source Content Gets or sets the broadcast content. Declaration public string Content { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Gets or sets the broadcast duration. Declaration public ushort Duration { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Show Gets or sets a value indicating whether the broadcast should be shown or not. Declaration public bool Show { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Gets or sets the broadcast type. Declaration public Broadcast.BroadcastFlags Type { get; set; } Property Value Type Description Broadcast.BroadcastFlags Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Cassie.html": {
    "href": "api/Exiled.API.Features.Cassie.html",
    "title": "Class Cassie | EXILED Docs",
    "keywords": "Class Cassie A set of tools to use in-game C.A.S.S.I.E more easily. Inheritance System.Object Cassie Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Cassie Properties | Improve this Doc View Source IsSpeaking Gets a value indicating whether or not C.A.S.S.I.E is currently announcing. Does not include decontamination messages. Declaration public static bool IsSpeaking { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CalculateDuration(String, Boolean) Calculates duration of a C.A.S.S.I.E message. Declaration public static float CalculateDuration(string message, bool rawNumber = false) Parameters Type Name Description System.String message The message, which duration will be calculated. System.Boolean rawNumber Determines if a number won't be converted to its full pronunciation. Returns Type Description System.Single Duration (in seconds) of specified message. | Improve this Doc View Source Clear() Clears the C.A.S.S.I.E queue. Declaration public static void Clear() | Improve this Doc View Source ConvertNumber(Int32) Converts Number into Cassie-Readable String. Declaration public static string ConvertNumber(int num) Parameters Type Name Description System.Int32 num Number to convert. Returns Type Description System.String A CASSIE-readable System.String representing the number. | Improve this Doc View Source ConvertTeam(Team, String) Converts a Team into a Cassie-Readable CONTAINMENTUNIT. Declaration public static string ConvertTeam(Team team, string unitName) Parameters Type Name Description Team team Team . System.String unitName Unit Name. Returns Type Description System.String System.String Containment Unit text. | Improve this Doc View Source CustomSCPTermination(String, DamageHandlerBase) Announce the termination of a custom SCP name. Declaration public static void CustomSCPTermination(string scpname, DamageHandlerBase info) Parameters Type Name Description System.String scpname SCP Name. PlayerStatsSystem.DamageHandlerBase info Hit Information. | Improve this Doc View Source DelayedGlitchyMessage(String, Single, Single, Single) Reproduce a glitchy C.A.S.S.I.E announcement after a certain period of seconds. Declaration public static void DelayedGlitchyMessage(string message, float delay, float glitchChance, float jamChance) Parameters Type Name Description System.String message The message to be reproduced. System.Single delay The seconds that have to pass before reproducing the message. System.Single glitchChance The chance of placing a glitch between each word. System.Single jamChance The chance of jamming each word. | Improve this Doc View Source DelayedMessage(String, Single, Boolean, Boolean) Reproduce a non-glitched C.A.S.S.I.E message after a certain amount of seconds. Declaration public static void DelayedMessage(string message, float delay, bool isHeld = false, bool isNoisy = true) Parameters Type Name Description System.String message The message to be reproduced. System.Single delay The seconds that have to pass before reproducing the message. System.Boolean isHeld Indicates whether C.A.S.S.I.E has to hold the message. System.Boolean isNoisy Indicates whether C.A.S.S.I.E has to make noises or not during the message. | Improve this Doc View Source GlitchyMessage(String, Single, Single) Reproduce a glitchy C.A.S.S.I.E announcement. Declaration public static void GlitchyMessage(string message, float glitchChance, float jamChance) Parameters Type Name Description System.String message The message to be reproduced. System.Single glitchChance The chance of placing a glitch between each word. System.Single jamChance The chance of jamming each word. | Improve this Doc View Source Message(String, Boolean, Boolean) Reproduce a non-glitched C.A.S.S.I.E message. Declaration public static void Message(string message, bool isHeld = false, bool isNoisy = true) Parameters Type Name Description System.String message The message to be reproduced. System.Boolean isHeld Indicates whether C.A.S.S.I.E has to hold the message. System.Boolean isNoisy Indicates whether C.A.S.S.I.E has to make noises or not during the message. | Improve this Doc View Source SCPTermination(Player, DamageHandlerBase) Announce a SCP Termination. Declaration public static void SCPTermination(Player scp, DamageHandlerBase info) Parameters Type Name Description Player scp SCP to announce termination of. PlayerStatsSystem.DamageHandlerBase info HitInformation."
  },
  "api/Exiled.API.Features.Components.CollisionHandler.html": {
    "href": "api/Exiled.API.Features.Components.CollisionHandler.html",
    "title": "Class CollisionHandler | EXILED Docs",
    "keywords": "Class CollisionHandler Collision Handler for grenades. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour CollisionHandler Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Components Assembly : Exiled.API.dll Syntax public class CollisionHandler : MonoBehaviour Properties | Improve this Doc View Source Grenade Gets the grenade itself. Declaration public EffectGrenade Grenade { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.EffectGrenade | Improve this Doc View Source Owner Gets the thrower of the grenade. Declaration public GameObject Owner { get; } Property Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source Init(GameObject, ThrownProjectile) Inits the CollisionHandler object. Declaration public void Init(GameObject owner, ThrownProjectile grenade) Parameters Type Name Description UnityEngine.GameObject owner The grenade owner. InventorySystem.Items.ThrowableProjectiles.ThrownProjectile grenade The grenade component. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Components.html": {
    "href": "api/Exiled.API.Features.Components.html",
    "title": "Namespace Exiled.API.Features.Components | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Components Classes CollisionHandler Collision Handler for grenades."
  },
  "api/Exiled.API.Features.DamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandler.html",
    "title": "Class DamageHandler | EXILED Docs",
    "keywords": "Class DamageHandler A wrapper for PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class DamageHandler Constructors | Improve this Doc View Source DamageHandler(Player, DamageHandlerBase) Initializes a new instance of the DamageHandler class. Declaration public DamageHandler(Player target, DamageHandlerBase handlerBase) Parameters Type Name Description Player target The Player target of the handler. PlayerStatsSystem.DamageHandlerBase handlerBase The PlayerStatsSystem.DamageHandlerBase to initialize from. Properties | Improve this Doc View Source Amount Gets or sets the amount of damage to be dealt. Declaration public float Amount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Attacker Gets or sets the Player attacker. CAN BE NULL!. Declaration public Player Attacker { get; set; } Property Value Type Description Player | Improve this Doc View Source Base Gets or sets the PlayerStatsSystem.DamageHandlerBase base for this handler. Declaration public DamageHandlerBase Base { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Item Gets the Item used to create the damage handler. CAN BE NULL!. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Target Gets the Player target. Declaration public Player Target { get; } Property Value Type Description Player | Improve this Doc View Source Type Gets the DamageType for the handler. Declaration public DamageType Type { get; } Property Value Type Description DamageType Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Door.html": {
    "href": "api/Exiled.API.Features.Door.html",
    "title": "Class Door | EXILED Docs",
    "keywords": "Class Door A wrapper class for Interactables.Interobjects.DoorUtils.DoorVariant . Inheritance System.Object Door Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Door Constructors | Improve this Doc View Source Door(DoorVariant) Initializes a new instance of the Door class. Declaration public Door(DoorVariant door) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorVariant door Properties | Improve this Doc View Source AllowsScp106 Gets or sets a value indicating whether SCP-106 can walk through the door. Declaration public bool AllowsScp106 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Base Gets the base-game Interactables.Interobjects.DoorUtils.DoorVariant for this door. Declaration public DoorVariant Base { get; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorVariant | Improve this Doc View Source DoorLockType Gets or the door lock type. Declaration public DoorLockType DoorLockType { get; } Property Value Type Description DoorLockType | Improve this Doc View Source Health Gets or sets the door's remaining health, if it is breakable. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IgnoredDamageTypes Gets or sets the damage types this door ignores, if it is breakable. Declaration public DoorDamageType IgnoredDamageTypes { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorDamageType | Improve this Doc View Source InstanceId Gets the door's Instance ID. Declaration public int InstanceId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsBreakable Gets a value indicating whether or not this door is breakable. Declaration public bool IsBreakable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets a value indicating whether the door is locked. Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOpen Gets or sets a value indicating whether the door is open. Declaration public bool IsOpen { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets or sets the max health of the door, if it is breakable. Declaration public float MaxHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Nametag Gets a nametag of a door. Declaration public string Nametag { get; } Property Value Type Description System.String | Improve this Doc View Source Position Gets or sets the door's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source RequiredPermissions Gets or sets the required permissions to open the door. Declaration public DoorPermissions RequiredPermissions { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorPermissions | Improve this Doc View Source Room Gets the Room . Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the door's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the size scale of the door. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Type Gets the DoorType . Declaration public DoorType Type { get; } Property Value Type Description DoorType Methods | Improve this Doc View Source BreakDoor() Breaks the specified door, if it is not already broken. Declaration public bool BreakDoor() Returns Type Description System.Boolean True if the door was broken, false if it was unable to be broken, or was already broken before. | Improve this Doc View Source ChangeLock(DoorLockType) Locks the door with the given lock type. Declaration public void ChangeLock(DoorLockType lockType) Parameters Type Name Description DoorLockType lockType | Improve this Doc View Source DamageDoor(Single, DoorDamageType) Damages the door, if it's breakable. Declaration public bool DamageDoor(float amount, DoorDamageType type = DoorDamageType.ServerCommand) Parameters Type Name Description System.Single amount The amount of damage to deal. Interactables.Interobjects.DoorUtils.DoorDamageType type The damage type to use. Returns Type Description System.Boolean True if the door was damaged. | Improve this Doc View Source Get(DoorVariant) Gets the door object associated with a specific Interactables.Interobjects.DoorUtils.DoorVariant , or creates a new one if there isn't one. Declaration public static Door Get(DoorVariant doorVariant) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorVariant doorVariant Returns Type Description Door | Improve this Doc View Source PlaySound(DoorBeepType) Makes the door play a beep sound. Declaration public void PlaySound(DoorBeepType beep) Parameters Type Name Description DoorBeepType beep The beep sound to play. | Improve this Doc View Source TryPryOpen() Tries to pry the door open. Declaration public bool TryPryOpen() Returns Type Description System.Boolean True if the door was able to be pried open. | Improve this Doc View Source Unlock() Unlocks the door. Declaration public void Unlock() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.html": {
    "href": "api/Exiled.API.Features.html",
    "title": "Namespace Exiled.API.Features | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features Classes Broadcast Useful class to save broadcast configs in a cleaner way. Cassie A set of tools to use in-game C.A.S.S.I.E more easily. DamageHandler A wrapper for PlayerStatsSystem.DamageHandlerBase . Door A wrapper class for Interactables.Interobjects.DoorUtils.DoorVariant . Log A set of tools to print messages on the server console. Map A set of tools to easily handle the in-game map. Paths A set of useful paths. Player Represents the in-game player, by encapsulating a ReferenceHub . Plugin<TConfig> Expose how a plugin has to be made. Plugin<TConfig, TTranslation> Expose how a plugin has to be made. Ragdoll A set of tools to handle the ragdolls more easily. Respawn A set of tools to handle team respawns more easily. Room The in-game room. Round A set of tools to handle the round more easily. Scp096 A set of tools to modify SCP-096's behaviour. Scp173 A set of tools to modify SCP-173's behaviour. Scp914 A set of tools to modify SCP-914's behaviour. Server A set of tools to easily work with the server. ShootingTarget A wrapper class for AdminToys.ShootingTarget . Warhead A set of tools to easily work with the alpha warhead. Structs Badge Represents the in-game badge."
  },
  "api/Exiled.API.Features.Items.Ammo.html": {
    "href": "api/Exiled.API.Features.Items.Ammo.html",
    "title": "Class Ammo | EXILED Docs",
    "keywords": "Class Ammo A wrapper class for InventorySystem.Items.Firearms.Ammo.AmmoItem . Inheritance System.Object Item Ammo Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) Item.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Ammo : Item Constructors | Improve this Doc View Source Ammo(AmmoItem) Initializes a new instance of the Ammo class. Declaration public Ammo(AmmoItem itemBase) Parameters Type Name Description InventorySystem.Items.Firearms.Ammo.AmmoItem itemBase | Improve this Doc View Source Ammo(ItemType) Initializes a new instance of the Ammo class. Declaration public Ammo(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Declaration public AmmoItem Base { get; } Property Value Type Description InventorySystem.Items.Firearms.Ammo.AmmoItem Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Armor.html": {
    "href": "api/Exiled.API.Features.Items.Armor.html",
    "title": "Class Armor | EXILED Docs",
    "keywords": "Class Armor A wrapper class for InventorySystem.Items.Armor.BodyArmor . Inheritance System.Object Item Armor Inherited Members Item.Serial Item.Scale Item.Type Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) Item.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Armor : Item Constructors | Improve this Doc View Source Armor(BodyArmor) Initializes a new instance of the Armor class. Declaration public Armor(BodyArmor itemBase) Parameters Type Name Description InventorySystem.Items.Armor.BodyArmor itemBase | Improve this Doc View Source Armor(ItemType) Initializes a new instance of the Armor class. Declaration public Armor(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source AmmoLimits Gets or sets the ammo limit of the wearer when using this armor. Declaration public List<ArmorAmmoLimit> AmmoLimits { get; set; } Property Value Type Description System.Collections.Generic.List < ArmorAmmoLimit > | Improve this Doc View Source Base Declaration public BodyArmor Base { get; } Property Value Type Description InventorySystem.Items.Armor.BodyArmor | Improve this Doc View Source CivilianDownsideMultiplier Gets or sets how much worse RoleType.ClassD and RoleType.Scientist s are affected by wearing this armor. Declaration public float CivilianDownsideMultiplier { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Equippable Gets a value indicating whether this item is equippable. Declaration public bool Equippable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HelmetEfficacy Gets or sets how strong the helmet on the armor is. Declaration public int HelmetEfficacy { get; set; } Property Value Type Description System.Int32 Exceptions Type Condition System.ArgumentOutOfRangeException When trying to set the value below 0 or above 100. | Improve this Doc View Source Holsterable Gets a value indicating whether this item is holsterable. Declaration public bool Holsterable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsWorn Gets a value indicating whether or not this is a worn item. Declaration public bool IsWorn { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MovementSpeedMultiplier Gets or sets how much the users movement speed should be affected when wearing this armor. (higher values = slower movement). Declaration public float MovementSpeedMultiplier { get; set; } Property Value Type Description System.Single Exceptions Type Condition System.ArgumentOutOfRangeException When attempting to set the value below 0 or above 1. | Improve this Doc View Source RemoveExcessOnDrop Gets or sets a value indicating whether or not excess ammo should be removed when the armor is dropped. Declaration public bool RemoveExcessOnDrop { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StaminaUseMultiplier Gets or sets how much faster stamina will drain when wearing this armor. Declaration public float StaminaUseMultiplier { get; set; } Property Value Type Description System.Single Exceptions Type Condition System.ArgumentOutOfRangeException When attempting to set the value below 1 or above 2. | Improve this Doc View Source VestEfficacy Gets or sets how strong the vest on the armor is. Declaration public int VestEfficacy { get; set; } Property Value Type Description System.Int32 Exceptions Type Condition System.ArgumentOutOfRangeException When trying to set the value below 0 or above 100. | Improve this Doc View Source Weight Gets or sets the Weight of the armor. Declaration public float Weight { get; set; } Property Value Type Description System.Single Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.ExplosiveGrenade.html": {
    "href": "api/Exiled.API.Features.Items.ExplosiveGrenade.html",
    "title": "Class ExplosiveGrenade | EXILED Docs",
    "keywords": "Class ExplosiveGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade . Inheritance System.Object Item Throwable ExplosiveGrenade Inherited Members Throwable.Base Throwable.PinPullTime Throwable.Throw(Boolean) Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class ExplosiveGrenade : Throwable Constructors | Improve this Doc View Source ExplosiveGrenade(ThrowableItem) Initializes a new instance of the ExplosiveGrenade class. Declaration public ExplosiveGrenade(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase | Improve this Doc View Source ExplosiveGrenade(ItemType, Player) Initializes a new instance of the ExplosiveGrenade class. Declaration public ExplosiveGrenade(ItemType type, Player player = null) Parameters Type Name Description ItemType type Player player Remarks The player parameter will always need to be defined if this grenade is custom using Exiled.CustomItems. Properties | Improve this Doc View Source BurnDuration Gets or sets how long the Burned effect will last. Declaration public float BurnDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ConcussDuration Gets or sets how long the Concussed effect will last. Declaration public float ConcussDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DeafenDuration Gets or sets how long the Deafened effect will last. Declaration public float DeafenDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FuseTime Gets or sets how long the fuse will last. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxRadius Gets or sets the maximum radius of the grenade. Declaration public float MaxRadius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ScpMultiplier Gets or sets the multiplier for damage against Scp players. Declaration public float ScpMultiplier { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source SpawnActive(Vector3, Player) Spawns an active grenade on the map at the specified location. Declaration public void SpawnActive(Vector3 position, Player owner = null) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the grenade. Player owner Optional: The Player owner of the grenade. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Throwable.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Firearm.html": {
    "href": "api/Exiled.API.Features.Items.Firearm.html",
    "title": "Class Firearm | EXILED Docs",
    "keywords": "Class Firearm A wrapper class for InventorySystem.Items.Firearms.Firearm . Inheritance System.Object Item Firearm Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) Item.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Firearm : Item Constructors | Improve this Doc View Source Firearm(Firearm) Initializes a new instance of the Firearm class. Declaration public Firearm(Firearm itemBase) Parameters Type Name Description InventorySystem.Items.Firearms.Firearm itemBase | Improve this Doc View Source Firearm(ItemType) Initializes a new instance of the Firearm class. Declaration public Firearm(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Aiming Gets a value indicating whether the firearm is being aimed. Declaration public bool Aiming { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Ammo Gets or sets the amount of ammo in the firearm. Declaration public byte Ammo { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source AmmoType Gets the AmmoType of the firearm. Declaration public AmmoType AmmoType { get; } Property Value Type Description AmmoType | Improve this Doc View Source Attachments Gets or sets the InventorySystem.Items.Firearms.Attachments.FirearmAttachment s of the firearm. Declaration public FirearmAttachment[] Attachments { get; set; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.FirearmAttachment [] | Improve this Doc View Source Base Declaration public Firearm Base { get; } Property Value Type Description InventorySystem.Items.Firearms.Firearm | Improve this Doc View Source FireRate Gets or sets the fire rate of the firearm, if it is an automatic weapon. Declaration public float FireRate { get; set; } Property Value Type Description System.Single Exceptions Type Condition System.InvalidOperationException When trying to set this value for a weapon that is semi-automatic. | Improve this Doc View Source FlashlightEnabled Gets a value indicating whether the firearm's flashlight module is enabled. Declaration public bool FlashlightEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxAmmo Gets the max ammo for this firearm. Declaration public byte MaxAmmo { get; } Property Value Type Description System.Byte | Improve this Doc View Source Recoil Gets or sets the recoil settings of the firearm, if it's an automatic weapon. Declaration public RecoilSettings Recoil { get; set; } Property Value Type Description CameraShaking.RecoilSettings Exceptions Type Condition System.InvalidOperationException When trying to set this value for a weapon that is semi-automatic. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.FlashGrenade.html": {
    "href": "api/Exiled.API.Features.Items.FlashGrenade.html",
    "title": "Class FlashGrenade | EXILED Docs",
    "keywords": "Class FlashGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade . Inheritance System.Object Item Throwable FlashGrenade Inherited Members Throwable.Base Throwable.PinPullTime Throwable.Throw(Boolean) Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class FlashGrenade : Throwable Constructors | Improve this Doc View Source FlashGrenade(ThrowableItem) Initializes a new instance of the FlashGrenade class. Declaration public FlashGrenade(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase | Improve this Doc View Source FlashGrenade(ItemType, Player) Initializes a new instance of the FlashGrenade class. Declaration public FlashGrenade(ItemType type, Player player = null) Parameters Type Name Description ItemType type Player player Remarks The player parameter will always need to be defined if this grenade is custom using Exiled.CustomItems. Properties | Improve this Doc View Source BlindCurve Gets or sets the UnityEngine.AnimationCurve for determining how long the Blinded effect will last. Declaration public AnimationCurve BlindCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve | Improve this Doc View Source DeafenCurve Gets or sets the UnityEngine.AnimationCurve for determining how long the Deafened effect will last. Declaration public AnimationCurve DeafenCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve | Improve this Doc View Source FuseTime Gets or sets how long the fuse will last. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source SurfaceDistanceIntensifier Gets or sets the multiplier for damage against Scp players. Declaration public float SurfaceDistanceIntensifier { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source SpawnActive(Vector3, Player) Spawns an active grenade on the map at the specified location. Declaration public void SpawnActive(Vector3 position, Player owner = null) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the grenade. Player owner Optional: The Player owner of the grenade. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Throwable.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Flashlight.html": {
    "href": "api/Exiled.API.Features.Items.Flashlight.html",
    "title": "Class Flashlight | EXILED Docs",
    "keywords": "Class Flashlight A wrapped class for InventorySystem.Items.Flashlight.FlashlightItem . Inheritance System.Object Item Flashlight Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Flashlight : Item Constructors | Improve this Doc View Source Flashlight(ItemBase) Initializes a new instance of the Flashlight class. Declaration public Flashlight(ItemBase itemBase) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase | Improve this Doc View Source Flashlight(ItemType) Initializes a new instance of the Flashlight class. Declaration public Flashlight(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Active Gets or sets a value indicating whether the flashlight is turned on. Declaration public bool Active { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Base Declaration public FlashlightItem Base { get; } Property Value Type Description InventorySystem.Items.Flashlight.FlashlightItem Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Item.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.html": {
    "href": "api/Exiled.API.Features.Items.html",
    "title": "Namespace Exiled.API.Features.Items | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Items Classes Ammo A wrapper class for InventorySystem.Items.Firearms.Ammo.AmmoItem . Armor A wrapper class for InventorySystem.Items.Armor.BodyArmor . ExplosiveGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade . Firearm A wrapper class for InventorySystem.Items.Firearms.Firearm . FlashGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade . Flashlight A wrapped class for InventorySystem.Items.Flashlight.FlashlightItem . Item A wrapper class for InventorySystem.Items.ItemBase . Keycard A wrapper class for InventorySystem.Items.Keycards.KeycardItem . MicroHid A wrapper class for InventorySystem.Items.MicroHID.MicroHIDItem . Pickup A wrapper class for InventorySystem.Items.Pickups.ItemPickupBase . Radio A wrapper class for InventorySystem.Items.Radio.RadioItem . Throwable A wrapper class for throwable items. Usable A wrapper class for InventorySystem.Items.Usables.UsableItem ."
  },
  "api/Exiled.API.Features.Items.Item.html": {
    "href": "api/Exiled.API.Features.Items.Item.html",
    "title": "Class Item | EXILED Docs",
    "keywords": "Class Item A wrapper class for InventorySystem.Items.ItemBase . Inheritance System.Object Item Ammo Armor Firearm Flashlight Keycard MicroHid Radio Throwable Usable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Item Constructors | Improve this Doc View Source Item(ItemBase) Initializes a new instance of the Item class. Declaration public Item(ItemBase itemBase) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase | Improve this Doc View Source Item(ItemType) Initializes a new instance of the Item class. Declaration public Item(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ItemBase of the item. Declaration public ItemBase Base { get; } Property Value Type Description InventorySystem.Items.ItemBase | Improve this Doc View Source Owner Gets the Player who owns the item. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Scale Gets or sets the scale for the item. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Serial Gets or sets the unique serial number for the item. Declaration public ushort Serial { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Type Gets the ItemType of the item. Declaration public ItemType Type { get; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets the Weight of the item. Declaration public float Weight { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Get(ItemBase) Gets an existing Item or creates a new instance of one. Declaration public static Item Get(ItemBase itemBase) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase The InventorySystem.Items.ItemBase to convert into an item. Returns Type Description Item The item wrapper for the given InventorySystem.Items.ItemBase . | Improve this Doc View Source Give(Player) Gives this item to a Player . Declaration public void Give(Player player) Parameters Type Name Description Player player The Player to give the item to. | Improve this Doc View Source Spawn(Vector3, Quaternion) Spawns the item on the map. Declaration public virtual Pickup Spawn(Vector3 position, Quaternion rotation = default(Quaternion)) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the item. UnityEngine.Quaternion rotation The rotation of the item. Returns Type Description Pickup The Pickup created by spawning this item. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Keycard.html": {
    "href": "api/Exiled.API.Features.Items.Keycard.html",
    "title": "Class Keycard | EXILED Docs",
    "keywords": "Class Keycard A wrapper class for InventorySystem.Items.Keycards.KeycardItem . Inheritance System.Object Item Keycard Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Keycard : Item Constructors | Improve this Doc View Source Keycard(KeycardItem) Initializes a new instance of the Keycard class. Declaration public Keycard(KeycardItem itemBase) Parameters Type Name Description InventorySystem.Items.Keycards.KeycardItem itemBase | Improve this Doc View Source Keycard(ItemType) Initializes a new instance of the Keycard class. Declaration public Keycard(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Declaration public KeycardItem Base { get; } Property Value Type Description InventorySystem.Items.Keycards.KeycardItem | Improve this Doc View Source Permissions Gets or sets the KeycardPermissions of the keycard. Declaration public KeycardPermissions Permissions { get; set; } Property Value Type Description KeycardPermissions Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Item.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.MicroHid.html": {
    "href": "api/Exiled.API.Features.Items.MicroHid.html",
    "title": "Class MicroHid | EXILED Docs",
    "keywords": "Class MicroHid A wrapper class for InventorySystem.Items.MicroHID.MicroHIDItem . Inheritance System.Object Item MicroHid Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class MicroHid : Item Constructors | Improve this Doc View Source MicroHid(MicroHIDItem) Initializes a new instance of the MicroHid class. Declaration public MicroHid(MicroHIDItem itemBase) Parameters Type Name Description InventorySystem.Items.MicroHID.MicroHIDItem itemBase | Improve this Doc View Source MicroHid(ItemType) Initializes a new instance of the MicroHid class. Declaration public MicroHid(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.MicroHID.MicroHIDItem base of the item. Declaration public MicroHIDItem Base { get; } Property Value Type Description InventorySystem.Items.MicroHID.MicroHIDItem | Improve this Doc View Source Energy Gets or sets the remaining energy in the MicroHID. Declaration public float Energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source State Gets or sets the InventorySystem.Items.MicroHID.HidState . Declaration public HidState State { get; set; } Property Value Type Description InventorySystem.Items.MicroHID.HidState Methods | Improve this Doc View Source Fire() Starts firing the MicroHID. Declaration public void Fire() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Item.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Pickup.html": {
    "href": "api/Exiled.API.Features.Items.Pickup.html",
    "title": "Class Pickup | EXILED Docs",
    "keywords": "Class Pickup A wrapper class for InventorySystem.Items.Pickups.ItemPickupBase . Inheritance System.Object Pickup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Pickup Constructors | Improve this Doc View Source Pickup(ItemPickupBase) Initializes a new instance of the Pickup class. Declaration public Pickup(ItemPickupBase pickupBase) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase pickupBase | Improve this Doc View Source Pickup(ItemType) Initializes a new instance of the Pickup class. Declaration public Pickup(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ItemBase of the item. Declaration public ItemPickupBase Base { get; } Property Value Type Description InventorySystem.Items.Pickups.ItemPickupBase | Improve this Doc View Source InUse Gets or sets a value indicating whether the pickup is currently in use. Declaration public bool InUse { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Locked Gets or sets a value indicating whether the pickup is locked (can't be picked up). Declaration public bool Locked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Position Gets or sets the pickup position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets or sets the pickup rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the pickup's scale value. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Serial Gets the unique serial number for the item. Declaration public ushort Serial { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Spawned Gets a value indicating whether this pickup is spawned. Declaration public bool Spawned { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Gets the ItemType of the item. Declaration public ItemType Type { get; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets or sets the weight of the item. Declaration public float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Destroy() Destroys the pickup. Declaration public void Destroy() | Improve this Doc View Source Get(ItemPickupBase) Gets an existing Pickup or creates a new instance of one. Declaration public static Pickup Get(ItemPickupBase pickupBase) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase pickupBase The InventorySystem.Items.Pickups.ItemPickupBase to convert into a Pickup . Returns Type Description Pickup The Pickup wrapper for the given InventorySystem.Items.Pickups.ItemPickupBase . | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Radio.html": {
    "href": "api/Exiled.API.Features.Items.Radio.html",
    "title": "Class Radio | EXILED Docs",
    "keywords": "Class Radio A wrapper class for InventorySystem.Items.Radio.RadioItem . Inheritance System.Object Item Radio Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Radio : Item Constructors | Improve this Doc View Source Radio(RadioItem) Initializes a new instance of the Radio class. Declaration public Radio(RadioItem itemBase) Parameters Type Name Description InventorySystem.Items.Radio.RadioItem itemBase | Improve this Doc View Source Radio(ItemType) Initializes a new instance of the Radio class. Declaration public Radio(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Declaration public RadioItem Base { get; } Property Value Type Description InventorySystem.Items.Radio.RadioItem | Improve this Doc View Source BatteryLevel Gets or sets the percentage of the radio's battery. Declaration public byte BatteryLevel { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Range Gets or sets the current RadioRange . Declaration public RadioRange Range { get; set; } Property Value Type Description RadioRange | Improve this Doc View Source RangeSettings Gets or sets the RadioRangeSettings for the current Range . Declaration public RadioRangeSettings RangeSettings { get; set; } Property Value Type Description RadioRangeSettings Methods | Improve this Doc View Source Disable() Turns off the radio. Declaration public void Disable() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Item.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Throwable.html": {
    "href": "api/Exiled.API.Features.Items.Throwable.html",
    "title": "Class Throwable | EXILED Docs",
    "keywords": "Class Throwable A wrapper class for throwable items. Inheritance System.Object Item Throwable ExplosiveGrenade FlashGrenade Inherited Members Item.Serial Item.Scale Item.Type Item.Weight Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Throwable : Item Constructors | Improve this Doc View Source Throwable(ThrowableItem) Initializes a new instance of the Throwable class. Declaration public Throwable(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase | Improve this Doc View Source Throwable(ItemType, Player) Initializes a new instance of the Throwable class. Declaration public Throwable(ItemType type, Player player = null) Parameters Type Name Description ItemType type Player player Remarks The player parameter will always need to be defined if this throwable is custom using Exiled.CustomItems. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.ThrowableItem base for this item. Declaration public ThrowableItem Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem | Improve this Doc View Source PinPullTime Gets or sets the amount of time it takes to pull the pin. Declaration public float PinPullTime { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Throw(Boolean) Throws the item. Declaration public void Throw(bool fullForce = true) Parameters Type Name Description System.Boolean fullForce Whether to use full or half force. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Item.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Usable.html": {
    "href": "api/Exiled.API.Features.Items.Usable.html",
    "title": "Class Usable | EXILED Docs",
    "keywords": "Class Usable A wrapper class for InventorySystem.Items.Usables.UsableItem . Inheritance System.Object Item Usable Inherited Members Item.Serial Item.Scale Item.Type Item.Owner Item.Get(ItemBase) Item.Give(Player) Item.Spawn(Vector3, Quaternion) Item.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Usable : Item Constructors | Improve this Doc View Source Usable(UsableItem) Initializes a new instance of the Usable class. Declaration public Usable(UsableItem itemBase) Parameters Type Name Description InventorySystem.Items.Usables.UsableItem itemBase | Improve this Doc View Source Usable(ItemType) Initializes a new instance of the Usable class. Declaration public Usable(ItemType type) Parameters Type Name Description ItemType type Properties | Improve this Doc View Source Base Declaration public UsableItem Base { get; } Property Value Type Description InventorySystem.Items.Usables.UsableItem | Improve this Doc View Source Equippable Gets a value indicating whether this item is equippable. Declaration public bool Equippable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Holsterable Gets a value indicating whether this item is holsterable. Declaration public bool Holsterable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsing Gets a value indicating whether the item is currently being used. Declaration public bool IsUsing { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxCancellableTime Gets or sets how long after using starts a player has to cancel using the item. Declaration public float MaxCancellableTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source RemainingCooldown Gets or sets the cooldown between repeated uses of this item. Declaration public float RemainingCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UseTime Gets or sets how long it takes to use the item. Declaration public float UseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Weight Gets or sets the Weight of the item. Declaration public float Weight { get; set; } Property Value Type Description System.Single Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Log.html": {
    "href": "api/Exiled.API.Features.Log.html",
    "title": "Class Log | EXILED Docs",
    "keywords": "Class Log A set of tools to print messages on the server console. Inheritance System.Object Log Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Log Methods | Improve this Doc View Source Debug(Object, Boolean) Sends a Discord.LogLevel.Debug level messages to the game console. Server must have exiled_debug config enabled. Declaration public static void Debug(object message, bool canBeSent = true) Parameters Type Name Description System.Object message The message to be sent. System.Boolean canBeSent Indicates whether the log can be sent or not. | Improve this Doc View Source Error(Object) Sends a Discord.LogLevel.Error level messages to the game console. This should be used to send errors only. It's recommended to send any messages in the catch block of a try/catch as errors with the exception string. Declaration public static void Error(object message) Parameters Type Name Description System.Object message The message to be sent. | Improve this Doc View Source Info(Object) Sends a Discord.LogLevel.Info level messages to the game console. Declaration public static void Info(object message) Parameters Type Name Description System.Object message The message to be sent. | Improve this Doc View Source Send(Object, LogLevel, ConsoleColor) Sends a log message to the game console. Declaration public static void Send(object message, LogLevel level, ConsoleColor color = ConsoleColor.Gray) Parameters Type Name Description System.Object message The message to be sent. Discord.LogLevel level The message level of importance. System.ConsoleColor color The message color. | Improve this Doc View Source SendRaw(Object, ConsoleColor) Sends a raw log message to the game console. Declaration public static void SendRaw(object message, ConsoleColor color) Parameters Type Name Description System.Object message The message to be sent. System.ConsoleColor color The System.ConsoleColor of the message. | Improve this Doc View Source Warn(Object) Sends a Discord.LogLevel.Warn level messages to the game console. Declaration public static void Warn(object message) Parameters Type Name Description System.Object message The message to be sent."
  },
  "api/Exiled.API.Features.Map.html": {
    "href": "api/Exiled.API.Features.Map.html",
    "title": "Class Map | EXILED Docs",
    "keywords": "Class Map A set of tools to easily handle the in-game map. Inheritance System.Object Map Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Map Properties | Improve this Doc View Source ActivatedGenerators Gets the number of activated generators. Declaration public static int ActivatedGenerators { get; } Property Value Type Description System.Int32 | Improve this Doc View Source AmbientSoundPlayer Gets the AmbientSoundPlayer . Declaration public static AmbientSoundPlayer AmbientSoundPlayer { get; } Property Value Type Description AmbientSoundPlayer | Improve this Doc View Source Cameras Gets all Camera079 objects. Declaration public static ReadOnlyCollection<Camera079> Cameras { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Camera079 > | Improve this Doc View Source Doors Gets all Door objects. Declaration public static ReadOnlyCollection<Door> Doors { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Door > | Improve this Doc View Source IntercomInUse Gets a value indicating whether or not the intercom is currently being used. Declaration public static bool IntercomInUse { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IntercomSpeaker Gets the Player that is using the intercom. Will be null if IntercomInUse is false. Declaration public static Player IntercomSpeaker { get; } Property Value Type Description Player | Improve this Doc View Source IntercomState Gets the current state of the intercom. Declaration public static Intercom.State IntercomState { get; } Property Value Type Description Intercom.State | Improve this Doc View Source IsLczDecontaminated Gets a value indicating whether decontamination has begun in the light containment zone. Declaration public static bool IsLczDecontaminated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lifts Gets all Lift objects. Declaration public static ReadOnlyCollection<Lift> Lifts { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Lift > | Improve this Doc View Source Lockers Gets all MapGeneration.Distributors.Locker objects. Declaration public static ReadOnlyCollection<Locker> Lockers { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MapGeneration.Distributors.Locker > | Improve this Doc View Source Pickups gets all Pickup s on the map. Declaration public static ReadOnlyCollection<Pickup> Pickups { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Pickup > | Improve this Doc View Source PocketDimensionTeleports Gets all PocketDimensionTeleport objects. Declaration public static ReadOnlyCollection<PocketDimensionTeleport> PocketDimensionTeleports { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < PocketDimensionTeleport > | Improve this Doc View Source Ragdolls Gets all Ragdoll objects. Declaration public static ReadOnlyCollection<Ragdoll> Ragdolls { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Ragdoll > | Improve this Doc View Source Rooms Gets all Room objects. Declaration public static ReadOnlyCollection<Room> Rooms { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Room > | Improve this Doc View Source Seed Gets or sets the current seed of the map. Declaration public static int Seed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TeslaGates Gets all TeslaGate objects. Declaration public static ReadOnlyCollection<TeslaGate> TeslaGates { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < TeslaGate > Methods | Improve this Doc View Source Broadcast(Broadcast, Boolean) Broadcasts a message to all players. Declaration public static void Broadcast(Broadcast broadcast, bool shouldClearPrevious = false) Parameters Type Name Description Broadcast broadcast The Broadcast to be broadcasted. System.Boolean shouldClearPrevious Clears all players' broadcasts before sending the new one. | Improve this Doc View Source Broadcast(UInt16, String, Broadcast.BroadcastFlags, Boolean) Broadcasts a message to all players. Declaration public static void Broadcast(ushort duration, string message, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false) Parameters Type Name Description System.UInt16 duration The duration in seconds. System.String message The message that will be broadcast (supports Unity Rich Text formatting). Broadcast.BroadcastFlags type The broadcast type. System.Boolean shouldClearPrevious Clears all players' broadcasts before sending the new one. | Improve this Doc View Source ChangeUnitColor(Int32, String) Changes the color of a MTF unit. Declaration public static void ChangeUnitColor(int index, string color) Parameters Type Name Description System.Int32 index The index of the unit color you want to change. System.String color The new color of the Unit. | Improve this Doc View Source ClearBroadcasts() Clears all players' broadcasts. Declaration public static void ClearBroadcasts() | Improve this Doc View Source FindParentRoom(GameObject) Tries to find the room that a UnityEngine.GameObject is inside, first using the UnityEngine.Transform 's parents, then using a Raycast if no room was found. Declaration public static Room FindParentRoom(GameObject objectInRoom) Parameters Type Name Description UnityEngine.GameObject objectInRoom The UnityEngine.GameObject inside the room. Returns Type Description Room The Room that the UnityEngine.GameObject is located inside. | Improve this Doc View Source GetCameraById(UInt16) Gets the camera with the given ID. Declaration public static Camera079 GetCameraById(ushort cameraId) Parameters Type Name Description System.UInt16 cameraId The camera id to be searched for. Returns Type Description Camera079 The Camera079 with the given ID. | Improve this Doc View Source GetCameraByType(CameraType) Gets the camera with the given camera type. Declaration public static Camera079 GetCameraByType(CameraType cameraType) Parameters Type Name Description CameraType cameraType The CameraType to search for. Returns Type Description Camera079 The Camera079 with the given camera type. | Improve this Doc View Source GetDoorByName(String) Gets the door with the given door name. Declaration public static Door GetDoorByName(string doorName) Parameters Type Name Description System.String doorName The door name. Returns Type Description Door The Door or null if a door with this name doesn't exist. | Improve this Doc View Source LockAllDoors(Single, ZoneType, DoorLockType) Locks all doors of the facility. Declaration public static void LockAllDoors(float duration, ZoneType zoneType = ZoneType.Unspecified, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration The duration of the lockdown. ZoneType zoneType The ZoneType to affect. DoorLockType lockType DoorLockType of the lockdown. | Improve this Doc View Source LockAllDoors(Single, IEnumerable<ZoneType>, DoorLockType) Locks all doors of the facility. Declaration public static void LockAllDoors(float duration, IEnumerable<ZoneType> zoneTypes, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration The duration of the lockdown. System.Collections.Generic.IEnumerable < ZoneType > zoneTypes DoorLockType of the lockdown. DoorLockType lockType The ZoneType s to affect. | Improve this Doc View Source PlaceTantrum(Vector3) Places a Tantrum (Scp173's ability) in the indicated position. Declaration public static GameObject PlaceTantrum(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position The position where you want to spawn the Tantrum. Returns Type Description UnityEngine.GameObject The tantrum's UnityEngine.GameObject . | Improve this Doc View Source PlayAmbientSound() Plays a random ambient sound. Declaration public static void PlayAmbientSound() | Improve this Doc View Source PlayAmbientSound(Int32) Plays an ambient sound. Declaration public static void PlayAmbientSound(int id) Parameters Type Name Description System.Int32 id The id of the sound to play. | Improve this Doc View Source PlayIntercomSound(Boolean, Int32) Plays the intercom's sound. Declaration public static void PlayIntercomSound(bool start, int transmitterId = 0) Parameters Type Name Description System.Boolean start Sets a value indicating whether or not the sound is the intercom's start speaking sound. System.Int32 transmitterId Sets the transmitterId. | Improve this Doc View Source ShowHint(String, Single) Shows a hint to all players. Declaration public static void ShowHint(string message, float duration) Parameters Type Name Description System.String message The message that will be broadcasted (supports Unity Rich Text formatting). System.Single duration The duration in seconds. | Improve this Doc View Source StartDecontamination() Starts the light containment zone decontamination process. Declaration public static void StartDecontamination() | Improve this Doc View Source TurnOffAllLights(Single, ZoneType) Turns off all lights of the facility. Declaration public static void TurnOffAllLights(float duration, ZoneType zoneTypes = ZoneType.Unspecified) Parameters Type Name Description System.Single duration The duration of the blackout. ZoneType zoneTypes The ZoneType s to affect. | Improve this Doc View Source TurnOffAllLights(Single, IEnumerable<ZoneType>) Turns off all lights of the facility. Declaration public static void TurnOffAllLights(float duration, IEnumerable<ZoneType> zoneTypes) Parameters Type Name Description System.Single duration The duration of the blackout. System.Collections.Generic.IEnumerable < ZoneType > zoneTypes The ZoneType s to affect. | Improve this Doc View Source UnlockAllDoors() Unlocks all doors in the facility. Declaration public static void UnlockAllDoors()"
  },
  "api/Exiled.API.Features.Paths.html": {
    "href": "api/Exiled.API.Features.Paths.html",
    "title": "Class Paths | EXILED Docs",
    "keywords": "Class Paths A set of useful paths. Inheritance System.Object Paths Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Paths Properties | Improve this Doc View Source AppData Gets AppData path. Declaration public static string AppData { get; } Property Value Type Description System.String | Improve this Doc View Source BackupConfig Gets or sets the backup configs path. Declaration public static string BackupConfig { get; set; } Property Value Type Description System.String | Improve this Doc View Source BackupTranslations Gets or sets backup translations path. Declaration public static string BackupTranslations { get; set; } Property Value Type Description System.String | Improve this Doc View Source Config Gets or sets configs path. Declaration public static string Config { get; set; } Property Value Type Description System.String | Improve this Doc View Source Configs Gets or sets configs path. Declaration public static string Configs { get; set; } Property Value Type Description System.String | Improve this Doc View Source Dependencies Gets or sets Dependencies directory path. Declaration public static string Dependencies { get; set; } Property Value Type Description System.String | Improve this Doc View Source Exiled Gets or sets exiled directory path. Declaration public static string Exiled { get; set; } Property Value Type Description System.String | Improve this Doc View Source Log Gets or sets logs path. Declaration public static string Log { get; set; } Property Value Type Description System.String | Improve this Doc View Source ManagedAssemblies Gets managed assemblies directory path. Declaration public static string ManagedAssemblies { get; } Property Value Type Description System.String | Improve this Doc View Source Plugins Gets or sets plugins path. Declaration public static string Plugins { get; set; } Property Value Type Description System.String | Improve this Doc View Source Translations Gets or sets translations path. Declaration public static string Translations { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Reload(String) Reloads all paths. Declaration public static void Reload(string rootDirectoryName = \"EXILED\") Parameters Type Name Description System.String rootDirectoryName The new root directory name."
  },
  "api/Exiled.API.Features.Player.html": {
    "href": "api/Exiled.API.Features.Player.html",
    "title": "Class Player | EXILED Docs",
    "keywords": "Class Player Represents the in-game player, by encapsulating a ReferenceHub . Inheritance System.Object Player Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Player Constructors | Improve this Doc View Source Player(ReferenceHub) Initializes a new instance of the Player class. Declaration public Player(ReferenceHub referenceHub) Parameters Type Name Description ReferenceHub referenceHub The ReferenceHub of the player to be encapsulated. | Improve this Doc View Source Player(GameObject) Initializes a new instance of the Player class. Declaration public Player(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The UnityEngine.GameObject of the player. Properties | Improve this Doc View Source Abilities Gets or sets the abilities of SCP-079. Can be null. Only applies if the player is SCP-079. Declaration public Scp079PlayerScript.Ability079[] Abilities { get; set; } Property Value Type Description Scp079PlayerScript.Ability079 [] | Improve this Doc View Source ActiveArtificialHealthProcesses Gets a list of all active Artificial Health processes on the player. Declaration public List<AhpStat.AhpProcess> ActiveArtificialHealthProcesses { get; } Property Value Type Description System.Collections.Generic.List < PlayerStatsSystem.AhpStat.AhpProcess > | Improve this Doc View Source ActiveEffects Gets all currently active CustomPlayerEffects.PlayerEffect . Declaration public IEnumerable<PlayerEffect> ActiveEffects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < CustomPlayerEffects.PlayerEffect > | Improve this Doc View Source Ammo Gets the player's ammo. Declaration public Dictionary<ItemType, ushort> Ammo { get; } Property Value Type Description System.Collections.Generic.Dictionary < ItemType , System.UInt16 > | Improve this Doc View Source ArtificialHealth Gets or sets the player's artificial health. If the health is greater than the MaxArtificialHealth , it will also be changed to match the artificial health. Declaration public float ArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source AuthenticationToken Gets the player's authentication token. Declaration public string AuthenticationToken { get; } Property Value Type Description System.String | Improve this Doc View Source AuthenticationType Declaration public AuthenticationType AuthenticationType { get; } Property Value Type Description AuthenticationType | Improve this Doc View Source BadgeHidden Gets or sets a value indicating whether the player's badge is hidden. Declaration public bool BadgeHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Camera Gets or sets the camera SCP-079 is currently controlling. Only applies if the player is SCP-079. Declaration public Camera079 Camera { get; set; } Property Value Type Description Camera079 | Improve this Doc View Source CameraTransform Gets the encapsulated ReferenceHub 's UnityEngine.Transform . Declaration public Transform CameraTransform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source CanSendInputs Gets or sets a value indicating whether the player can send inputs. Declaration public bool CanSendInputs { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Connection Gets player's Mirror.NetworkConnection . Declaration public NetworkConnection Connection { get; } Property Value Type Description Mirror.NetworkConnection | Improve this Doc View Source Cuffer Gets or sets a value indicating the cuffer Player . Declaration public Player Cuffer { get; set; } Property Value Type Description Player | Improve this Doc View Source CurrentItem Gets or sets the item in the player's hand, returns the default value if empty. Declaration public Item CurrentItem { get; set; } Property Value Type Description Item | Improve this Doc View Source CurrentRoom Gets the current room the player is in. Declaration public Room CurrentRoom { get; } Property Value Type Description Room | Improve this Doc View Source CurrentScp Gets or sets the player's current SCP. Declaration public PlayableScp CurrentScp { get; set; } Property Value Type Description PlayableScps.PlayableScp | Improve this Doc View Source CurrentSpectatingPlayers Gets a Player System.Collections.Generic.IEnumerable<T> of spectators that are currently spectating this Player . Declaration public IEnumerable<Player> CurrentSpectatingPlayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source CustomInfo Gets or sets the player's custom player info string. Declaration public string CustomInfo { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomUserId Gets or sets the player's custom user id. Declaration public string CustomUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Dictionary Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing all Player 's on the server. Declaration public static Dictionary<GameObject, Player> Dictionary { get; } Property Value Type Description System.Collections.Generic.Dictionary < UnityEngine.GameObject , Player > | Improve this Doc View Source DisplayNickname Gets or sets the player's display nickname. May be null. Declaration public string DisplayNickname { get; set; } Property Value Type Description System.String | Improve this Doc View Source DissonanceUserSetup Gets the player's Assets._Scripts.Dissonance.DissonanceUserSetup . Declaration public DissonanceUserSetup DissonanceUserSetup { get; } Property Value Type Description Assets._Scripts.Dissonance.DissonanceUserSetup | Improve this Doc View Source DoNotTrack Gets a value indicating whether the player can be tracked. Declaration public bool DoNotTrack { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Energy Gets or sets this player's energy. Only applies if the player is SCP-079. Declaration public float Energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Experience Gets or sets the amount of experience this player has. Only applies if the player is SCP-079. Declaration public float Experience { get; set; } Property Value Type Description System.Single | Improve this Doc View Source GameObject Gets the encapsulated UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source GlobalBadge Gets the global badge of the player, can be null if none. Declaration public Badge? GlobalBadge { get; } Property Value Type Description System.Nullable < Badge > | Improve this Doc View Source Group Gets or sets the player's group. Declaration public UserGroup Group { get; set; } Property Value Type Description UserGroup | Improve this Doc View Source GroupName Gets or sets the player's group name. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasFlashlightModuleEnabled Gets a value indicating whether the player has enabled weapon's flashlight module. Declaration public bool HasFlashlightModuleEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasHint Gets a value indicating whether the player is viewing a hint. Declaration public bool HasHint { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Health Gets or sets the player's health. If the health is greater than the MaxHealth , the MaxHealth will also be changed to match the health. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HintDisplay Gets the Hints.HintDisplay of the player. Declaration public HintDisplay HintDisplay { get; } Property Value Type Description Hints.HintDisplay | Improve this Doc View Source Id Gets or sets the player's id. Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IdsCache Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached Player and their ids. Declaration public static Dictionary<int, Player> IdsCache { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , Player > | Improve this Doc View Source InfoArea Gets or sets the player's player info area bitmask. You can hide player info elements with this. Declaration public PlayerInfoArea InfoArea { get; set; } Property Value Type Description PlayerInfoArea | Improve this Doc View Source Inventory Gets the player's InventorySystem.Inventory . Declaration public Inventory Inventory { get; } Property Value Type Description InventorySystem.Inventory | Improve this Doc View Source IPAddress Gets the player's IP address. Declaration public string IPAddress { get; } Property Value Type Description System.String | Improve this Doc View Source IsAimingDownWeapon Gets a value indicating whether the player is aiming with a weapon. Declaration public bool IsAimingDownWeapon { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAlive Gets a value indicating whether the player is alive. Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsBypassModeEnabled Gets or sets a value indicating whether the player's bypass mode is enabled. Declaration public bool IsBypassModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCHI Gets a value indicating whether or not the player's RoleType is any Chaos rank. Equivalent to checking the player's Team . Declaration public bool IsCHI { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConnected Gets a value indicating whether the player is connected to the server. Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCuffed Gets a value indicating whether the player is cuffed. Note: players can be cuffed without another player being the cuffer. Declaration public bool IsCuffed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDead Gets a value indicating whether the player is dead. Declaration public bool IsDead { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriendlyFireEnabled Gets or sets a value indicating whether the player friendly fire is enabled. This only isAllowed to deal friendly fire damage, not take friendly fire damage. Declaration public bool IsFriendlyFireEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGlobalModerator Gets a value indicating whether or not a player is a global moderator. Declaration public bool IsGlobalModerator { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGodModeEnabled Gets or sets a value indicating whether the player has godmode enabled. Declaration public bool IsGodModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHost Gets a value indicating whether the player is the host. Declaration public bool IsHost { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHuman Gets a value indicating whether the player's RoleType is any human rank (except the tutorial role). Declaration public bool IsHuman { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInPocketDimension Gets a value indicating whether the player is in the pocket dimension. Declaration public bool IsInPocketDimension { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIntercomMuted Gets or sets a value indicating whether the player is intercom muted. Declaration public bool IsIntercomMuted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInvisible Gets or sets a value indicating whether the player is invisible. Declaration public bool IsInvisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsJumping Gets a value indicating whether the player is jumping. Declaration public bool IsJumping { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the player is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNorthwoodStaff Gets a value indicating whether or not a player is Northwood staff. Declaration public bool IsNorthwoodStaff { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNTF Gets a value indicating whether the player's RoleType is any NTF rank. Equivalent to checking the player's Team . Declaration public bool IsNTF { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOverwatchEnabled Gets or sets a value indicating whether the player's overwatch is enabled. Declaration public bool IsOverwatchEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReloading Gets a value indicating whether the player is reloading a weapon. Declaration public bool IsReloading { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsScp Gets a value indicating whether the player's RoleType is any SCP rank. Declaration public bool IsScp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSneaking Gets a value indicating whether the player is sneaking. Declaration public bool IsSneaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSprinting Gets a value indicating whether the player is sprinting. Declaration public bool IsSprinting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsStaffBypassEnabled Gets a value indicating whether the staff bypass is enabled. Declaration public bool IsStaffBypassEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTransmitting Gets a value indicating whether the player is transmitting. Declaration public bool IsTransmitting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsingStamina Gets or sets a value indicating whether player should use stamina system. Declaration public bool IsUsingStamina { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVerified Gets a value indicating whether the player is verified. Declaration public bool IsVerified { get; } Property Value Type Description System.Boolean Remarks This is always false if online_mode is set to false. | Improve this Doc View Source IsVoiceChatting Gets a value indicating whether the player is voice chatting. Declaration public bool IsVoiceChatting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsWalking Gets a value indicating whether the player is walking. Declaration public bool IsWalking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Items Gets the player's items. Declaration public IReadOnlyCollection<Item> Items { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Item > | Improve this Doc View Source LeadingTeam Gets the player's LeadingTeam . Declaration public LeadingTeam LeadingTeam { get; } Property Value Type Description LeadingTeam | Improve this Doc View Source Level Gets or sets this player's level. Only applies if the player is SCP-079. Declaration public byte Level { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Levels Gets or sets the levels of SCP-079. Can be null. Only applies if the player is SCP-079. Declaration public Scp079PlayerScript.Level079[] Levels { get; set; } Property Value Type Description Scp079PlayerScript.Level079 [] | Improve this Doc View Source List Gets a list of all Player 's on the server. Declaration public static IEnumerable<Player> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source LockedDoors Gets or sets the doors this player has locked. Can be null. Only applies if the player is SCP-079. Declaration public SyncList<uint> LockedDoors { get; set; } Property Value Type Description Mirror.SyncList < System.UInt32 > | Improve this Doc View Source MaxArtificialHealth Gets or sets the player's maximum artificial health. Declaration public float MaxArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxEnergy Gets or sets this player's max energy. Only applies if the player is SCP-079. Declaration public float MaxEnergy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxHealth Gets or sets the player's maximum health. Declaration public int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MoveState Gets or sets the player's current PlayerMovementState . Declaration public PlayerMovementState MoveState { get; set; } Property Value Type Description PlayerMovementState | Improve this Doc View Source MuteStatus Gets or sets the player's Assets._Scripts.Dissonance.VoicechatMuteStatus . Declaration public VoicechatMuteStatus MuteStatus { get; set; } Property Value Type Description Assets._Scripts.Dissonance.VoicechatMuteStatus | Improve this Doc View Source NetworkIdentity Gets the player's Mirror.NetworkIdentity . Declaration public NetworkIdentity NetworkIdentity { get; } Property Value Type Description Mirror.NetworkIdentity | Improve this Doc View Source Nickname Gets the player's nickname. Declaration public string Nickname { get; } Property Value Type Description System.String | Improve this Doc View Source NoClipEnabled Gets or sets a value indicating whether the Player has No-clip enabled. Declaration public bool NoClipEnabled { get; set; } Property Value Type Description System.Boolean System.Boolean indicating status. | Improve this Doc View Source Ping Gets player's ping. Declaration public int Ping { get; } Property Value Type Description System.Int32 Return player ping. | Improve this Doc View Source Position Gets or sets the player's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Radio Gets the encapsulated ReferenceHub 's Radio . Declaration public Radio Radio { get; } Property Value Type Description Radio | Improve this Doc View Source RankColor Gets or sets the player's rank color. Declaration public string RankColor { get; set; } Property Value Type Description System.String | Improve this Doc View Source RankName Gets or sets the player's rank name. Declaration public string RankName { get; set; } Property Value Type Description System.String | Improve this Doc View Source RawUserId Gets the player's user id without the authentication. Declaration public string RawUserId { get; } Property Value Type Description System.String | Improve this Doc View Source ReferenceHub Gets the encapsulated ReferenceHub . Declaration public ReferenceHub ReferenceHub { get; } Property Value Type Description ReferenceHub | Improve this Doc View Source RemoteAdminAccess Gets a value indicating whether the player has Remote Admin access. Declaration public bool RemoteAdminAccess { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Role Gets or sets the player's RoleType . Declaration public RoleType Role { get; set; } Property Value Type Description RoleType | Improve this Doc View Source RoleColor Gets the UnityEngine.Color of the player's RoleType . Declaration public Color RoleColor { get; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source Rotation Gets or sets the player's rotation. Declaration public Vector3 Rotation { get; set; } Property Value Type Description UnityEngine.Vector3 Returns the direction he's looking at, useful for Raycasts. | Improve this Doc View Source Rotations Gets or sets the player's rotations. Declaration public Vector2 Rotations { get; set; } Property Value Type Description UnityEngine.Vector2 Returns a UnityEngine.Vector2 representing the rotation of the player. | Improve this Doc View Source Scale Gets or sets the player's scale. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Sender Gets the player's command sender instance. Declaration public PlayerCommandSender Sender { get; } Property Value Type Description RemoteAdmin.PlayerCommandSender | Improve this Doc View Source SessionVariables Gets the dictionary of player's session variables. It is not being saved on player disconnect. Declaration public Dictionary<string, object> SessionVariables { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Side Gets the player's Side they're currently in. Declaration public Side Side { get; } Property Value Type Description Side | Improve this Doc View Source Speaker Gets or sets the speaker this player is currently using. Can be null. Only applies if the player is SCP-079. Declaration public string Speaker { get; set; } Property Value Type Description System.String | Improve this Doc View Source SpeakingFlags Gets or sets the player's Assets._Scripts.Dissonance.SpeakingFlags . Note: voicechat channels are handled by the client, therefore any changes will be ignored. Declaration public SpeakingFlags SpeakingFlags { get; set; } Property Value Type Description Assets._Scripts.Dissonance.SpeakingFlags | Improve this Doc View Source SpectatedPlayer Gets or sets currently spectated player by this Player . May be null. Declaration public Player SpectatedPlayer { get; set; } Property Value Type Description Player | Improve this Doc View Source Stamina Gets the Stamina class. Declaration public Stamina Stamina { get; } Property Value Type Description Stamina | Improve this Doc View Source TargetGhostsHashSet Gets a list of player ids who can't see the player. Declaration public HashSet<int> TargetGhostsHashSet { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Int32 > | Improve this Doc View Source Team Gets the player's Team . Declaration public Team Team { get; } Property Value Type Description Team | Improve this Doc View Source UnitName Gets or sets the player's unit name. Declaration public string UnitName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId Gets the player's user id. Declaration public string UserId { get; } Property Value Type Description System.String | Improve this Doc View Source UserIdsCache Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached Player and their user ids. Declaration public static Dictionary<string, Player> UserIdsCache { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , Player > | Improve this Doc View Source Zone Gets the current zone the player is in. Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source AddAmmo(AmmoType, UInt16) Adds the amount of a specified AmmoType to the player's inventory. Declaration public void AddAmmo(AmmoType ammoType, ushort amount) Parameters Type Name Description AmmoType ammoType The AmmoType to be added. System.UInt16 amount The amount of ammo to be added. | Improve this Doc View Source AddItem(Item) Add an item to the player's inventory. Declaration public void AddItem(Item item) Parameters Type Name Description Item item The item to be added. | Improve this Doc View Source AddItem(Item, Int32) Add the amount of items to the player's inventory. Declaration public void AddItem(Item item, int amount) Parameters Type Name Description Item item The item to be added. System.Int32 amount The amount of items to be added. | Improve this Doc View Source AddItem(Pickup) Adds an item to the player's inventory. Declaration public Item AddItem(Pickup pickup) Parameters Type Name Description Pickup pickup The Pickup of the item to be added. Returns Type Description Item The Item that was added. | Improve this Doc View Source AddItem(ItemBase, Item) Add an item to the player's inventory. Declaration public Item AddItem(ItemBase itemBase, Item item = null) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase The item to be added. Item item The Item object of the item. Returns Type Description Item The item that was added. | Improve this Doc View Source AddItem(ItemType) Add an item of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public Item AddItem(ItemType itemType) Parameters Type Name Description ItemType itemType The item to be added. Returns Type Description Item The InventorySystem.Items.ItemBase given to the player. | Improve this Doc View Source AddItem(ItemType, Int32) Add the amount of items of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public void AddItem(ItemType itemType, int amount) Parameters Type Name Description ItemType itemType The item to be added. System.Int32 amount The amount of items to be added. | Improve this Doc View Source AddItem(List<Item>) Add the list of items to the player's inventory. Declaration public void AddItem(List<Item> items) Parameters Type Name Description System.Collections.Generic.List < Item > items The list of items to be added. | Improve this Doc View Source AddItem(List<ItemType>) Add the list of items of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public void AddItem(List<ItemType> items) Parameters Type Name Description System.Collections.Generic.List < ItemType > items The list of items to be added. | Improve this Doc View Source ApplyRandomEffect(Single, Boolean) Enables a random EffectType on the player. Declaration public EffectType ApplyRandomEffect(float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Returns Type Description EffectType A EffectType that was given to the player. | Improve this Doc View Source Ban(Int32, String, String) Bans the player. Declaration public void Ban(int duration, string reason, string issuer = \"Console\") Parameters Type Name Description System.Int32 duration The ban duration. System.String reason The ban reason. System.String issuer The ban issuer nickname. | Improve this Doc View Source BlinkTag() Blink the player's tag. Declaration public IEnumerator<float> BlinkTag() Returns Type Description System.Collections.Generic.IEnumerator < System.Single > Used to wait. | Improve this Doc View Source Broadcast(Broadcast, Boolean) Broadcasts the given Broadcast to the player. Declaration public void Broadcast(Broadcast broadcast, bool shouldClearPrevious = false) Parameters Type Name Description Broadcast broadcast The Broadcast to be broadcasted. System.Boolean shouldClearPrevious Clears all player's broadcasts before sending the new one. | Improve this Doc View Source Broadcast(UInt16, String, Broadcast.BroadcastFlags, Boolean) A simple broadcast to a ReferenceHub . Doesn't get logged to the console and can be monospaced. Declaration public void Broadcast(ushort duration, string message, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false) Parameters Type Name Description System.UInt16 duration The broadcast duration. System.String message The message to be broadcasted. Broadcast.BroadcastFlags type The broadcast type. System.Boolean shouldClearPrevious Clears all player's broadcasts before sending the new one. | Improve this Doc View Source ChangeEffectIntensity(EffectType, Byte, Single) Changes the intensity of a CustomPlayerEffects.PlayerEffect . Declaration public void ChangeEffectIntensity(EffectType type, byte intensity, float duration = 0F) Parameters Type Name Description EffectType type The EffectType to change. System.Byte intensity The new intensity to use. System.Single duration The new duration to add to the effect. | Improve this Doc View Source ChangeEffectIntensity(String, Byte, Single) Changes the intensity of a CustomPlayerEffects.PlayerEffect . Declaration public void ChangeEffectIntensity(string effect, byte intensity, float duration = 0F) Parameters Type Name Description System.String effect The name of the CustomPlayerEffects.PlayerEffect to enable. System.Byte intensity The intensity of the effect. System.Single duration The new length of the effect. Defaults to infinite length. | Improve this Doc View Source ChangeEffectIntensity<T>(Byte) Changes the intensity of a CustomPlayerEffects.PlayerEffect . Declaration public void ChangeEffectIntensity<T>(byte intensity) where T : PlayerEffect Parameters Type Name Description System.Byte intensity The intensity of the effect. Type Parameters Name Description T The CustomPlayerEffects.PlayerEffect to change the intensity of. | Improve this Doc View Source ClearBroadcasts() Clears the player's brodcast. Doesn't get logged to the console. Declaration public void ClearBroadcasts() | Improve this Doc View Source ClearInventory(Boolean) Clears the player's inventory, including all ammo and items. Declaration public void ClearInventory(bool destroy = true) Parameters Type Name Description System.Boolean destroy Whether ot not to fully destroy the old items. | Improve this Doc View Source CountItem(ItemType) Counts how many items of a certain ItemType a player has. Declaration public int CountItem(ItemType item) Parameters Type Name Description ItemType item The item to search for. Returns Type Description System.Int32 How many items of that ItemType the player has. | Improve this Doc View Source DisableAllEffects() Disables all currently active CustomPlayerEffects.PlayerEffect . Declaration public void DisableAllEffects() | Improve this Doc View Source DisableEffect(EffectType) Disables a specific EffectType on the player. Declaration public void DisableEffect(EffectType effect) Parameters Type Name Description EffectType effect The EffectType to disable. | Improve this Doc View Source DisableEffect<T>() Disables a specific CustomPlayerEffects.PlayerEffect on the player. Declaration public void DisableEffect<T>() where T : PlayerEffect Type Parameters Name Description T The CustomPlayerEffects.PlayerEffect to disable. | Improve this Doc View Source DisableEffects(IEnumerable<EffectType>) Disables a System.Collections.Generic.IEnumerable<T> of EffectType on the player. Declaration public void DisableEffects(IEnumerable<EffectType> effects) Parameters Type Name Description System.Collections.Generic.IEnumerable < EffectType > effects The System.Collections.Generic.IEnumerable<T> of EffectType to disable. | Improve this Doc View Source Disconnect(String) Disconnects a ReferenceHub . Declaration public void Disconnect(string reason = null) Parameters Type Name Description System.String reason The disconnection reason. | Improve this Doc View Source DropAmmo(AmmoType, UInt16, Boolean) Drops a specific AmmoType out of the player's inventory. Declaration public bool DropAmmo(AmmoType ammoType, ushort amount, bool checkMinimals = false) Parameters Type Name Description AmmoType ammoType The AmmoType that will be dropped. System.UInt16 amount The amount of ammo that will be dropped. System.Boolean checkMinimals Whether ammo limits will be taken into consideration. Returns Type Description System.Boolean Whether ammo was dropped. | Improve this Doc View Source DropHeldItem() Drops the held item. Declaration public void DropHeldItem() | Improve this Doc View Source DropItem(Item) Drops an item from the player's inventory. Declaration public void DropItem(Item item) Parameters Type Name Description Item item The item to be dropped. | Improve this Doc View Source DropItems() Drops all items in the player's inventory, including all ammo and items. Declaration public void DropItems() | Improve this Doc View Source EnableEffect(PlayerEffect, Single, Boolean) Enables a CustomPlayerEffects.PlayerEffect on the player. Declaration public void EnableEffect(PlayerEffect effect, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description CustomPlayerEffects.PlayerEffect effect The name of the CustomPlayerEffects.PlayerEffect to enable. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. | Improve this Doc View Source EnableEffect(EffectType, Single, Boolean) Enables a EffectType on the player. Declaration public void EnableEffect(EffectType effect, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description EffectType effect The EffectType to enable. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. | Improve this Doc View Source EnableEffect(String, Single, Boolean) Enables a CustomPlayerEffects.PlayerEffect on the player. Declaration public bool EnableEffect(string effect, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description System.String effect The name of the CustomPlayerEffects.PlayerEffect to enable. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Returns Type Description System.Boolean A bool indicating whether the effect was valid and successfully enabled. | Improve this Doc View Source EnableEffect<T>(Single, Boolean) Enables a CustomPlayerEffects.PlayerEffect on the player. Declaration public void EnableEffect<T>(float duration = 0F, bool addDurationIfActive = false) where T : PlayerEffect Parameters Type Name Description System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Type Parameters Name Description T The CustomPlayerEffects.PlayerEffect to enable. | Improve this Doc View Source EnableEffects(IEnumerable<EffectType>, Single, Boolean) Enables a System.Collections.Generic.IEnumerable<T> of EffectType on the player. Declaration public void EnableEffects(IEnumerable<EffectType> effects, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < EffectType > effects The System.Collections.Generic.IEnumerable<T> of EffectType to enable. System.Single duration The amount of time the effects will be active for. System.Boolean addDurationIfActive If an effect is already active, setting to true will add this duration onto the effect. | Improve this Doc View Source Finalize() Finalizes an instance of the Player class. Declaration protected void Finalize() | Improve this Doc View Source Get(CommandSender) Gets the Player belonging to the CommandSender, if any. Declaration public static Player Get(CommandSender sender) Parameters Type Name Description CommandSender sender The command sender. Returns Type Description Player Returns a player or null if not found. | Improve this Doc View Source Get(ICommandSender) Gets the Player belonging to the ICommandSender, if any. Declaration public static Player Get(ICommandSender sender) Parameters Type Name Description CommandSystem.ICommandSender sender The command sender. Returns Type Description Player Returns a player or null if not found. | Improve this Doc View Source Get(Side) Gets a Player System.Collections.Generic.IEnumerable<T> filtered by side. Declaration public static IEnumerable<Player> Get(Side side) Parameters Type Name Description Side side The players' side. Returns Type Description System.Collections.Generic.IEnumerable < Player > Returns the filtered System.Collections.Generic.IEnumerable<T> . | Improve this Doc View Source Get(ReferenceHub) Gets the Player belonging to the ReferenceHub, if any. Declaration public static Player Get(ReferenceHub referenceHub) Parameters Type Name Description ReferenceHub referenceHub The player's ReferenceHub . Returns Type Description Player Returns a player or null if not found. | Improve this Doc View Source Get(RoleType) Gets a Player System.Collections.Generic.IEnumerable<T> filtered by role. Declaration public static IEnumerable<Player> Get(RoleType role) Parameters Type Name Description RoleType role The players' role. Returns Type Description System.Collections.Generic.IEnumerable < Player > Returns the filtered System.Collections.Generic.IEnumerable<T> . | Improve this Doc View Source Get(Int32) Gets the player belonging to the player with the specified id. Declaration public static Player Get(int id) Parameters Type Name Description System.Int32 id The player id. Returns Type Description Player Returns the player found or null if not found. | Improve this Doc View Source Get(String) Gets the player by his identifier. Declaration public static Player Get(string args) Parameters Type Name Description System.String args The player's nickname, steamID64 or Discord ID. Returns Type Description Player Returns the player found or null if not found. | Improve this Doc View Source Get(UInt32) Gets the Player belonging to a specific NetID, if any. Declaration public static Player Get(uint netId) Parameters Type Name Description System.UInt32 netId The player's Mirror.NetworkIdentity.netId . Returns Type Description Player The player owning the netId, or null if not found. | Improve this Doc View Source Get(Team) Gets a Player System.Collections.Generic.IEnumerable<T> filtered by team. Declaration public static IEnumerable<Player> Get(Team team) Parameters Type Name Description Team team The players' team. Returns Type Description System.Collections.Generic.IEnumerable < Player > Returns the filtered System.Collections.Generic.IEnumerable<T> . | Improve this Doc View Source Get(GameObject) Gets the Player belonging to the GameObject, if any. Declaration public static Player Get(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The player's UnityEngine.GameObject . Returns Type Description Player Returns a player or null if not found. | Improve this Doc View Source GetAmmo(AmmoType) Gets the ammo count of a specified AmmoType in a player's inventory. Declaration public ushort GetAmmo(AmmoType ammoType) Parameters Type Name Description AmmoType ammoType The AmmoType to be searched for in the player's inventory. Returns Type Description System.UInt16 The specified AmmoType count. | Improve this Doc View Source GetEffect(EffectType) Gets an instance of CustomPlayerEffects.PlayerEffect by EffectType . Declaration public PlayerEffect GetEffect(EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description CustomPlayerEffects.PlayerEffect The CustomPlayerEffects.PlayerEffect . | Improve this Doc View Source GetEffectActive<T>() Gets a System.Boolean describing whether the given CustomPlayerEffects.PlayerEffect is currently enabled. Declaration public bool GetEffectActive<T>() where T : PlayerEffect Returns Type Description System.Boolean A System.Boolean determining whether the player effect is active. Type Parameters Name Description T The CustomPlayerEffects.PlayerEffect to check. | Improve this Doc View Source GetEffectIntensity<T>() Gets a System.Byte indicating the intensity of the given CustomPlayerEffects.PlayerEffect . Declaration public byte GetEffectIntensity<T>() where T : PlayerEffect Returns Type Description System.Byte The intensity of the effect. Type Parameters Name Description T The CustomPlayerEffects.PlayerEffect to check. Exceptions Type Condition System.ArgumentException Thrown if the given type is not a valid CustomPlayerEffects.PlayerEffect . | Improve this Doc View Source Handcuff(Player) Handcuff the player. Declaration public void Handcuff(Player cuffer) Parameters Type Name Description Player cuffer The cuffer player. | Improve this Doc View Source HasItem(Item) Indicates whether the player has an item. Declaration public bool HasItem(Item item) Parameters Type Name Description Item item The item to search for. Returns Type Description System.Boolean true, if the player has it; otherwise, false. | Improve this Doc View Source HasItem(ItemType) Indicates whether the player has an item type. Declaration public bool HasItem(ItemType type) Parameters Type Name Description ItemType type The type to search for. Returns Type Description System.Boolean true, if the player has it; otherwise, false. | Improve this Doc View Source Heal(Single, Boolean) Heals the player. Declaration public void Heal(float amount, bool overrideMaxHealth = false) Parameters Type Name Description System.Single amount The amount of health to heal. System.Boolean overrideMaxHealth Whether healing should exceed their max health. | Improve this Doc View Source Hurt(DamageHandlerBase) Hurts the player. Declaration public void Hurt(DamageHandlerBase damageHandlerBase) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase damageHandlerBase The PlayerStatsSystem.DamageHandlerBase used to deal damage. | Improve this Doc View Source Hurt(String, Single, String) Hurts the player. Declaration public void Hurt(string damageReason, float damage, string cassieAnnouncement = \"\") Parameters Type Name Description System.String damageReason The reason for the damage being dealt. System.Single damage The amount of damage to deal. System.String cassieAnnouncement The cassie announcement to make. | Improve this Doc View Source Kick(String, String) Kicks the player. Declaration public void Kick(string reason, string issuer = \"Console\") Parameters Type Name Description System.String reason The kick reason. System.String issuer The kick issuer nickname. | Improve this Doc View Source Kill(String, String) Kills the player. Declaration public void Kill(string deathReason, string cassieAnnouncement = \"\") Parameters Type Name Description System.String deathReason The reason the player has been killed. System.String cassieAnnouncement The cassie announcement to make upon death. | Improve this Doc View Source OpenReportWindow(String) Opens the report window. Declaration public void OpenReportWindow(string text) Parameters Type Name Description System.String text The text to send. | Improve this Doc View Source PlaceTantrum() Places a Tantrum (Scp173's ability) under the player. Declaration public GameObject PlaceTantrum() Returns Type Description UnityEngine.GameObject The tantrum's GameObject . | Improve this Doc View Source ReloadWeapon() Forces the player to reload their current weapon. Declaration public void ReloadWeapon() Exceptions Type Condition System.InvalidOperationException If the item is not a firearm. | Improve this Doc View Source RemoteAdminMessage(String, Boolean, String) Sends a message to the player's Remote Admin console. Declaration public void RemoteAdminMessage(string message, bool success = true, string pluginName = null) Parameters Type Name Description System.String message The message to be sent. System.Boolean success Indicates whether the message should be highlighted as success. System.String pluginName The plugin name. | Improve this Doc View Source RemoveHandcuffs() Removes handcuffs. Declaration public void RemoveHandcuffs() | Improve this Doc View Source RemoveHeldItem() Removes the held InventorySystem.Items.ItemBase from the player's inventory. Declaration public bool RemoveHeldItem() Returns Type Description System.Boolean Returns a value indicating whether the InventorySystem.Items.ItemBase was removed. | Improve this Doc View Source RemoveItem(Item, Boolean) Removes an Item from the player's inventory. Declaration public bool RemoveItem(Item item, bool destroy = true) Parameters Type Name Description Item item The Item to remove. System.Boolean destroy Whether or not to destroy the item. Returns Type Description System.Boolean A value indicating whether the Item was removed. | Improve this Doc View Source ResetInventory(List<Item>) Resets the player's inventory to the provided list of items, clearing any items it already possess. Declaration public void ResetInventory(List<Item> newItems) Parameters Type Name Description System.Collections.Generic.List < Item > newItems The new items that have to be added to the inventory. | Improve this Doc View Source ResetInventory(List<ItemType>) Resets the player's inventory to the provided list of items, clearing any items it already possess. Declaration public void ResetInventory(List<ItemType> newItems) Parameters Type Name Description System.Collections.Generic.List < ItemType > newItems The new items that have to be added to the inventory. | Improve this Doc View Source ResetStamina() Resets the player's stamina. Declaration public void ResetStamina() | Improve this Doc View Source SendConsoleMessage(Player, String, String) Sends a console message to a Player . Declaration public void SendConsoleMessage(Player target, string message, string color) Parameters Type Name Description Player target The message target. System.String message The message to be sent. System.String color The message color. | Improve this Doc View Source SendConsoleMessage(String, String) Sends a console message to the player's console. Declaration public void SendConsoleMessage(string message, string color) Parameters Type Name Description System.String message The message to be sent. System.String color The message color. | Improve this Doc View Source SetAmmo(AmmoType, UInt16) Sets the amount of a specified AmmoType to the player's inventory. Declaration public void SetAmmo(AmmoType ammoType, ushort amount) Parameters Type Name Description AmmoType ammoType The AmmoType to be set. System.UInt16 amount The amount of ammo to be set. | Improve this Doc View Source SetCamera(Camera079) Sets the camera the player is currently located at. Only applies if the player is SCP-079. Declaration public void SetCamera(Camera079 camera) Parameters Type Name Description Camera079 camera The Camera079 object to switch to. | Improve this Doc View Source SetCamera(UInt16) Sets the camera the player is currently located at. Only applies if the player is SCP-079. Declaration public void SetCamera(ushort cameraId) Parameters Type Name Description System.UInt16 cameraId Camera ID. | Improve this Doc View Source SetRank(String, UserGroup) Sets the player's rank. Declaration public void SetRank(string name, UserGroup group) Parameters Type Name Description System.String name The rank name to be set. UserGroup group The group to be set. | Improve this Doc View Source SetRole(RoleType, SpawnReason, Boolean) Sets the player's RoleType . Declaration public void SetRole(RoleType newRole, SpawnReason reason = SpawnReason.ForceClass, bool lite = false) Parameters Type Name Description RoleType newRole The new RoleType to be set. SpawnReason reason The SpawnReason defining why the player's role was changed. System.Boolean lite Indicates whether it should preserve the position and inventory after changing the role. | Improve this Doc View Source ShowHint(String, Single) Simple way to show a hint to the player. Declaration public void ShowHint(string message, float duration = 3F) Parameters Type Name Description System.String message The message to be shown. System.Single duration The duration the text will be on screen. | Improve this Doc View Source ShowHitMarker() Sends a HitMarker to the player. Declaration [Obsolete(\"Use Player::ShowHitMarker(float) instead.\", true)] public void ShowHitMarker() | Improve this Doc View Source ShowHitMarker(Single) Sends a HitMarker to the player. Declaration public void ShowHitMarker(float size = 1F) Parameters Type Name Description System.Single size The size of the hitmarker (Do not exceed Hitmarker.MaxSize ). | Improve this Doc View Source ThrowGrenade(GrenadeType, Boolean) Causes the player to throw a grenade. Declaration public Throwable ThrowGrenade(GrenadeType type, bool fullForce = true) Parameters Type Name Description GrenadeType type The GrenadeType to be thrown. System.Boolean fullForce Whether to throw with full or half force. Returns Type Description Throwable The Throwable item that was spawned. | Improve this Doc View Source ThrowItem(Throwable, Boolean) Throw an item. Declaration public void ThrowItem(Throwable throwable, bool fullForce = true) Parameters Type Name Description Throwable throwable The Throwable to be thrown. System.Boolean fullForce Whether to throw with full or half force. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source TryGetEffect(EffectType, out PlayerEffect) Tries to get an instance of CustomPlayerEffects.PlayerEffect by EffectType . Declaration public bool TryGetEffect(EffectType effect, out PlayerEffect playerEffect) Parameters Type Name Description EffectType effect The EffectType . CustomPlayerEffects.PlayerEffect playerEffect The CustomPlayerEffects.PlayerEffect . Returns Type Description System.Boolean A bool indicating whether the playerEffect was successfully gotten. | Improve this Doc View Source TryGetItem(UInt16, out ItemBase) Tries to get an item from a player's inventory. Declaration public bool TryGetItem(ushort serial, out ItemBase item) Parameters Type Name Description System.UInt16 serial The System.UInt16 unique identifier of the item. InventorySystem.Items.ItemBase item The InventorySystem.Items.ItemBase found. Null if it doesn't exist. Returns Type Description System.Boolean True if the item is found. | Improve this Doc View Source TryGetSessionVariable<T>(String, out T) Safely gets an System.Object from SessionVariables , then casts it to T . Declaration public bool TryGetSessionVariable<T>(string key, out T result) Parameters Type Name Description System.String key The key of the object to get. T result When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter is used. Returns Type Description System.Boolean true if the SessionVariables contains an element with the specified key; otherwise, false . Type Parameters Name Description T The returned object type. Extension Methods Permissions.CheckPermission(Player, String) Extensions.ResetInventory(Player, List<String>, Boolean) Extensions.GetCustomRoles(Player) MirrorExtensions.Shake(Player) MirrorExtensions.PlayBeepSound(Player) MirrorExtensions.SetPlayerInfoForTargetOnly(Player, Player, String) MirrorExtensions.PlayGunSound(Player, Vector3, ItemType, Byte, Byte) MirrorExtensions.ChangeAppearance(Player, RoleType) MirrorExtensions.PlayCassieAnnouncement(Player, String, Boolean, Boolean) MirrorExtensions.ChangeWalkingSpeed(Player, Single, Boolean) MirrorExtensions.ChangeRunningSpeed(Player, Single, Boolean) MirrorExtensions.SendFakeSyncVar(Player, NetworkIdentity, Type, String, Object) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Plugin-1.html": {
    "href": "api/Exiled.API.Features.Plugin-1.html",
    "title": "Class Plugin<TConfig> | EXILED Docs",
    "keywords": "Class Plugin<TConfig> Expose how a plugin has to be made. Inheritance System.Object Plugin<TConfig> Plugin<TConfig, TTranslation> CreditTags CustomItems CustomRoles Events Permissions Implements IPlugin <TConfig> System.IComparable < IPlugin < IConfig >> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public abstract class Plugin<TConfig> : IPlugin<TConfig>, IComparable<IPlugin<IConfig>> where TConfig : IConfig, new() Type Parameters Name Description TConfig The config type. Constructors | Improve this Doc View Source Plugin() Initializes a new instance of the Plugin<TConfig> class. Declaration public Plugin() Properties | Improve this Doc View Source Assembly Declaration public Assembly Assembly { get; protected set; } Property Value Type Description System.Reflection.Assembly | Improve this Doc View Source Author Declaration public virtual string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Commands Declaration public Dictionary<Type, Dictionary<Type, ICommand>> Commands { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < System.Type , CommandSystem.ICommand >> | Improve this Doc View Source Config Declaration public TConfig Config { get; } Property Value Type Description TConfig | Improve this Doc View Source InternalTranslation Declaration public ITranslation InternalTranslation { get; protected set; } Property Value Type Description ITranslation | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Prefix Declaration public virtual string Prefix { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Declaration public virtual PluginPriority Priority { get; } Property Value Type Description PluginPriority | Improve this Doc View Source RequiredExiledVersion Declaration public virtual Version RequiredExiledVersion { get; } Property Value Type Description System.Version | Improve this Doc View Source Version Declaration public virtual Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source CompareTo(IPlugin<IConfig>) Declaration public int CompareTo(IPlugin<IConfig> other) Parameters Type Name Description IPlugin < IConfig > other Returns Type Description System.Int32 | Improve this Doc View Source OnDisabled() Declaration public virtual void OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public virtual void OnEnabled() | Improve this Doc View Source OnRegisteringCommands() Declaration public virtual void OnRegisteringCommands() | Improve this Doc View Source OnReloaded() Declaration public virtual void OnReloaded() | Improve this Doc View Source OnUnregisteringCommands() Declaration public virtual void OnUnregisteringCommands() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Plugin-2.html": {
    "href": "api/Exiled.API.Features.Plugin-2.html",
    "title": "Class Plugin<TConfig, TTranslation> | EXILED Docs",
    "keywords": "Class Plugin<TConfig, TTranslation> Expose how a plugin has to be made. Inheritance System.Object Plugin <TConfig> Plugin<TConfig, TTranslation> Implements IPlugin <TConfig> System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<TConfig>.Assembly Plugin<TConfig>.Name Plugin<TConfig>.Prefix Plugin<TConfig>.Author Plugin<TConfig>.Priority Plugin<TConfig>.Version Plugin<TConfig>.RequiredExiledVersion Plugin<TConfig>.Commands Plugin<TConfig>.Config Plugin<TConfig>.InternalTranslation Plugin<TConfig>.OnEnabled() Plugin<TConfig>.OnDisabled() Plugin<TConfig>.OnReloaded() Plugin<TConfig>.OnRegisteringCommands() Plugin<TConfig>.OnUnregisteringCommands() Plugin<TConfig>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public abstract class Plugin<TConfig, TTranslation> : Plugin<TConfig>, IPlugin<TConfig>, IComparable<IPlugin<IConfig>> where TConfig : IConfig, new() where TTranslation : ITranslation, new() Type Parameters Name Description TConfig The config type. TTranslation The translation type. Constructors | Improve this Doc View Source Plugin() Initializes a new instance of the Plugin<TConfig, TTranslation> class. Declaration public Plugin() Properties | Improve this Doc View Source Translation Gets the plugin translations. Declaration public TTranslation Translation { get; } Property Value Type Description TTranslation Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Ragdoll.html": {
    "href": "api/Exiled.API.Features.Ragdoll.html",
    "title": "Class Ragdoll | EXILED Docs",
    "keywords": "Class Ragdoll A set of tools to handle the ragdolls more easily. Inheritance System.Object Ragdoll Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Ragdoll Constructors | Improve this Doc View Source Ragdoll(Player, DamageHandlerBase, Boolean) Initializes a new instance of the Ragdoll class. Declaration public Ragdoll(Player player, DamageHandlerBase handler, bool canBeSpawned = false) Parameters Type Name Description Player player The ragdoll's Player . PlayerStatsSystem.DamageHandlerBase handler The player's PlayerStatsSystem.DamageHandlerBase . System.Boolean canBeSpawned A value that represents whether the ragdoll can be spawned. | Improve this Doc View Source Ragdoll(RagdollInfo, Boolean) Initializes a new instance of the Ragdoll class. Declaration public Ragdoll(RagdollInfo ragdollInfo, bool canBeSpawned = false) Parameters Type Name Description RagdollInfo ragdollInfo The ragdoll's RagdollInfo . System.Boolean canBeSpawned A value that represents whether the ragdoll can be spawned. Properties | Improve this Doc View Source AllowAnimations Gets or sets a value indicating whether or not the ragdoll can play animations. Declaration public bool AllowAnimations { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AllowCleanUp Gets or sets a value indicating whether or not the clean up event can be executed. Declaration public static bool AllowCleanUp { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AllowRecall Gets a value indicating whether or not the ragdoll is respawnable by SCP-049. Declaration public bool AllowRecall { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Base Gets the Ragdoll . Declaration public Ragdoll Base { get; } Property Value Type Description Ragdoll | Improve this Doc View Source CanBeCleanedUp Gets or sets a value indicating whether can be cleaned up. Declaration public bool CanBeCleanedUp { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CleanUpTime Gets or sets the Ragdoll s clean up time. Declaration public static int CleanUpTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DamageHandler Gets the ragdoll's PlayerStatsSystem.DamageHandlerBase . Declaration public DamageHandlerBase DamageHandler { get; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source DeathAnimations Gets all ragdoll's DeathAnimations.DeathAnimation []. Declaration public DeathAnimation[] DeathAnimations { get; } Property Value Type Description DeathAnimations.DeathAnimation [] | Improve this Doc View Source DeathReason Gets the ragdoll's death reason. Declaration public string DeathReason { get; } Property Value Type Description System.String | Improve this Doc View Source GameObject Gets the ragdoll's GameObject. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsCleanedUp Gets a value indicating whether the ragdoll has been already cleaned up. Declaration public bool IsCleanedUp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPlayingAnimations Gets a value indicating whether the ragdoll is currently playing animations. Declaration public bool IsPlayingAnimations { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the ragdoll's name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NetworkInfo Gets or sets the ragdoll's RagdollInfo . Declaration public RagdollInfo NetworkInfo { get; set; } Property Value Type Description RagdollInfo | Improve this Doc View Source Owner Gets the owner Player . Can be null if the ragdoll does not have an owner. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the ragdoll's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Role Gets the RoleType of the ragdoll. Declaration public RoleType Role { get; } Property Value Type Description RoleType | Improve this Doc View Source Room Gets the Room the ragdoll is located in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the ragdoll's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the ragdoll's scale. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source SpecialRigidbodies Gets the ragdoll's Ragdoll.SpecialRigidbody []. Declaration public Ragdoll.SpecialRigidbody[] SpecialRigidbodies { get; } Property Value Type Description Ragdoll.SpecialRigidbody [] Methods | Improve this Doc View Source Delete() Deletes the ragdoll. Declaration public void Delete() | Improve this Doc View Source Get(Player) Gets the System.Collections.Generic.IEnumerable<T> of Ragdoll belonging to the Player , if any. Declaration public static IEnumerable<Ragdoll> Get(Player player) Parameters Type Name Description Player player The Player to get. Returns Type Description System.Collections.Generic.IEnumerable < Ragdoll > A System.Collections.Generic.IEnumerable<T> of Ragdoll . | Improve this Doc View Source Get(Ragdoll) Gets the Ragdoll belonging to the Ragdoll , if any. Declaration public static Ragdoll Get(Ragdoll ragdoll) Parameters Type Name Description Ragdoll ragdoll The Ragdoll to get. Returns Type Description Ragdoll A Ragdoll or null if not found. | Improve this Doc View Source Get(IEnumerable<Player>) Gets the System.Collections.Generic.IEnumerable<T> of Ragdoll belonging to the System.Collections.Generic.IEnumerable<T> of Player , if any. Declaration public static IEnumerable<Ragdoll> Get(IEnumerable<Player> players) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The Player s to get. Returns Type Description System.Collections.Generic.IEnumerable < Ragdoll > A System.Collections.Generic.IEnumerable<T> of Ragdoll . | Improve this Doc View Source Spawn() Spawns the ragdoll. Declaration public void Spawn() | Improve this Doc View Source Spawn(Player, DamageHandlerBase) Spawns a Ragdoll on the map. Declaration public static void Spawn(Player player, DamageHandlerBase handler) Parameters Type Name Description Player player The ragdoll's Player . PlayerStatsSystem.DamageHandlerBase handler The player's PlayerStatsSystem.DamageHandlerBase . | Improve this Doc View Source Spawn(RagdollInfo) Spawns a Ragdoll on the map. Declaration public static void Spawn(RagdollInfo ragdollInfo) Parameters Type Name Description RagdollInfo ragdollInfo The ragdoll's RagdollInfo . | Improve this Doc View Source UnSpawn() Un-spawns the ragdoll. Declaration public void UnSpawn() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Respawn.html": {
    "href": "api/Exiled.API.Features.Respawn.html",
    "title": "Class Respawn | EXILED Docs",
    "keywords": "Class Respawn A set of tools to handle team respawns more easily. Inheritance System.Object Respawn Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Respawn Properties | Improve this Doc View Source ChaosTickets Gets the amount of spawn tickets belonging to the Chaos Insurgency. Declaration public static int ChaosTickets { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Controller Gets the actual Respawning.RespawnEffectsController . Declaration public static RespawnEffectsController Controller { get; } Property Value Type Description Respawning.RespawnEffectsController | Improve this Doc View Source IsSpawning Gets a value indicating whether or not a team is currently being spawned or the animations are playing for a team. Declaration public static bool IsSpawning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NextKnownTeam Gets the next known Respawning.SpawnableTeamType that will spawn. Declaration public static SpawnableTeamType NextKnownTeam { get; } Property Value Type Description Respawning.SpawnableTeamType | Improve this Doc View Source NtfTickets Gets the amount of spawn tickets belonging to the NTF. Declaration public static int NtfTickets { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TimeUntilRespawn Gets the amount of seconds before the next respawn will occur. Declaration public static int TimeUntilRespawn { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ForceWave(SpawnableTeamType, Boolean) Forces a spawn of the given Respawning.SpawnableTeamType . Declaration public static void ForceWave(SpawnableTeamType team, bool playEffects = false) Parameters Type Name Description Respawning.SpawnableTeamType team The Respawning.SpawnableTeamType to spawn. System.Boolean playEffects Whether or not effects will be played with the spawn. | Improve this Doc View Source GrantTickets(SpawnableTeamType, Int32, Boolean) Grants tickets to a Respawning.SpawnableTeamType . Declaration public static bool GrantTickets(SpawnableTeamType team, int amount, bool overrideLocks = false) Parameters Type Name Description Respawning.SpawnableTeamType team The Respawning.SpawnableTeamType to grant tickets to. System.Int32 amount The amount of tickets to grant. System.Boolean overrideLocks Whether or not to override ticket locks. Returns Type Description System.Boolean Whether or not tickets were granted successfully. | Improve this Doc View Source PlayEffect(RespawnEffectType) Play an effect when a certain class spawns. Declaration public static void PlayEffect(RespawnEffectType effect) Parameters Type Name Description RespawnEffectType effect The effect to be played. | Improve this Doc View Source PlayEffect(Byte) Play an effect when a certain class spawns. Declaration public static void PlayEffect(byte effect) Parameters Type Name Description System.Byte effect The effect to be played. | Improve this Doc View Source PlayEffects(RespawnEffectType[]) Play effects when a certain class spawns. Declaration public static void PlayEffects(RespawnEffectType[] effects) Parameters Type Name Description RespawnEffectType [] effects The effects to be played. | Improve this Doc View Source PlayEffects(Byte[]) Play effects when a certain class spawns. Declaration public static void PlayEffects(byte[] effects) Parameters Type Name Description System.Byte [] effects The effects to be played. | Improve this Doc View Source SummonChaosInsurgencyVan(Boolean) Summons the ChaosInsurgency van. Declaration public static void SummonChaosInsurgencyVan(bool playMusic = true) Parameters Type Name Description System.Boolean playMusic Whether or not to play the Chaos Insurgency spawn music. | Improve this Doc View Source SummonNtfChopper() Summons the NTF chopper. Declaration public static void SummonNtfChopper()"
  },
  "api/Exiled.API.Features.Room.html": {
    "href": "api/Exiled.API.Features.Room.html",
    "title": "Class Room | EXILED Docs",
    "keywords": "Class Room The in-game room. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Room Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Room : MonoBehaviour Properties | Improve this Doc View Source Cameras Gets a System.Collections.Generic.IEnumerable<T> of Camera079 in the Room . Declaration public IEnumerable<Camera079> Cameras { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Camera079 > | Improve this Doc View Source Color Gets or sets the color of the room's lights by changing the warhead color. Declaration public Color Color { get; set; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source Doors Gets a System.Collections.Generic.IEnumerable<T> of Door in the Room . Declaration public IEnumerable<Door> Doors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Door > | Improve this Doc View Source FlickerableLightController Gets the room's FlickerableLightController. Declaration public FlickerableLightController FlickerableLightController { get; } Property Value Type Description FlickerableLightController | Improve this Doc View Source FlickerableLightControllerNetIdentity Gets the FlickerableLightController's NetworkIdentity. Declaration public NetworkIdentity FlickerableLightControllerNetIdentity { get; } Property Value Type Description Mirror.NetworkIdentity | Improve this Doc View Source LightIntensity Gets or sets the intensity of the lights in the room. Declaration public float LightIntensity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source LightsOff Gets a value indicating whether or not the lights in this room are currently flickered off. Declaration public bool LightsOff { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the Room name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Players Gets a System.Collections.Generic.IEnumerable<T> of Player in the Room . Declaration public IEnumerable<Player> Players { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source Position Gets the Room position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Transform Gets the Room UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the RoomType . Declaration public RoomType Type { get; } Property Value Type Description RoomType | Improve this Doc View Source Zone Gets the ZoneType in which the room is located. Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source Blackout(Single, DoorLockType) Locks all the doors and turns off all lights in the room. Declaration public void Blackout(float duration, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration Duration in seconds. DoorLockType lockType DoorLockType of the blackout. | Improve this Doc View Source LockDown(Single, DoorLockType) Locks all the doors in the room. Declaration public void LockDown(float duration, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration Duration in seconds. DoorLockType lockType DoorLockType of the lockdown. | Improve this Doc View Source ResetColor() Resets the room color to default. Declaration public void ResetColor() | Improve this Doc View Source TurnOffLights(Single) Flickers the room's lights off for a duration. Declaration public void TurnOffLights(float duration) Parameters Type Name Description System.Single duration Duration in seconds. | Improve this Doc View Source UnlockAll() Unlocks all the doors in the room. Declaration public void UnlockAll() Extension Methods MirrorExtensions.SetRoomColorForTargetOnly(Room, Player, Color) MirrorExtensions.SetRoomLightIntensityForTargetOnly(Room, Player, Single) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Round.html": {
    "href": "api/Exiled.API.Features.Round.html",
    "title": "Class Round | EXILED Docs",
    "keywords": "Class Round A set of tools to handle the round more easily. Inheritance System.Object Round Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Round Properties | Improve this Doc View Source ChangedIntoZombies Gets the number of players who have been turned into zombies. Declaration public static int ChangedIntoZombies { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ElapsedTime Gets the time elapsed from the start of the round. Declaration public static TimeSpan ElapsedTime { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source EscapedDClasses Gets the number of players who have escaped as RoleType.ClassD . Declaration public static int EscapedDClasses { get; } Property Value Type Description System.Int32 | Improve this Doc View Source EscapedScientists Gets the number of players who have escaped as RoleType.Scientist . Declaration public static int EscapedScientists { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsLobbyLocked Gets or sets a value indicating whether the lobby is locked or not. Declaration public static bool IsLobbyLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets or sets a value indicating whether the round is locked or not. Declaration public static bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsStarted Gets a value indicating whether the round is started or not. Declaration public static bool IsStarted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Kills Gets the number of kills. Declaration public static int Kills { get; } Property Value Type Description System.Int32 | Improve this Doc View Source KillsByScp Gets the number of kills made by SCPs. Declaration public static int KillsByScp { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartedTime Gets the start time of the round. Declaration public static DateTime StartedTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source UptimeRounds Gets the number of rounds since the server started. Declaration public static int UptimeRounds { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ForceEnd() Forces the round to end, regardless of which factions are alive. Declaration public static bool ForceEnd() Returns Type Description System.Boolean A System.Boolean describing whether or not the round was successfully ended. | Improve this Doc View Source Restart(Boolean, Boolean, ServerStatic.NextRoundAction) Restarts the round with custom settings. Declaration public static void Restart(bool fastRestart = true, bool overrideRestartAction = false, ServerStatic.NextRoundAction restartAction = ServerStatic.NextRoundAction.DoNothing) Parameters Type Name Description System.Boolean fastRestart Indicates whether or not it'll be a fast restart. If it's a fast restart, then players won't be reconnected from the server; otherwise, they will. System.Boolean overrideRestartAction Overrides a value of ServerStatic.NextRoundAction . Makes sense if someone used a command to set another action. ServerStatic.NextRoundAction restartAction The ServerStatic.NextRoundAction . ServerStatic.NextRoundAction.DoNothing - does nothing, just restarts the round silently. ServerStatic.NextRoundAction.Restart - restarts the server, reconnects all players. ServerStatic.NextRoundAction.Shutdown - shutdowns the server, also disconnects all players. | Improve this Doc View Source RestartSilently() Restarts the round silently. Declaration public static void RestartSilently() | Improve this Doc View Source Start() Start the round. Declaration public static void Start()"
  },
  "api/Exiled.API.Features.Scp096.html": {
    "href": "api/Exiled.API.Features.Scp096.html",
    "title": "Class Scp096 | EXILED Docs",
    "keywords": "Class Scp096 A set of tools to modify SCP-096's behaviour. Inheritance System.Object Scp096 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Scp096 Properties | Improve this Doc View Source TurnedPlayers Gets a list of player ids who will be turned away from SCP-096. Declaration public static HashSet<Player> TurnedPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player >"
  },
  "api/Exiled.API.Features.Scp173.html": {
    "href": "api/Exiled.API.Features.Scp173.html",
    "title": "Class Scp173 | EXILED Docs",
    "keywords": "Class Scp173 A set of tools to modify SCP-173's behaviour. Inheritance System.Object Scp173 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Scp173 Properties | Improve this Doc View Source TurnedPlayers Gets a list of player ids who will be turned away from SCP-173. Declaration public static HashSet<Player> TurnedPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player >"
  },
  "api/Exiled.API.Features.Scp914.html": {
    "href": "api/Exiled.API.Features.Scp914.html",
    "title": "Class Scp914 | EXILED Docs",
    "keywords": "Class Scp914 A set of tools to modify SCP-914's behaviour. Inheritance System.Object Scp914 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Scp914 Properties | Improve this Doc View Source ConfigMode Gets or sets SCP-914 config mode. Declaration public static ConfigEntry<Scp914Mode> ConfigMode { get; set; } Property Value Type Description Utils.ConfigHandler.ConfigEntry < Scp914.Scp914Mode > | Improve this Doc View Source IntakeBooth Gets the intake booth UnityEngine.Transform . Declaration public static Transform IntakeBooth { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source IsWorking Gets a value indicating whether the SCP-914 was activated and is currently processing items. Declaration public static bool IsWorking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobStatus Gets or sets SCP-914 Scp914.Scp914KnobSetting . Declaration public static Scp914KnobSetting KnobStatus { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source OutputBooth Gets the output booth UnityEngine.Transform . Declaration public static Transform OutputBooth { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Scp914Controller Gets the cached Scp914Controller . Declaration public static Scp914Controller Scp914Controller { get; } Property Value Type Description Scp914.Scp914Controller Methods | Improve this Doc View Source PlaySound(Byte) Plays the Scp914's sound. Declaration public static void PlaySound(byte soundId) Parameters Type Name Description System.Byte soundId The soundId to play. Remarks There are two sounds only. The values to identify them are 0, which stands for the soundId played when the Scp914 is being activated, and 1, which stands for the soundId played when the Scp914's knob state is being changed. | Improve this Doc View Source Start() Starts the SCP-914. Declaration public static void Start()"
  },
  "api/Exiled.API.Features.Server.html": {
    "href": "api/Exiled.API.Features.Server.html",
    "title": "Class Server | EXILED Docs",
    "keywords": "Class Server A set of tools to easily work with the server. Inheritance System.Object Server Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Server Properties | Improve this Doc View Source BanPlayer Gets the cached BanPlayer component. Declaration public static BanPlayer BanPlayer { get; } Property Value Type Description BanPlayer | Improve this Doc View Source Broadcast Gets the cached Broadcast component. Declaration public static Broadcast Broadcast { get; } Property Value Type Description Broadcast | Improve this Doc View Source FriendlyFire Gets or sets a value indicating whether friendly fire is enabled or not. Declaration public static bool FriendlyFire { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Host Gets the player's host of the server. Might be null when called when the server isn't loaded. Declaration public static Player Host { get; } Property Value Type Description Player | Improve this Doc View Source IpAddress Gets the Ip address of the server. Declaration public static string IpAddress { get; } Property Value Type Description System.String | Improve this Doc View Source MaxPlayerCount Gets or sets the maximum number of players able to be on the server. Declaration public static int MaxPlayerCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Gets or sets the name of the server. Declaration public static string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source PermissionsHandler Gets the RemoteAdmin permissions handler. Declaration public static PermissionsHandler PermissionsHandler { get; } Property Value Type Description PermissionsHandler | Improve this Doc View Source PlayerCount Gets the number of players currently on the server. Declaration public static int PlayerCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Port Gets the port of the server. Declaration public static ushort Port { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source SendSpawnMessage Gets the cached SendSpawnMessage System.Reflection.MethodInfo . Declaration public static MethodInfo SendSpawnMessage { get; } Property Value Type Description System.Reflection.MethodInfo Methods | Improve this Doc View Source Restart() Restarts the server, reconnects all players. Declaration public static void Restart() | Improve this Doc View Source RestartRedirect(UInt16) Redirects players to a server on another port, restarts the current server. Declaration public static bool RestartRedirect(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort The port to redirect players to. Returns Type Description System.Boolean true, if redirection was successful; otherwise, false. Remarks If the returned value is false, the server won't restart. | Improve this Doc View Source RunCommand(String, CommandSender) Runs a server command. Declaration public static void RunCommand(string command, CommandSender sender = null) Parameters Type Name Description System.String command The command to be run. CommandSender sender The CommandSender running the command. | Improve this Doc View Source Shutdown() Shutdowns the server, disconnects all players. Declaration public static void Shutdown() | Improve this Doc View Source ShutdownRedirect(UInt16) Redirects players to a server on another port, shutdowns the current server. Declaration public static bool ShutdownRedirect(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort The port to redirect players to. Returns Type Description System.Boolean true, if redirection was successful; otherwise, false. Remarks If the returned value is false, the server won't shutdown."
  },
  "api/Exiled.API.Features.ShootingTarget.html": {
    "href": "api/Exiled.API.Features.ShootingTarget.html",
    "title": "Class ShootingTarget | EXILED Docs",
    "keywords": "Class ShootingTarget A wrapper class for AdminToys.ShootingTarget . Inheritance System.Object ShootingTarget Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class ShootingTarget Constructors | Improve this Doc View Source ShootingTarget(ShootingTarget) Initializes a new instance of the ShootingTarget class. Declaration public ShootingTarget(ShootingTarget target) Parameters Type Name Description AdminToys.ShootingTarget target Properties | Improve this Doc View Source AutoResetTime Gets or sets the remaining health of the target. Declaration public int AutoResetTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Base Gets the base-game AdminToys.ShootingTarget for this target. Declaration public ShootingTarget Base { get; } Property Value Type Description AdminToys.ShootingTarget | Improve this Doc View Source BullseyePosition Gets the bullseye location of the target. Declaration public Vector3 BullseyePosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source BullseyeRadius Gets the bullseye radius of the target. Declaration public float BullseyeRadius { get; } Property Value Type Description System.Single | Improve this Doc View Source Health Gets or sets the remaining health of the target. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsSynced Gets or sets a value indicating whether or not the target is in sync mode. Declaration public bool IsSynced { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets or sets the max health of the target. Declaration public int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Position Gets the position of the target. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Scale Gets or sets the size scale of the target. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Type Gets the type of the target. Declaration public ShootingTargetType Type { get; } Property Value Type Description ShootingTargetType | Improve this Doc View Source VerificationRule Gets the Interactables.Verification.IVerificationRule for this target. Declaration public IVerificationRule VerificationRule { get; } Property Value Type Description Interactables.Verification.IVerificationRule Methods | Improve this Doc View Source Clear() Clears the target and resets its health. Declaration public void Clear() | Improve this Doc View Source Damage(Single, DamageHandlerBase, Vector3) Damages the target with the given damage, item, footprint, and hit location. Declaration public bool Damage(float damage, DamageHandlerBase damageHandler, Vector3 exactHit) Parameters Type Name Description System.Single damage The damage to be dealt. PlayerStatsSystem.DamageHandlerBase damageHandler The PlayerStatsSystem.DamageHandlerBase dealing the damage. UnityEngine.Vector3 exactHit The exact location of the hit. Returns Type Description System.Boolean Whether or not the damage was sent. | Improve this Doc View Source Get(ShootingTarget) Gets the ShootingTarget object associated with a specific AdminToys.ShootingTarget , or creates a new one if there isn't one. Declaration public static ShootingTarget Get(ShootingTarget shootingTarget) Parameters Type Name Description AdminToys.ShootingTarget shootingTarget Returns Type Description ShootingTarget | Improve this Doc View Source Spawn(ShootingTargetType, Vector3, Quaternion) Spawns a new shooting target of the given type at the given position and rotation. Declaration public static ShootingTarget Spawn(ShootingTargetType type, Vector3 position, Quaternion rotation = default(Quaternion)) Parameters Type Name Description ShootingTargetType type The ShootingTargetType of the target. UnityEngine.Vector3 position The position of the target. UnityEngine.Quaternion rotation The rotation of the target. Returns Type Description ShootingTarget The ShootingTarget object associated with the AdminToys.ShootingTarget . Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.DynamicSpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.DynamicSpawnPoint.html",
    "title": "Class DynamicSpawnPoint | EXILED Docs",
    "keywords": "Class DynamicSpawnPoint Handles dynamic spawn locations. Inheritance System.Object SpawnPoint DynamicSpawnPoint Inherited Members SpawnPoint.Deconstruct(Single, Vector3) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class DynamicSpawnPoint : SpawnPoint Properties | Improve this Doc View Source Chance Declaration public override float Chance { get; set; } Property Value Type Description System.Single Overrides SpawnPoint.Chance | Improve this Doc View Source Location Gets or sets the SpawnLocation for this item. Declaration public SpawnLocation Location { get; set; } Property Value Type Description SpawnLocation | Improve this Doc View Source Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides SpawnPoint.Name | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Overrides SpawnPoint.Position Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.html": {
    "href": "api/Exiled.API.Features.Spawn.html",
    "title": "Namespace Exiled.API.Features.Spawn | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Spawn Classes DynamicSpawnPoint Handles dynamic spawn locations. RoleSpawnPoint Defines a spawn point that follows a base-game role spawn point. SpawnPoint Defines item spawn properties. SpawnProperties Handles special properties of spawning an item. StaticSpawnPoint Handles static spawn locations."
  },
  "api/Exiled.API.Features.Spawn.RoleSpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.RoleSpawnPoint.html",
    "title": "Class RoleSpawnPoint | EXILED Docs",
    "keywords": "Class RoleSpawnPoint Defines a spawn point that follows a base-game role spawn point. Inheritance System.Object SpawnPoint RoleSpawnPoint Inherited Members SpawnPoint.Deconstruct(Single, Vector3) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class RoleSpawnPoint : SpawnPoint Properties | Improve this Doc View Source Chance Declaration public override float Chance { get; set; } Property Value Type Description System.Single Overrides SpawnPoint.Chance | Improve this Doc View Source Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides SpawnPoint.Name | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Overrides SpawnPoint.Position | Improve this Doc View Source Role Gets or sets the role type used for this spawn. Declaration public RoleType Role { get; set; } Property Value Type Description RoleType Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.SpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.SpawnPoint.html",
    "title": "Class SpawnPoint | EXILED Docs",
    "keywords": "Class SpawnPoint Defines item spawn properties. Inheritance System.Object SpawnPoint DynamicSpawnPoint RoleSpawnPoint StaticSpawnPoint Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public abstract class SpawnPoint Properties | Improve this Doc View Source Chance Gets or sets the spawn chance. Declaration public abstract float Chance { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Name Gets or sets this spawn point name. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Position Gets or sets this spawn point position. Declaration public abstract Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Methods | Improve this Doc View Source Deconstruct(out Single, out Vector3) Deconstructs the class into usable variables. Declaration public void Deconstruct(out float chance, out Vector3 position) Parameters Type Name Description System.Single chance UnityEngine.Vector3 position Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.SpawnProperties.html": {
    "href": "api/Exiled.API.Features.Spawn.SpawnProperties.html",
    "title": "Class SpawnProperties | EXILED Docs",
    "keywords": "Class SpawnProperties Handles special properties of spawning an item. Inheritance System.Object SpawnProperties Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class SpawnProperties Properties | Improve this Doc View Source DynamicSpawnPoints Gets or sets a System.Collections.Generic.List<T> of possible dynamic spawn points. Declaration public List<DynamicSpawnPoint> DynamicSpawnPoints { get; set; } Property Value Type Description System.Collections.Generic.List < DynamicSpawnPoint > | Improve this Doc View Source Limit Gets or sets a value indicating how many of the item can be spawned when the round starts. Declaration public uint Limit { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source RoleSpawnPoints Gets or sets a System.Collections.Generic.List<T> of possible role-based spawn points. Declaration public List<RoleSpawnPoint> RoleSpawnPoints { get; set; } Property Value Type Description System.Collections.Generic.List < RoleSpawnPoint > | Improve this Doc View Source StaticSpawnPoints Gets or sets a System.Collections.Generic.List<T> of possible static spawn points. Declaration public List<StaticSpawnPoint> StaticSpawnPoints { get; set; } Property Value Type Description System.Collections.Generic.List < StaticSpawnPoint > Methods | Improve this Doc View Source Count() Counts how many spawn points are in this instance. Declaration public int Count() Returns Type Description System.Int32 How many spawn points there are. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.StaticSpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.StaticSpawnPoint.html",
    "title": "Class StaticSpawnPoint | EXILED Docs",
    "keywords": "Class StaticSpawnPoint Handles static spawn locations. Inheritance System.Object SpawnPoint StaticSpawnPoint Inherited Members SpawnPoint.Deconstruct(Single, Vector3) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class StaticSpawnPoint : SpawnPoint Properties | Improve this Doc View Source Chance Declaration public override float Chance { get; set; } Property Value Type Description System.Single Overrides SpawnPoint.Chance | Improve this Doc View Source Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides SpawnPoint.Name | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Overrides SpawnPoint.Position Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Warhead.html": {
    "href": "api/Exiled.API.Features.Warhead.html",
    "title": "Class Warhead | EXILED Docs",
    "keywords": "Class Warhead A set of tools to easily work with the alpha warhead. Inheritance System.Object Warhead Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Warhead Properties | Improve this Doc View Source CanBeStarted Gets a value indicating whether the warhead can be started or not. Declaration public static bool CanBeStarted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Controller Gets the cached AlphaWarheadController component. Declaration public static AlphaWarheadController Controller { get; } Property Value Type Description AlphaWarheadController | Improve this Doc View Source DetonationTimer Gets or sets the warhead detonation timer. Declaration public static float DetonationTimer { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsDetonated Gets a value indicating whether the warhead has already been detonated or not. Declaration public static bool IsDetonated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInProgress Gets a value indicating whether the warhead detonation is in progress or not. Declaration public static bool IsInProgress { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsKeycardActivated Gets or sets a value indicating whether the warhead has already been activated or not. Declaration public static bool IsKeycardActivated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets or sets a value indicating whether the warhead can be disabled or not. Declaration public static bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeverStatus Gets or sets a value indicating whether the warhead lever is enabled or not. Declaration public static bool LeverStatus { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source OutsitePanel Gets the cached AlphaWarheadOutsitePanel component. Declaration public static AlphaWarheadOutsitePanel OutsitePanel { get; } Property Value Type Description AlphaWarheadOutsitePanel | Improve this Doc View Source RealDetonationTimer Gets the warhead real detonation timer. Declaration public static float RealDetonationTimer { get; } Property Value Type Description System.Single | Improve this Doc View Source SitePanel Gets the cached AlphaWarheadNukesitePanel component. Declaration public static AlphaWarheadNukesitePanel SitePanel { get; } Property Value Type Description AlphaWarheadNukesitePanel Methods | Improve this Doc View Source Detonate() Detonates the warhead. Declaration public static void Detonate() | Improve this Doc View Source Shake() Shake all players, like if the warhead has been detonated. Declaration public static void Shake() | Improve this Doc View Source Start() Starts the warhead countdown. Declaration public static void Start() | Improve this Doc View Source Stop() Stops the warhead. Declaration public static void Stop()"
  },
  "api/Exiled.API.Interfaces.html": {
    "href": "api/Exiled.API.Interfaces.html",
    "title": "Namespace Exiled.API.Interfaces | EXILED Docs",
    "keywords": "Namespace Exiled.API.Interfaces Interfaces IConfig Defines the contract for basic config features. IPlugin<TConfig> Defines the contract for basic plugin features. ITranslation Defines the contract for basic translation features."
  },
  "api/Exiled.API.Interfaces.IConfig.html": {
    "href": "api/Exiled.API.Interfaces.IConfig.html",
    "title": "Interface IConfig | EXILED Docs",
    "keywords": "Interface IConfig Defines the contract for basic config features. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IConfig Properties | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the plugin is enabled or not. Declaration bool IsEnabled { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.IPlugin-1.html": {
    "href": "api/Exiled.API.Interfaces.IPlugin-1.html",
    "title": "Interface IPlugin<TConfig> | EXILED Docs",
    "keywords": "Interface IPlugin<TConfig> Defines the contract for basic plugin features. Inherited Members System.IComparable<Exiled.API.Interfaces.IPlugin<Exiled.API.Interfaces.IConfig>>.CompareTo(Exiled.API.Interfaces.IPlugin<Exiled.API.Interfaces.IConfig>) Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IPlugin<out TConfig> : IComparable<IPlugin<IConfig>> where TConfig : IConfig Type Parameters Name Description TConfig The config type. Properties | Improve this Doc View Source Assembly Gets the plugin assembly. Declaration Assembly Assembly { get; } Property Value Type Description System.Reflection.Assembly | Improve this Doc View Source Author Gets the plugin author. Declaration string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Commands Gets the plugin commands. Declaration Dictionary<Type, Dictionary<Type, ICommand>> Commands { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < System.Type , CommandSystem.ICommand >> | Improve this Doc View Source Config Gets the plugin config. Declaration TConfig Config { get; } Property Value Type Description TConfig | Improve this Doc View Source InternalTranslation Gets the internally used translations. Plugins should implement Plugin<TConfig, TTranslation> and use Translation . Declaration ITranslation InternalTranslation { get; } Property Value Type Description ITranslation | Improve this Doc View Source Name Gets the plugin name. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Prefix Gets the plugin prefix. Declaration string Prefix { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Gets the plugin priority. Higher values mean higher priority and vice versa. Declaration PluginPriority Priority { get; } Property Value Type Description PluginPriority | Improve this Doc View Source RequiredExiledVersion Gets the required version of Exiled to run the plugin without bugs or incompatibilities. Declaration Version RequiredExiledVersion { get; } Property Value Type Description System.Version | Improve this Doc View Source Version Gets the plugin version. Declaration Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source OnDisabled() Fired after disabling the plugin. Declaration void OnDisabled() | Improve this Doc View Source OnEnabled() Fired after enabling the plugin. Declaration void OnEnabled() | Improve this Doc View Source OnRegisteringCommands() Fired before registering commands. Declaration void OnRegisteringCommands() | Improve this Doc View Source OnReloaded() Fired after reloading the plugin. Declaration void OnReloaded() | Improve this Doc View Source OnUnregisteringCommands() Fired before unregistering configs. Declaration void OnUnregisteringCommands() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.ITranslation.html": {
    "href": "api/Exiled.API.Interfaces.ITranslation.html",
    "title": "Interface ITranslation | EXILED Docs",
    "keywords": "Interface ITranslation Defines the contract for basic translation features. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface ITranslation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Structs.ArmorAmmoLimit.html": {
    "href": "api/Exiled.API.Structs.ArmorAmmoLimit.html",
    "title": "Struct ArmorAmmoLimit | EXILED Docs",
    "keywords": "Struct ArmorAmmoLimit The limit of a certain AmmoType when wearing a piece of armor. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Structs Assembly : Exiled.API.dll Syntax public struct ArmorAmmoLimit Constructors | Improve this Doc View Source ArmorAmmoLimit(AmmoType, UInt16) Initializes a new instance of the ArmorAmmoLimit struct. Declaration public ArmorAmmoLimit(AmmoType type, ushort limit) Parameters Type Name Description AmmoType type System.UInt16 limit Fields | Improve this Doc View Source AmmoType The AmmoType being limited. Declaration public AmmoType AmmoType Field Value Type Description AmmoType | Improve this Doc View Source Limit The amount to limit to. Declaration public ushort Limit Field Value Type Description System.UInt16 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Structs.html": {
    "href": "api/Exiled.API.Structs.html",
    "title": "Namespace Exiled.API.Structs | EXILED Docs",
    "keywords": "Namespace Exiled.API.Structs Structs ArmorAmmoLimit The limit of a certain AmmoType when wearing a piece of armor. RadioRangeSettings Settings for specific radio ranges."
  },
  "api/Exiled.API.Structs.RadioRangeSettings.html": {
    "href": "api/Exiled.API.Structs.RadioRangeSettings.html",
    "title": "Struct RadioRangeSettings | EXILED Docs",
    "keywords": "Struct RadioRangeSettings Settings for specific radio ranges. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Structs Assembly : Exiled.API.dll Syntax public struct RadioRangeSettings Fields | Improve this Doc View Source IdleUsage The amount of battery usage per minute while idle. Declaration public float IdleUsage Field Value Type Description System.Single | Improve this Doc View Source MaxRange The maximum range in which this radio will pickup and send voice messages. Declaration public int MaxRange Field Value Type Description System.Int32 | Improve this Doc View Source TalkingUsage The amount of battery usage per minute while talking. Declaration public int TalkingUsage Field Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Bootstrap.Bootstrap.html": {
    "href": "api/Exiled.Bootstrap.Bootstrap.html",
    "title": "Class Bootstrap | EXILED Docs",
    "keywords": "Class Bootstrap The assembly loader class for Exiled. Inheritance System.Object Bootstrap Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Bootstrap Assembly : Exiled.Bootstrap.dll Syntax public sealed class Bootstrap Properties | Improve this Doc View Source IsLoaded Gets a value indicating whether exiled has already been loaded or not. Declaration public static bool IsLoaded { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Load() Internally called loading method. Declaration public static void Load() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Bootstrap.html": {
    "href": "api/Exiled.Bootstrap.html",
    "title": "Namespace Exiled.Bootstrap | EXILED Docs",
    "keywords": "Namespace Exiled.Bootstrap Classes Bootstrap The assembly loader class for Exiled."
  },
  "api/Exiled.CreditTags.Commands.html": {
    "href": "api/Exiled.CreditTags.Commands.html",
    "title": "Namespace Exiled.CreditTags.Commands | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags.Commands Classes ShowCreditTag A client command to show your credit tag."
  },
  "api/Exiled.CreditTags.Commands.ShowCreditTag.html": {
    "href": "api/Exiled.CreditTags.Commands.ShowCreditTag.html",
    "title": "Class ShowCreditTag | EXILED Docs",
    "keywords": "Class ShowCreditTag A client command to show your credit tag. Inheritance System.Object ShowCreditTag Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags.Commands Assembly : Exiled.CreditTags.dll Syntax [CommandHandler(typeof(ClientCommandHandler))] public class ShowCreditTag : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.Config.html": {
    "href": "api/Exiled.CreditTags.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags Assembly : Exiled.CreditTags.dll Syntax public sealed class Config : IConfig Properties | Improve this Doc View Source BadgeOverride Declaration public bool BadgeOverride { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CustomPlayerInfoOverride Declaration public bool CustomPlayerInfoOverride { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IgnoreDntFlag Declaration public bool IgnoreDntFlag { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mode Declaration public InfoSide Mode { get; } Property Value Type Description InfoSide Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.CreditTags.html": {
    "href": "api/Exiled.CreditTags.CreditTags.html",
    "title": "Class CreditTags | EXILED Docs",
    "keywords": "Class CreditTags Handles credits for Exiled Devs, Contributors and Plugin devs. Inheritance System.Object Plugin < Config > CreditTags Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags Assembly : Exiled.CreditTags.dll Syntax public sealed class CreditTags : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets a static reference to this class. Declaration public static CreditTags Instance { get; } Property Value Type Description CreditTags | Improve this Doc View Source Prefix Declaration public override string Prefix { get; } Property Value Type Description System.String Overrides Exiled.API.Features.Plugin<Exiled.CreditTags.Config>.Prefix Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.CreditTags.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.CreditTags.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods PathExtensions.GetPath(IPlugin<IConfig>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.Enums.html": {
    "href": "api/Exiled.CreditTags.Enums.html",
    "title": "Namespace Exiled.CreditTags.Enums | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags.Enums Enums InfoSide RankType Represents all existing ranks."
  },
  "api/Exiled.CreditTags.Enums.InfoSide.html": {
    "href": "api/Exiled.CreditTags.Enums.InfoSide.html",
    "title": "Enum InfoSide | EXILED Docs",
    "keywords": "Enum InfoSide Namespace : Exiled.CreditTags.Enums Assembly : Exiled.CreditTags.dll Syntax public enum InfoSide Fields Name Description Badge Uses badge. Both Includes both of them. CustomPlayerInfo Uses Custom Player Info area FirstAvailable Uses Badge if available, otherwise uses CustomPlayerInfo if available. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.CreditTags.Enums.RankType.html": {
    "href": "api/Exiled.CreditTags.Enums.RankType.html",
    "title": "Enum RankType | EXILED Docs",
    "keywords": "Enum RankType Represents all existing ranks. Namespace : Exiled.CreditTags.Enums Assembly : Exiled.CreditTags.dll Syntax public enum RankType Fields Name Description Contributor Exiled Contributor. Dev Exiled Developer. None Nothing. PluginDev Exiled Plugin Developer. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.CreditTags.Features.html": {
    "href": "api/Exiled.CreditTags.Features.html",
    "title": "Namespace Exiled.CreditTags.Features | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags.Features Classes Rank An object representing Exiled Credit ranks."
  },
  "api/Exiled.CreditTags.Features.Rank.html": {
    "href": "api/Exiled.CreditTags.Features.Rank.html",
    "title": "Class Rank | EXILED Docs",
    "keywords": "Class Rank An object representing Exiled Credit ranks. Inheritance System.Object Rank Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags.Features Assembly : Exiled.CreditTags.dll Syntax public class Rank Constructors | Improve this Doc View Source Rank(String, String, String) Initializes a new instance of the Rank class. Declaration public Rank(string name, string color, string hexValue) Parameters Type Name Description System.String name The name of the rank. System.String color The name of the rank's color. System.String hexValue The hex color value of the rank's color. Properties | Improve this Doc View Source Color Gets a value representing the ranks color. Declaration public string Color { get; } Property Value Type Description System.String | Improve this Doc View Source HexValue Gets a value representing the rank's color as a hex value. Declaration public string HexValue { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets a value representing the ranks name. Declaration public string Name { get; } Property Value Type Description System.String Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.html": {
    "href": "api/Exiled.CreditTags.html",
    "title": "Namespace Exiled.CreditTags | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags Classes Config CreditTags Handles credits for Exiled Devs, Contributors and Plugin devs."
  },
  "api/Exiled.CustomItems.API.EventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.html",
    "title": "Namespace Exiled.CustomItems.API.EventArgs | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.API.EventArgs Classes OwnerChangingRoleEventArgs Contains all informations of a CustomItem before a Player changes roles. OwnerDyingEventArgs Contains all information of a CustomItem before a Player dies. OwnerEscapingEventArgs Contains all information of a CustomItem before a Player escapes. OwnerHandcuffingEventArgs Contains all information of a CustomItem before handcuffing a Player . UpgradingEventArgs Contains all information of a CustomItem before a Item gets upgraded. UpgradingItemEventArgs Contains all information of a CustomItem before a Player 's inventory item is upgraded."
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.html",
    "title": "Class OwnerChangingRoleEventArgs | EXILED Docs",
    "keywords": "Class OwnerChangingRoleEventArgs Contains all informations of a CustomItem before a Player changes roles. Inheritance System.Object System.EventArgs ChangingRoleEventArgs OwnerChangingRoleEventArgs Inherited Members ChangingRoleEventArgs.Player ChangingRoleEventArgs.NewRole ChangingRoleEventArgs.Items ChangingRoleEventArgs.Ammo ChangingRoleEventArgs.Reason ChangingRoleEventArgs.Lite ChangingRoleEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerChangingRoleEventArgs : ChangingRoleEventArgs Constructors | Improve this Doc View Source OwnerChangingRoleEventArgs(ItemBase, Player, RoleType, Boolean, CharacterClassManager.SpawnReason) Initializes a new instance of the OwnerChangingRoleEventArgs class. Declaration public OwnerChangingRoleEventArgs(ItemBase item, Player player, RoleType newRole, bool shouldPreservePosition, CharacterClassManager.SpawnReason reason) Parameters Type Name Description InventorySystem.Items.ItemBase item Player player RoleType newRole System.Boolean shouldPreservePosition CharacterClassManager.SpawnReason reason | Improve this Doc View Source OwnerChangingRoleEventArgs(ItemBase, ChangingRoleEventArgs) Initializes a new instance of the OwnerChangingRoleEventArgs class. Declaration public OwnerChangingRoleEventArgs(ItemBase item, ChangingRoleEventArgs ev) Parameters Type Name Description InventorySystem.Items.ItemBase item ChangingRoleEventArgs ev The ChangingRoleEventArgs instance. Properties | Improve this Doc View Source Item Gets the Item as a CustomItem in the player's inventory. Declaration public ItemBase Item { get; } Property Value Type Description InventorySystem.Items.ItemBase Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.html",
    "title": "Class OwnerDyingEventArgs | EXILED Docs",
    "keywords": "Class OwnerDyingEventArgs Contains all information of a CustomItem before a Player dies. Inheritance System.Object System.EventArgs DyingEventArgs OwnerDyingEventArgs Inherited Members DyingEventArgs.Killer DyingEventArgs.Target DyingEventArgs.ItemsToDrop DyingEventArgs.DamageHandler DyingEventArgs.Handler DyingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerDyingEventArgs : DyingEventArgs Constructors | Improve this Doc View Source OwnerDyingEventArgs(Item, Player, DamageHandlerBase) Initializes a new instance of the OwnerDyingEventArgs class. Declaration public OwnerDyingEventArgs(Item item, Player target, DamageHandlerBase damageHandler) Parameters Type Name Description Item item Player target PlayerStatsSystem.DamageHandlerBase damageHandler | Improve this Doc View Source OwnerDyingEventArgs(Item, DyingEventArgs) Initializes a new instance of the OwnerDyingEventArgs class. Declaration public OwnerDyingEventArgs(Item item, DyingEventArgs ev) Parameters Type Name Description Item item DyingEventArgs ev The HandcuffingEventArgs instance. Properties | Improve this Doc View Source Item Gets the item in the player's inventory. Declaration public Item Item { get; } Property Value Type Description Item Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.html",
    "title": "Class OwnerEscapingEventArgs | EXILED Docs",
    "keywords": "Class OwnerEscapingEventArgs Contains all information of a CustomItem before a Player escapes. Inheritance System.Object System.EventArgs EscapingEventArgs OwnerEscapingEventArgs Inherited Members EscapingEventArgs.Player EscapingEventArgs.NewRole EscapingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerEscapingEventArgs : EscapingEventArgs Constructors | Improve this Doc View Source OwnerEscapingEventArgs(Item, Player) Initializes a new instance of the OwnerEscapingEventArgs class. Declaration public OwnerEscapingEventArgs(Item item, Player player) Parameters Type Name Description Item item Player player | Improve this Doc View Source OwnerEscapingEventArgs(Item, EscapingEventArgs) Initializes a new instance of the OwnerEscapingEventArgs class. Declaration public OwnerEscapingEventArgs(Item item, EscapingEventArgs ev) Parameters Type Name Description Item item EscapingEventArgs ev The EscapingEventArgs instance. Properties | Improve this Doc View Source Item Gets the item in the player's inventory. Declaration public Item Item { get; } Property Value Type Description Item Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.html",
    "title": "Class OwnerHandcuffingEventArgs | EXILED Docs",
    "keywords": "Class OwnerHandcuffingEventArgs Contains all information of a CustomItem before handcuffing a Player . Inheritance System.Object System.EventArgs HandcuffingEventArgs OwnerHandcuffingEventArgs Inherited Members HandcuffingEventArgs.Cuffer HandcuffingEventArgs.Target HandcuffingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerHandcuffingEventArgs : HandcuffingEventArgs Constructors | Improve this Doc View Source OwnerHandcuffingEventArgs(Item, Player, Player, Boolean) Initializes a new instance of the OwnerHandcuffingEventArgs class. Declaration public OwnerHandcuffingEventArgs(Item item, Player cuffer, Player target, bool isAllowed = true) Parameters Type Name Description Item item Player cuffer Player target System.Boolean isAllowed | Improve this Doc View Source OwnerHandcuffingEventArgs(Item, HandcuffingEventArgs) Initializes a new instance of the OwnerHandcuffingEventArgs class. Declaration public OwnerHandcuffingEventArgs(Item item, HandcuffingEventArgs ev) Parameters Type Name Description Item item HandcuffingEventArgs ev The HandcuffingEventArgs instance. Properties | Improve this Doc View Source Item Gets the item in the player's inventory. Declaration public Item Item { get; } Property Value Type Description Item Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.html",
    "title": "Class UpgradingEventArgs | EXILED Docs",
    "keywords": "Class UpgradingEventArgs Contains all information of a CustomItem before a Item gets upgraded. Inheritance System.Object System.EventArgs UpgradingItemEventArgs UpgradingEventArgs Inherited Members UpgradingItemEventArgs.Scp914 UpgradingItemEventArgs.OutputPosition UpgradingItemEventArgs.KnobSetting UpgradingItemEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class UpgradingEventArgs : UpgradingItemEventArgs Constructors | Improve this Doc View Source UpgradingEventArgs(ItemPickupBase, Vector3, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingEventArgs class. Declaration public UpgradingEventArgs(ItemPickupBase item, Vector3 newPos, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase item UnityEngine.Vector3 newPos Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source Item Gets the upgrading Item as a CustomItem . Declaration public ItemPickupBase Item { get; } Property Value Type Description InventorySystem.Items.Pickups.ItemPickupBase Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.html",
    "title": "Class UpgradingItemEventArgs | EXILED Docs",
    "keywords": "Class UpgradingItemEventArgs Contains all information of a CustomItem before a Player 's inventory item is upgraded. Inheritance System.Object System.EventArgs UpgradingInventoryItemEventArgs UpgradingItemEventArgs Inherited Members UpgradingInventoryItemEventArgs.Scp914 UpgradingInventoryItemEventArgs.Player UpgradingInventoryItemEventArgs.KnobSetting UpgradingInventoryItemEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class UpgradingItemEventArgs : UpgradingInventoryItemEventArgs Constructors | Improve this Doc View Source UpgradingItemEventArgs(Player, ItemBase, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingItemEventArgs class. Declaration public UpgradingItemEventArgs(Player player, ItemBase item, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ItemBase item Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source Item Gets the upgrading Item as a CustomItem . Declaration public ItemBase Item { get; } Property Value Type Description InventorySystem.Items.ItemBase Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Extensions.html": {
    "href": "api/Exiled.CustomItems.API.Extensions.html",
    "title": "Class Extensions | EXILED Docs",
    "keywords": "Class Extensions A collection of API methods. Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API Assembly : Exiled.CustomItems.dll Syntax public static class Extensions Methods | Improve this Doc View Source Register(IEnumerable<CustomItem>) Registers an System.Collections.Generic.IEnumerable<T> of CustomItem s. Declaration public static void Register(this IEnumerable<CustomItem> customItems) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomItem > customItems CustomItem s to be registered. | Improve this Doc View Source ResetInventory(Player, List<String>, Boolean) Resets the player's inventory to the provided list of items and/or customitems names, clearing any items it already possess. Declaration public static void ResetInventory(this Player player, List<string> newItems, bool displayMessage = false) Parameters Type Name Description Player player The player to which items will be given. System.Collections.Generic.List < System.String > newItems The new items that have to be added to the inventory. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. | Improve this Doc View Source Unregister(IEnumerable<CustomItem>) Unregisters an System.Collections.Generic.IEnumerable<T> of CustomItem s. Declaration public static void Unregister(this IEnumerable<CustomItem> customItems) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomItem > customItems CustomItem s to be unregistered."
  },
  "api/Exiled.CustomItems.API.Features.CustomGrenade.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomGrenade.html",
    "title": "Class CustomGrenade | EXILED Docs",
    "keywords": "Class CustomGrenade Inheritance System.Object CustomItem CustomGrenade Inherited Members CustomItem.Registered CustomItem.Id CustomItem.Name CustomItem.Description CustomItem.Weight CustomItem.SpawnProperties CustomItem.TrackedSerials CustomItem.ShouldMessageOnGban CustomItem.Get(Int32) CustomItem.Get(String) CustomItem.TryGet(Int32, CustomItem) CustomItem.TryGet(String, CustomItem) CustomItem.TryGet(Player, CustomItem) CustomItem.TryGet(Player, IEnumerable<CustomItem>) CustomItem.TryGet(Item, CustomItem) CustomItem.TryGet(Pickup, CustomItem) CustomItem.TrySpawn(Int32, Vector3, Pickup) CustomItem.TrySpawn(String, Vector3, Pickup) CustomItem.TryGive(Player, String, Boolean) CustomItem.TryGive(Player, Int32, Boolean) CustomItem.TryRegister() CustomItem.TryUnregister() CustomItem.Spawn(Single, Single, Single) CustomItem.Spawn(Single, Single, Single, Item) CustomItem.Spawn(Player) CustomItem.Spawn(Player, Item) CustomItem.Spawn(Vector3) CustomItem.Spawn(Vector3, Item) CustomItem.Spawn(IEnumerable<SpawnPoint>, UInt32) CustomItem.SpawnAll() CustomItem.Give(Player, Item, Boolean) CustomItem.Give(Player, Pickup, Boolean) CustomItem.Init() CustomItem.Destroy() CustomItem.Check(Pickup) CustomItem.Check(Item) CustomItem.ToString() CustomItem.OnOwnerChangingRole(OwnerChangingRoleEventArgs) CustomItem.OnOwnerDying(OwnerDyingEventArgs) CustomItem.OnOwnerEscaping(OwnerEscapingEventArgs) CustomItem.OnOwnerHandcuffing(OwnerHandcuffingEventArgs) CustomItem.OnDropping(DroppingItemEventArgs) CustomItem.OnPickingUp(PickingUpItemEventArgs) CustomItem.OnChanging(ChangingItemEventArgs) CustomItem.OnUpgrading(UpgradingEventArgs) CustomItem.OnUpgrading(UpgradingItemEventArgs) CustomItem.ShowPickedUpMessage(Player) CustomItem.ShowSelectedMessage(Player) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomGrenade : CustomItem Properties | Improve this Doc View Source ExplodeOnCollision Gets or sets a value indicating whether gets or sets a value that determines if the grenade should explode immediately when contacting any surface. Declaration public abstract bool ExplodeOnCollision { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FuseTime Gets or sets a value indicating how long the grenade's fuse time should be. Declaration public abstract float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Tracked Gets a value indicating what thrown grenades are currently being tracked. Declaration protected HashSet<ThrownProjectile> Tracked { get; } Property Value Type Description System.Collections.Generic.HashSet < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > | Improve this Doc View Source Type Gets or sets the ItemType to use for this item. Declaration public override ItemType Type { get; set; } Property Value Type Description ItemType Overrides CustomItem.Type Methods | Improve this Doc View Source Check(ThrownProjectile) Checks to see if the grenade is a tracked custom grenade. Declaration protected bool Check(ThrownProjectile grenade) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrownProjectile grenade The UnityEngine.GameObject of the grenade to check. Returns Type Description System.Boolean True if it is a custom grenade. | Improve this Doc View Source Give(Player, Boolean) Gives the CustomItem to a player. Declaration public override void Give(Player player, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. Overrides CustomItem.Give(Player, Boolean) | Improve this Doc View Source OnChangingIntoGrenade(ChangingIntoGrenadeEventArgs) Handles the tracking of custom grenade pickups that are changed into live grenades by a frag grenade explosion. Declaration protected virtual void OnChangingIntoGrenade(ChangingIntoGrenadeEventArgs ev) Parameters Type Name Description ChangingIntoGrenadeEventArgs ev ChangingIntoGrenadeEventArgs . | Improve this Doc View Source OnExploding(ExplodingGrenadeEventArgs) Handles tracking exploded custom grenades. Declaration protected virtual void OnExploding(ExplodingGrenadeEventArgs ev) Parameters Type Name Description ExplodingGrenadeEventArgs ev ExplodingGrenadeEventArgs . | Improve this Doc View Source OnThrowing(ThrowingItemEventArgs) Handles tracking thrown custom grenades. Declaration protected virtual void OnThrowing(ThrowingItemEventArgs ev) Parameters Type Name Description ThrowingItemEventArgs ev ThrowingItemEventArgs . | Improve this Doc View Source OnWaitingForPlayers() Declaration protected override void OnWaitingForPlayers() Overrides CustomItem.OnWaitingForPlayers() | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides CustomItem.SubscribeEvents() | Improve this Doc View Source Throw(Vector3, Single, Single, ItemType, Player) Spawns a live grenade object on the map. Declaration public virtual Pickup Throw(Vector3 position, float force, float fuseTime = 3F, ItemType grenadeType = ItemType.GrenadeHE, Player player = null) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 to spawn the grenade at. System.Single force The amount of force to throw with. System.Single fuseTime The System.Single fuse time of the grenade. ItemType grenadeType The GrenadeType of the grenade to spawn. Player player The Player to count as the thrower of the grenade. Returns Type Description Pickup The Pickup being spawned. | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides CustomItem.UnsubscribeEvents() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.CustomItem.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomItem.html",
    "title": "Class CustomItem | EXILED Docs",
    "keywords": "Class CustomItem The Custom Item base class. Inheritance System.Object CustomItem CustomGrenade CustomWeapon Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomItem Properties | Improve this Doc View Source Description Gets or sets the description of the item. Declaration public abstract string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Gets or sets the custom ItemID of the item. Declaration public abstract uint Id { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Name Gets or sets the name of the item. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Registered Gets the list of current Item Managers. Declaration public static HashSet<CustomItem> Registered { get; } Property Value Type Description System.Collections.Generic.HashSet < CustomItem > | Improve this Doc View Source ShouldMessageOnGban Gets a value indicating whether whether or not this item causes things to happen that may be considered hacks, and thus be shown to global moderators as being present in a player's inventory when they gban them. Declaration public virtual bool ShouldMessageOnGban { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SpawnProperties Gets or sets the list of spawn locations and chances for each one. Declaration public abstract SpawnProperties SpawnProperties { get; set; } Property Value Type Description SpawnProperties | Improve this Doc View Source TrackedSerials Gets the list of custom items inside players' inventory being tracked as the current item. Declaration public HashSet<int> TrackedSerials { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Int32 > | Improve this Doc View Source Type Gets or sets the ItemType to use for this item. Declaration public virtual ItemType Type { get; set; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets or sets the weight of the item. Declaration public abstract float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Check(Item) Checks the specified inventory item to see if it is a custom item. Declaration public virtual bool Check(Item item) Parameters Type Name Description Item item The Item to check. Returns Type Description System.Boolean True if it is a custom item. | Improve this Doc View Source Check(Pickup) Checks the specified pickup to see if it is a custom item. Declaration public virtual bool Check(Pickup pickup) Parameters Type Name Description Pickup pickup The Pickup to check. Returns Type Description System.Boolean True if it is a custom item. | Improve this Doc View Source Destroy() Called when the item is unregistered. Declaration public virtual void Destroy() | Improve this Doc View Source Get(Int32) Gets a CustomItem with a specific ID. Declaration public static CustomItem Get(int id) Parameters Type Name Description System.Int32 id The CustomItem ID. Returns Type Description CustomItem The CustomItem matching the search, null if not registered. | Improve this Doc View Source Get(String) Gets a CustomItem with a specific name. Declaration public static CustomItem Get(string name) Parameters Type Name Description System.String name The CustomItem name. Returns Type Description CustomItem The CustomItem matching the search, null if not registered. | Improve this Doc View Source Give(Player, Item, Boolean) Gives an Item as a CustomItem to a Player . Declaration public virtual void Give(Player player, Item item, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. Item item The Item to be given. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. | Improve this Doc View Source Give(Player, Pickup, Boolean) Gives a InventorySystem.Items.Pickups.ItemPickupBase as a CustomItem to a Player . Declaration public virtual void Give(Player player, Pickup pickup, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase to be given. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. | Improve this Doc View Source Give(Player, Boolean) Gives the CustomItem to a player. Declaration public virtual void Give(Player player, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. | Improve this Doc View Source Init() Called when the item is registered. Declaration public virtual void Init() | Improve this Doc View Source OnChanging(ChangingItemEventArgs) Handles tracking items when they are selected in the player's inventory. Declaration protected virtual void OnChanging(ChangingItemEventArgs ev) Parameters Type Name Description ChangingItemEventArgs ev ChangingItemEventArgs . | Improve this Doc View Source OnDropping(DroppingItemEventArgs) Handles tracking items when they are dropped by a player. Declaration protected virtual void OnDropping(DroppingItemEventArgs ev) Parameters Type Name Description DroppingItemEventArgs ev DroppingItemEventArgs . | Improve this Doc View Source OnOwnerChangingRole(OwnerChangingRoleEventArgs) Handles tracking items when they a player changes their role. Declaration protected virtual void OnOwnerChangingRole(OwnerChangingRoleEventArgs ev) Parameters Type Name Description OwnerChangingRoleEventArgs ev OwnerChangingRoleEventArgs . | Improve this Doc View Source OnOwnerDying(OwnerDyingEventArgs) Handles making sure custom items are not \"lost\" when a player dies. Declaration protected virtual void OnOwnerDying(OwnerDyingEventArgs ev) Parameters Type Name Description OwnerDyingEventArgs ev OwnerDyingEventArgs . | Improve this Doc View Source OnOwnerEscaping(OwnerEscapingEventArgs) Handles making sure custom items are not \"lost\" when a player escapes. Declaration protected virtual void OnOwnerEscaping(OwnerEscapingEventArgs ev) Parameters Type Name Description OwnerEscapingEventArgs ev OwnerEscapingEventArgs . | Improve this Doc View Source OnOwnerHandcuffing(OwnerHandcuffingEventArgs) Handles making sure custom items are not \"lost\" when being handcuffed. Declaration protected virtual void OnOwnerHandcuffing(OwnerHandcuffingEventArgs ev) Parameters Type Name Description OwnerHandcuffingEventArgs ev OwnerHandcuffingEventArgs . | Improve this Doc View Source OnPickingUp(PickingUpItemEventArgs) Handles tracking items when they are picked up by a player. Declaration protected virtual void OnPickingUp(PickingUpItemEventArgs ev) Parameters Type Name Description PickingUpItemEventArgs ev PickingUpItemEventArgs . | Improve this Doc View Source OnUpgrading(UpgradingEventArgs) Handles making sure custom items are not affected by SCP-914. Declaration protected virtual void OnUpgrading(UpgradingEventArgs ev) Parameters Type Name Description UpgradingEventArgs ev UpgradingEventArgs . | Improve this Doc View Source OnUpgrading(UpgradingItemEventArgs) Declaration protected virtual void OnUpgrading(UpgradingItemEventArgs ev) Parameters Type Name Description UpgradingItemEventArgs ev | Improve this Doc View Source OnWaitingForPlayers() Clears the lists of item uniqIDs and Pickups since any still in the list will be invalid. Declaration protected virtual void OnWaitingForPlayers() | Improve this Doc View Source ShowPickedUpMessage(Player) Shows a message to the player when he pickups a custom item. Declaration protected virtual void ShowPickedUpMessage(Player player) Parameters Type Name Description Player player The Player who will be shown the message. | Improve this Doc View Source ShowSelectedMessage(Player) Shows a message to the player when he selects a custom item. Declaration protected virtual void ShowSelectedMessage(Player player) Parameters Type Name Description Player player The Player who will be shown the message. | Improve this Doc View Source Spawn(Player) Spawns the CustomItem where a specific Player is. Declaration public virtual Pickup Spawn(Player player) Parameters Type Name Description Player player The Player position where the CustomItem will be spawned. Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(Player, Item) Spawns a Item as a CustomItem where a specific Player is. Declaration public virtual Pickup Spawn(Player player, Item item) Parameters Type Name Description Player player The Player position where the CustomItem will be spawned. Item item The Item to be spawned as a CustomItem . Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(IEnumerable<SpawnPoint>, UInt32) Spawns CustomItem s inside spawnPoints . Declaration public virtual uint Spawn(IEnumerable<SpawnPoint> spawnPoints, uint limit) Parameters Type Name Description System.Collections.Generic.IEnumerable < SpawnPoint > spawnPoints The spawn points System.Collections.Generic.IEnumerable<T> . System.UInt32 limit The spawn limit. Returns Type Description System.UInt32 Returns the number of spawned items. | Improve this Doc View Source Spawn(Single, Single, Single) Spawns the CustomItem in a specific location. Declaration public virtual Pickup Spawn(float x, float y, float z) Parameters Type Name Description System.Single x The x coordinate. System.Single y The y coordinate. System.Single z The z coordinate. Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(Single, Single, Single, Item) Spawns a Item as a CustomItem in a specific location. Declaration public virtual Pickup Spawn(float x, float y, float z, Item item) Parameters Type Name Description System.Single x The x coordinate. System.Single y The y coordinate. System.Single z The z coordinate. Item item The Item to be spawned as a CustomItem . Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(Vector3) Spawns the CustomItem in a specific position. Declaration public virtual Pickup Spawn(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 where the CustomItem will be spawned. Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(Vector3, Item) Spawns a Item as a CustomItem in a specific position. Declaration public virtual Pickup Spawn(Vector3 position, Item item) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 where the CustomItem will be spawned. Item item The Item to be spawned as a CustomItem . Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source SpawnAll() Spawns all items at their dynamic and static positions. Declaration public virtual void SpawnAll() | Improve this Doc View Source SubscribeEvents() Called after the manager is initialized, to allow loading of special event handlers. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source TryGet(Item, out CustomItem) Checks to see if this item is a custom item. Declaration public static bool TryGet(Item item, out CustomItem customItem) Parameters Type Name Description Item item The Item to check. CustomItem customItem The CustomItem this item is. Returns Type Description System.Boolean True if the item is a custom item. | Improve this Doc View Source TryGet(Pickup, out CustomItem) Checks if this pickup is a custom item. Declaration public static bool TryGet(Pickup pickup, out CustomItem customItem) Parameters Type Name Description Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase to check. CustomItem customItem The CustomItem this pickup is. Returns Type Description System.Boolean True if the pickup is a custom item. | Improve this Doc View Source TryGet(Player, out CustomItem) Tries to get the player's current CustomItem in their hand. Declaration public static bool TryGet(Player player, out CustomItem customItem) Parameters Type Name Description Player player The Player to check. CustomItem customItem The CustomItem in their hand. Returns Type Description System.Boolean Returns a value indicating whether the Player has a CustomItem in their hand or not. | Improve this Doc View Source TryGet(Player, out IEnumerable<CustomItem>) Tries to get the player's System.Collections.Generic.IEnumerable<T> of CustomItem . Declaration public static bool TryGet(Player player, out IEnumerable<CustomItem> customItems) Parameters Type Name Description Player player The Player to check. System.Collections.Generic.IEnumerable < CustomItem > customItems The player's System.Collections.Generic.IEnumerable<T> of CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the Player has a CustomItem in their hand or not. | Improve this Doc View Source TryGet(Int32, out CustomItem) Tries to get a CustomItem with a specific ID. Declaration public static bool TryGet(int id, out CustomItem customItem) Parameters Type Name Description System.Int32 id The CustomItem ID to look for. CustomItem customItem The found CustomItem , null if not registered. Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was found or not. | Improve this Doc View Source TryGet(String, out CustomItem) Tries to get a CustomItem with a specific name. Declaration public static bool TryGet(string name, out CustomItem customItem) Parameters Type Name Description System.String name The CustomItem name to look for. CustomItem customItem The found CustomItem , null if not registered. Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was found or not. | Improve this Doc View Source TryGive(Player, Int32, Boolean) Gives to a specific Player a specic CustomItem . Declaration public static bool TryGive(Player player, int id, bool displayMessage = true) Parameters Type Name Description Player player The Player to give the item to. System.Int32 id The IDs of the CustomItem to give. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. Returns Type Description System.Boolean Returns a value indicating if the player was given the CustomItem or not. | Improve this Doc View Source TryGive(Player, String, Boolean) Gives to a specific Player a specic CustomItem . Declaration public static bool TryGive(Player player, string name, bool displayMessage = true) Parameters Type Name Description Player player The Player to give the item to. System.String name The name of the CustomItem to give. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. Returns Type Description System.Boolean Returns a value indicating if the player was given the CustomItem or not. | Improve this Doc View Source TryRegister() Registers a CustomItem . Declaration public bool TryRegister() Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was registered or not. | Improve this Doc View Source TrySpawn(Int32, Vector3, out Pickup) Tries to spawn a specific CustomItem at a specific UnityEngine.Vector3 position. Declaration public static bool TrySpawn(int id, Vector3 position, out Pickup pickup) Parameters Type Name Description System.Int32 id The ID of the CustomItem to spawn. UnityEngine.Vector3 position The UnityEngine.Vector3 location to spawn the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase instance of the CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was spawned or not. | Improve this Doc View Source TrySpawn(String, Vector3, out Pickup) Tries to spawn a specific CustomItem at a specific UnityEngine.Vector3 position. Declaration public static bool TrySpawn(string name, Vector3 position, out Pickup pickup) Parameters Type Name Description System.String name The name of the CustomItem to spawn. UnityEngine.Vector3 position The UnityEngine.Vector3 location to spawn the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase instance of the CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was spawned or not. | Improve this Doc View Source TryUnregister() Tries to unregister a CustomItem . Declaration public bool TryUnregister() Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was unregistered or not. | Improve this Doc View Source UnsubscribeEvents() Called when the manager is being destroyed, to allow unloading of special event handlers. Declaration protected virtual void UnsubscribeEvents() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.CustomWeapon.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomWeapon.html",
    "title": "Class CustomWeapon | EXILED Docs",
    "keywords": "Class CustomWeapon Inheritance System.Object CustomItem CustomWeapon Inherited Members CustomItem.Registered CustomItem.Id CustomItem.Name CustomItem.Description CustomItem.Weight CustomItem.SpawnProperties CustomItem.TrackedSerials CustomItem.ShouldMessageOnGban CustomItem.Get(Int32) CustomItem.Get(String) CustomItem.TryGet(Int32, CustomItem) CustomItem.TryGet(String, CustomItem) CustomItem.TryGet(Player, CustomItem) CustomItem.TryGet(Player, IEnumerable<CustomItem>) CustomItem.TryGet(Item, CustomItem) CustomItem.TryGet(Pickup, CustomItem) CustomItem.TrySpawn(Int32, Vector3, Pickup) CustomItem.TrySpawn(String, Vector3, Pickup) CustomItem.TryGive(Player, String, Boolean) CustomItem.TryGive(Player, Int32, Boolean) CustomItem.TryRegister() CustomItem.TryUnregister() CustomItem.Spawn(Single, Single, Single) CustomItem.Spawn(Single, Single, Single, Item) CustomItem.Spawn(Player) CustomItem.Spawn(Player, Item) CustomItem.Spawn(IEnumerable<SpawnPoint>, UInt32) CustomItem.SpawnAll() CustomItem.Give(Player, Item, Boolean) CustomItem.Give(Player, Pickup, Boolean) CustomItem.Init() CustomItem.Destroy() CustomItem.Check(Pickup) CustomItem.Check(Item) CustomItem.ToString() CustomItem.OnOwnerChangingRole(OwnerChangingRoleEventArgs) CustomItem.OnOwnerDying(OwnerDyingEventArgs) CustomItem.OnOwnerEscaping(OwnerEscapingEventArgs) CustomItem.OnOwnerHandcuffing(OwnerHandcuffingEventArgs) CustomItem.OnDropping(DroppingItemEventArgs) CustomItem.OnPickingUp(PickingUpItemEventArgs) CustomItem.OnChanging(ChangingItemEventArgs) CustomItem.OnUpgrading(UpgradingEventArgs) CustomItem.OnUpgrading(UpgradingItemEventArgs) CustomItem.OnWaitingForPlayers() CustomItem.ShowPickedUpMessage(Player) CustomItem.ShowSelectedMessage(Player) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomWeapon : CustomItem Properties | Improve this Doc View Source ClipSize Gets or sets a value indicating how big of a clip the weapon will have. Declaration public virtual byte ClipSize { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Damage Gets or sets the weapon damage. Declaration public abstract float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Modifiers Gets or sets the weapon modifiers. Declaration public abstract Modifiers Modifiers { get; set; } Property Value Type Description Modifiers | Improve this Doc View Source Type Declaration public override ItemType Type { get; set; } Property Value Type Description ItemType Overrides CustomItem.Type Methods | Improve this Doc View Source Give(Player, Boolean) Declaration public override void Give(Player player, bool displayMessage) Parameters Type Name Description Player player System.Boolean displayMessage Overrides CustomItem.Give(Player, Boolean) | Improve this Doc View Source OnHurting(HurtingEventArgs) Handles hurting for custom weapons. Declaration protected virtual void OnHurting(HurtingEventArgs ev) Parameters Type Name Description HurtingEventArgs ev HurtingEventArgs . | Improve this Doc View Source OnReloading(ReloadingWeaponEventArgs) Handles reloading for custom weapons. Declaration protected virtual void OnReloading(ReloadingWeaponEventArgs ev) Parameters Type Name Description ReloadingWeaponEventArgs ev ReloadingWeaponEventArgs . | Improve this Doc View Source OnShooting(ShootingEventArgs) Handles shooting for custom weapons. Declaration protected virtual void OnShooting(ShootingEventArgs ev) Parameters Type Name Description ShootingEventArgs ev ShootingEventArgs . | Improve this Doc View Source OnShot(ShotEventArgs) Handles shot for custom weapons. Declaration protected virtual void OnShot(ShotEventArgs ev) Parameters Type Name Description ShotEventArgs ev ShotEventArgs . | Improve this Doc View Source Spawn(Vector3) Declaration public override Pickup Spawn(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Returns Type Description Pickup Overrides CustomItem.Spawn(Vector3) | Improve this Doc View Source Spawn(Vector3, Item) Declaration public override Pickup Spawn(Vector3 position, Item item) Parameters Type Name Description UnityEngine.Vector3 position Item item Returns Type Description Pickup Overrides CustomItem.Spawn(Vector3, Item) | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides CustomItem.SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides CustomItem.UnsubscribeEvents() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.html": {
    "href": "api/Exiled.CustomItems.API.Features.html",
    "title": "Namespace Exiled.CustomItems.API.Features | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.API.Features Classes CustomGrenade CustomItem The Custom Item base class. CustomWeapon Structs Modifiers Weapon modifiers."
  },
  "api/Exiled.CustomItems.API.Features.Modifiers.html": {
    "href": "api/Exiled.CustomItems.API.Features.Modifiers.html",
    "title": "Struct Modifiers | EXILED Docs",
    "keywords": "Struct Modifiers Weapon modifiers. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public struct Modifiers Constructors | Improve this Doc View Source Modifiers(Int32, Int32, Int32) Initializes a new instance of the Modifiers struct. Declaration public Modifiers(int barrelType, int sightType, int otherType) Parameters Type Name Description System.Int32 barrelType System.Int32 sightType System.Int32 otherType Properties | Improve this Doc View Source BarrelType Gets a value indicating what BarrelType the weapon will have. Declaration public int BarrelType { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OtherType Gets a value indicating what OtherType the weapon will have. Declaration public int OtherType { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SightType Gets a value indicating what SightType the weapon will have. Declaration public int SightType { get; } Property Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.html": {
    "href": "api/Exiled.CustomItems.API.html",
    "title": "Namespace Exiled.CustomItems.API | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.API Classes Extensions A collection of API methods. Enums SpawnLocation All of the valid spawn locations."
  },
  "api/Exiled.CustomItems.API.SpawnLocation.html": {
    "href": "api/Exiled.CustomItems.API.SpawnLocation.html",
    "title": "Enum SpawnLocation | EXILED Docs",
    "keywords": "Enum SpawnLocation All of the valid spawn locations. Namespace : Exiled.CustomItems.API Assembly : Exiled.API.dll Syntax public enum SpawnLocation Fields Name Description Inside012 The inside of 012's hallway door. Inside012Bottom The inside of the locked door leaving to SCP-012's room. Inside012Locker The inside of the locked 012 armory door. Inside049Armory The inside of SCP-049's Armory room. Inside079First Inside the first SCP-079 gate. Inside079Secondary The inside of the inner SCP-079 door. Inside096 The inside of SCP-096's locked room behind his spawn. Inside173Armory The inside of the armory next to SCP-173's spawn. Inside173Bottom The inside of the door at the bottom of SCP-173's stairs. Inside173Connector On the side closest to SCP-173's spawn, on the top of the stairs. Inside173Gate Inside SCP-079's gate. Inside914 Just inside of SCP-914. InsideEscapePrimary Inside the first Escape door. InsideEscapeSecondary Inside the second Escape door. InsideGateA Inside the Gate-A room. InsideGateB Inside the Gate-B room. InsideGr18 Inside the GR-18 door. InsideHczArmory Inside the T-Junction HCZ Armory. InsideHid Inside the Micro-HID room. InsideHidLeft Just inside the left door next to Micro-HID room. InsideHidRight Just inside the right door next to Micro-HID room. InsideIntercom Just inside the Intercom door. InsideLczArmory Inside the LCZ Armory. InsideLczCafe Inside the LCZ office room with computers. InsideLczWc Just inside the LCZ WC door. InsideLocker Inside a random locker on the map. InsideNukeArmory Inside the Nuke armory. InsideServersBottom Just inside the door at the bottom of the server's room. InsideSurfaceNuke Inside the surface nuke room. Extension Methods ReflectionExtensions.CopyProperties(Object) SpawnExtensions.GetDoor() SpawnExtensions.GetPosition() SpawnExtensions.GetDoorName()"
  },
  "api/Exiled.CustomItems.Config.html": {
    "href": "api/Exiled.CustomItems.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config The plugin's config class. Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems Assembly : Exiled.CustomItems.dll Syntax public class Config : IConfig Properties | Improve this Doc View Source Debug Gets a value indicating whether if debug mode is enabled. Declaration public bool Debug { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PickedUpHint Gets the hint that is shown when someone pickups a CustomItem . Declaration public Broadcast PickedUpHint { get; } Property Value Type Description Broadcast | Improve this Doc View Source SelectedHint Gets the hint that is shown when someone pickups a CustomItem . Declaration public Broadcast SelectedHint { get; } Property Value Type Description Broadcast Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.CustomItems.html": {
    "href": "api/Exiled.CustomItems.CustomItems.html",
    "title": "Class CustomItems | EXILED Docs",
    "keywords": "Class CustomItems Handles all CustomItem API. Inheritance System.Object Plugin < Config > CustomItems Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems Assembly : Exiled.CustomItems.dll Syntax public class CustomItems : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets the static reference to this CustomItems class. Declaration public static CustomItems Instance { get; } Property Value Type Description CustomItems Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomItems.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomItems.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods PathExtensions.GetPath(IPlugin<IConfig>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.html": {
    "href": "api/Exiled.CustomItems.html",
    "title": "Namespace Exiled.CustomItems | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems Classes Config The plugin's config class. CustomItems Handles all CustomItem API."
  },
  "api/Exiled.CustomRoles.API.Extensions.html": {
    "href": "api/Exiled.CustomRoles.API.Extensions.html",
    "title": "Class Extensions | EXILED Docs",
    "keywords": "Class Extensions A collection of API methods. Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API Assembly : Exiled.CustomRoles.dll Syntax public static class Extensions Methods | Improve this Doc View Source GetCustomRoles(Player) Gets a System.Collections.ObjectModel.ReadOnlyCollection<T> of the player's current custom roles. Declaration public static ReadOnlyCollection<CustomRole> GetCustomRoles(this Player player) Parameters Type Name Description Player player The Player to check for roles. Returns Type Description System.Collections.ObjectModel.ReadOnlyCollection < CustomRole > A System.Collections.ObjectModel.ReadOnlyCollection<T> of all current custom roles. | Improve this Doc View Source Register(IEnumerable<CustomRole>) Registers an System.Collections.Generic.IEnumerable<T> of CustomRole s. Declaration public static void Register(this IEnumerable<CustomRole> customRoles) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomRole > customRoles CustomRole s to be registered. | Improve this Doc View Source Unregister(IEnumerable<CustomRole>) Unregisters an System.Collections.Generic.IEnumerable<T> of CustomRole s. Declaration public static void Unregister(this IEnumerable<CustomRole> customRoles) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomRole > customRoles CustomRole s to be unregistered."
  },
  "api/Exiled.CustomRoles.API.Features.ActiveAbility.html": {
    "href": "api/Exiled.CustomRoles.API.Features.ActiveAbility.html",
    "title": "Class ActiveAbility | EXILED Docs",
    "keywords": "Class ActiveAbility The base class for active (on-use) abilities. Inheritance System.Object CustomAbility ActiveAbility Inherited Members CustomAbility.Registered CustomAbility.Name CustomAbility.Description CustomAbility.Players CustomAbility.Get(String) CustomAbility.TryGet(String, CustomAbility) CustomAbility.TryRegister() CustomAbility.TryUnregister() CustomAbility.AddAbility(Player) CustomAbility.RemoveAbility(Player) CustomAbility.Init() CustomAbility.Destroy() CustomAbility.SubscribeEvents() CustomAbility.UnSubscribeEvents() CustomAbility.AbilityAdded(Player) CustomAbility.AbilityRemoved(Player) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class ActiveAbility : CustomAbility Properties | Improve this Doc View Source ActivePlayers Gets all players actively using this ability. Declaration public HashSet<Player> ActivePlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source CanUseOverride Gets or sets an action to override the behavior of CanUseAbility(Player, out String) . Declaration public virtual Func<bool> CanUseOverride { get; set; } Property Value Type Description System.Func < System.Boolean > | Improve this Doc View Source Cooldown Gets or sets how long must go between ability uses. Declaration public abstract float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Duration Gets or sets how long the ability lasts. Declaration public abstract float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source LastUsed Gets the last time this ability was used. Declaration public Dictionary<Player, DateTime> LastUsed { get; } Property Value Type Description System.Collections.Generic.Dictionary < Player , System.DateTime > Methods | Improve this Doc View Source AbilityEnded(Player) Called when the abilities duration has ended. Declaration protected virtual void AbilityEnded(Player player) Parameters Type Name Description Player player The Player the ability has ended for. | Improve this Doc View Source AbilityUsed(Player) Called when the ability is used. Declaration protected virtual void AbilityUsed(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source CanUseAbility(Player, out String) Checks to see if the ability is usable by the player. Declaration public virtual bool CanUseAbility(Player player, out string response) Parameters Type Name Description Player player The player to check. System.String response The response to send to the player. Returns Type Description System.Boolean True if the ability is usable. | Improve this Doc View Source Check(Player) Checks if the specified player is using the ability. Declaration public override bool Check(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean True if the player is actively using the ability. Overrides CustomAbility.Check(Player) | Improve this Doc View Source EndAbility(Player) Ends the ability. Declaration public void EndAbility(Player player) Parameters Type Name Description Player player The Player the ability is ended for. | Improve this Doc View Source ShowMessage(Player) Called when the ability is successfully used. Declaration protected virtual void ShowMessage(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source UseAbility(Player) Uses the ability. Declaration public void UseAbility(Player player) Parameters Type Name Description Player player The Player using the ability. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.CustomAbility.html": {
    "href": "api/Exiled.CustomRoles.API.Features.CustomAbility.html",
    "title": "Class CustomAbility | EXILED Docs",
    "keywords": "Class CustomAbility The custom ability base class. Inheritance System.Object CustomAbility ActiveAbility PassiveAbility Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class CustomAbility Properties | Improve this Doc View Source Description Gets or sets the description of the ability. Declaration public abstract string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Gets or sets the name of the ability. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Players Gets all players who have this ability. Declaration public HashSet<Player> Players { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source Registered Gets a list of all registered custom abilities. Declaration public static HashSet<CustomAbility> Registered { get; } Property Value Type Description System.Collections.Generic.HashSet < CustomAbility > Methods | Improve this Doc View Source AbilityAdded(Player) Called when the ability is first added to the player. Declaration protected virtual void AbilityAdded(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source AbilityRemoved(Player) Called when the ability is being removed. Declaration protected virtual void AbilityRemoved(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source AddAbility(Player) Adds this ability to the player. Declaration public void AddAbility(Player player) Parameters Type Name Description Player player The Player to give the ability to. | Improve this Doc View Source Check(Player) Checks to see if the specified player has this ability. Declaration public virtual bool Check(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean True if the player has this ability. | Improve this Doc View Source Destroy() Destroys this ability. Declaration public void Destroy() | Improve this Doc View Source Get(String) Gets a CustomRole by name. Declaration public static CustomAbility Get(string name) Parameters Type Name Description System.String name The name of the role to get. Returns Type Description CustomAbility The role, or null if it doesn't exist. | Improve this Doc View Source Init() Initializes this ability. Declaration public void Init() | Improve this Doc View Source RemoveAbility(Player) Removes this ability from the player. Declaration public void RemoveAbility(Player player) Parameters Type Name Description Player player The Player to remove this ability from. | Improve this Doc View Source SubscribeEvents() Loads the internal event handlers for the ability. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source TryGet(String, out CustomAbility) Tries to get a CustomRole by name. Declaration public static bool TryGet(string name, out CustomAbility customAbility) Parameters Type Name Description System.String name The name of the role to get. CustomAbility customAbility The custom role. Returns Type Description System.Boolean True if the role exists. Exceptions Type Condition System.ArgumentNullException If the name is a null or empty string. | Improve this Doc View Source TryRegister() Tries to register this ability. Declaration public bool TryRegister() Returns Type Description System.Boolean True if the ability registered properly. | Improve this Doc View Source TryUnregister() Tries to unregister this ability. Declaration public bool TryUnregister() Returns Type Description System.Boolean True if the ability is unregistered properly. | Improve this Doc View Source UnSubscribeEvents() Unloads the internal event handlers for the ability. Declaration protected virtual void UnSubscribeEvents() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.CustomRole.html": {
    "href": "api/Exiled.CustomRoles.API.Features.CustomRole.html",
    "title": "Class CustomRole | EXILED Docs",
    "keywords": "Class CustomRole The custom role base class. Inheritance System.Object CustomRole Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class CustomRole Properties | Improve this Doc View Source CustomAbilities Gets or sets a list of the roles custom abilities. Declaration public virtual List<CustomAbility> CustomAbilities { get; set; } Property Value Type Description System.Collections.Generic.List < CustomAbility > | Improve this Doc View Source Description Gets or sets the description of this role. Declaration public abstract string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Gets or sets the custom RoleID of the role. Declaration public abstract uint Id { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Inventory Gets or sets the starting inventory for the role. Declaration protected virtual List<string> Inventory { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source KeepInventoryOnSpawn Gets or sets a value indicating whether players keep their current inventory when gaining this role. Declaration protected virtual bool KeepInventoryOnSpawn { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepRoleOnDeath Gets or sets a value indicating whether players keep this role when they die. Declaration protected virtual bool KeepRoleOnDeath { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets or sets the max Health for the role. Declaration public abstract int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Gets or sets the name of this role. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Registered Gets a list of all registered custom roles. Declaration public static HashSet<CustomRole> Registered { get; } Property Value Type Description System.Collections.Generic.HashSet < CustomRole > | Improve this Doc View Source RemovalKillsPlayer Gets or sets a value indicating whether players die when this role is removed. Declaration protected virtual bool RemovalKillsPlayer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Role Gets or sets the RoleType to spawn this role as. Declaration public abstract RoleType Role { get; set; } Property Value Type Description RoleType | Improve this Doc View Source SpawnProperties Gets or sets the possible spawn locations for this role. Declaration protected virtual SpawnProperties SpawnProperties { get; set; } Property Value Type Description SpawnProperties | Improve this Doc View Source TrackedPlayers Gets all of the players currently set to this role. Declaration public HashSet<Player> TrackedPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > Methods | Improve this Doc View Source AddRole(Player) Handles setup of the role, including spawn location, inventory and registering event handlers. Declaration public virtual void AddRole(Player player) Parameters Type Name Description Player player The Player to add the role to. | Improve this Doc View Source Check(Player) Checks if the given player has this role. Declaration public virtual bool Check(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean True if the player has this role. | Improve this Doc View Source Destroy() Destroys this role manager. Declaration public virtual void Destroy() | Improve this Doc View Source Get(Int32) Gets a CustomRole by ID. Declaration public static CustomRole Get(int id) Parameters Type Name Description System.Int32 id The ID of the role to get. Returns Type Description CustomRole The role, or null if it doesn't exist. | Improve this Doc View Source Get(String) Gets a CustomRole by name. Declaration public static CustomRole Get(string name) Parameters Type Name Description System.String name The name of the role to get. Returns Type Description CustomRole The role, or null if it doesn't exist. | Improve this Doc View Source Get(Type) Gets a CustomRole by type. Declaration public static CustomRole Get(Type t) Parameters Type Name Description System.Type t The System.Type to get. Returns Type Description CustomRole The role, or null if it doesn't exist. | Improve this Doc View Source GetSpawnPosition() Gets a random UnityEngine.Vector3 from SpawnProperties . Declaration protected Vector3 GetSpawnPosition() Returns Type Description UnityEngine.Vector3 The chosen spawn location. | Improve this Doc View Source Init() Initializes this role manager. Declaration public virtual void Init() | Improve this Doc View Source RemoveRole(Player) Removes the role from a specific player. Declaration public virtual void RemoveRole(Player player) Parameters Type Name Description Player player The Player to remove the role from. | Improve this Doc View Source RoleAdded(Player) Called after the role has been added to the player. Declaration protected virtual void RoleAdded(Player player) Parameters Type Name Description Player player The Player the role was added to. | Improve this Doc View Source RoleRemoved(Player) Called 1 frame before the role is removed from the player. Declaration protected virtual void RoleRemoved(Player player) Parameters Type Name Description Player player The Player the role was removed from. | Improve this Doc View Source ShowMessage(Player) Shows the spawn message to the player. Declaration protected virtual void ShowMessage(Player player) Parameters Type Name Description Player player The Player to show the message to. | Improve this Doc View Source SubscribeEvents() Called when the role is initialized to setup internal events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source TryAddItem(Player, String) Tries to add an item to the player's inventory by name. Declaration protected bool TryAddItem(Player player, string itemName) Parameters Type Name Description Player player The Player to try giving the item to. System.String itemName The name of the item to try adding. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryGet(Player, out IReadOnlyCollection<CustomRole>) Tries to get a System.Collections.Generic.IReadOnlyCollection<T> of the specified Player 's CustomRole s. Declaration public static bool TryGet(Player player, out IReadOnlyCollection<CustomRole> customRoles) Parameters Type Name Description Player player The player to check. System.Collections.Generic.IReadOnlyCollection < CustomRole > customRoles The custom roles the player has. Returns Type Description System.Boolean True if the player has custom roles. Exceptions Type Condition System.ArgumentNullException If the player is null. | Improve this Doc View Source TryGet(Int32, out CustomRole) Tries to get a CustomRole by . Declaration public static bool TryGet(int id, out CustomRole customRole) Parameters Type Name Description System.Int32 id The ID of the role to get. CustomRole customRole The custom role. Returns Type Description System.Boolean True if the role exists. | Improve this Doc View Source TryGet(String, out CustomRole) Tries to get a CustomRole by name. Declaration public static bool TryGet(string name, out CustomRole customRole) Parameters Type Name Description System.String name The name of the role to get. CustomRole customRole The custom role. Returns Type Description System.Boolean True if the role exists. Exceptions Type Condition System.ArgumentNullException If the name is a null or empty string. | Improve this Doc View Source TryRegister() Tries to register this role. Declaration public bool TryRegister() Returns Type Description System.Boolean True if the role registered properly. | Improve this Doc View Source TryUnregister() Tries to unregister this role. Declaration public bool TryUnregister() Returns Type Description System.Boolean True if the role is unregistered properly. | Improve this Doc View Source UnSubscribeEvents() Called when the role is destroyed to unsubscribe internal event handlers. Declaration protected virtual void UnSubscribeEvents() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.html": {
    "href": "api/Exiled.CustomRoles.API.Features.html",
    "title": "Namespace Exiled.CustomRoles.API.Features | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API.Features Classes ActiveAbility The base class for active (on-use) abilities. CustomAbility The custom ability base class. CustomRole The custom role base class. PassiveAbility The base class for passive (always active) abilities."
  },
  "api/Exiled.CustomRoles.API.Features.PassiveAbility.html": {
    "href": "api/Exiled.CustomRoles.API.Features.PassiveAbility.html",
    "title": "Class PassiveAbility | EXILED Docs",
    "keywords": "Class PassiveAbility The base class for passive (always active) abilities. Inheritance System.Object CustomAbility PassiveAbility Inherited Members CustomAbility.Registered CustomAbility.Name CustomAbility.Description CustomAbility.Players CustomAbility.Get(String) CustomAbility.TryGet(String, CustomAbility) CustomAbility.Check(Player) CustomAbility.TryRegister() CustomAbility.TryUnregister() CustomAbility.AddAbility(Player) CustomAbility.RemoveAbility(Player) CustomAbility.Init() CustomAbility.Destroy() CustomAbility.SubscribeEvents() CustomAbility.UnSubscribeEvents() CustomAbility.AbilityAdded(Player) CustomAbility.AbilityRemoved(Player) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class PassiveAbility : CustomAbility Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.html": {
    "href": "api/Exiled.CustomRoles.API.html",
    "title": "Namespace Exiled.CustomRoles.API | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API Classes Extensions A collection of API methods."
  },
  "api/Exiled.CustomRoles.Commands.html": {
    "href": "api/Exiled.CustomRoles.Commands.html",
    "title": "Namespace Exiled.CustomRoles.Commands | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.Commands Classes UseAbility Handles the using of custom role abilities."
  },
  "api/Exiled.CustomRoles.Commands.UseAbility.html": {
    "href": "api/Exiled.CustomRoles.Commands.UseAbility.html",
    "title": "Class UseAbility | EXILED Docs",
    "keywords": "Class UseAbility Handles the using of custom role abilities. Inheritance System.Object UseAbility Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.Commands Assembly : Exiled.CustomRoles.dll Syntax [CommandHandler(typeof(ClientCommandHandler))] public class UseAbility : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.Config.html": {
    "href": "api/Exiled.CustomRoles.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config The plugin's config. Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles Assembly : Exiled.CustomRoles.dll Syntax public class Config : IConfig Properties | Improve this Doc View Source Debug Gets or sets a value indicating whether debug messages should be printed to the console. Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean System.Boolean . | Improve this Doc View Source GotRoleHint Gets the hint that is shown when someone gets a CustomRole . Declaration public Broadcast GotRoleHint { get; } Property Value Type Description Broadcast | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UsedAbilityHint Gets the hint that is shown when someone used a CustomAbility . Declaration public Broadcast UsedAbilityHint { get; } Property Value Type Description Broadcast Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.CustomRoles.html": {
    "href": "api/Exiled.CustomRoles.CustomRoles.html",
    "title": "Class CustomRoles | EXILED Docs",
    "keywords": "Class CustomRoles Handles all custom role API functions. Inheritance System.Object Plugin < Config > CustomRoles Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles Assembly : Exiled.CustomRoles.dll Syntax public class CustomRoles : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets a static reference to the plugin's instance. Declaration public static CustomRoles Instance { get; } Property Value Type Description CustomRoles Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomRoles.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomRoles.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods PathExtensions.GetPath(IPlugin<IConfig>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.Events.html": {
    "href": "api/Exiled.CustomRoles.Events.html",
    "title": "Namespace Exiled.CustomRoles.Events | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.Events Classes PlayerHandlers Handles general events for players."
  },
  "api/Exiled.CustomRoles.Events.PlayerHandlers.html": {
    "href": "api/Exiled.CustomRoles.Events.PlayerHandlers.html",
    "title": "Class PlayerHandlers | EXILED Docs",
    "keywords": "Class PlayerHandlers Handles general events for players. Inheritance System.Object PlayerHandlers Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.Events Assembly : Exiled.CustomRoles.dll Syntax public class PlayerHandlers Constructors | Improve this Doc View Source PlayerHandlers(CustomRoles) Initializes a new instance of the PlayerHandlers class. Declaration public PlayerHandlers(CustomRoles plugin) Parameters Type Name Description CustomRoles plugin The CustomRoles plugin instance. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.html": {
    "href": "api/Exiled.CustomRoles.html",
    "title": "Namespace Exiled.CustomRoles | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles Classes Config The plugin's config. CustomRoles Handles all custom role API functions."
  },
  "api/Exiled.Events.Commands.Reload.All.html": {
    "href": "api/Exiled.Events.Commands.Reload.All.html",
    "title": "Class All | EXILED Docs",
    "keywords": "Class All The reload configs command. Inheritance System.Object All Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class All : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the All command. Declaration public static All Instance { get; } Property Value Type Description All Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Configs.html": {
    "href": "api/Exiled.Events.Commands.Reload.Configs.html",
    "title": "Class Configs | EXILED Docs",
    "keywords": "Class Configs The reload configs command. Inheritance System.Object Configs Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Configs : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Configs command. Declaration public static Configs Instance { get; } Property Value Type Description Configs Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.GamePlay.html": {
    "href": "api/Exiled.Events.Commands.Reload.GamePlay.html",
    "title": "Class GamePlay | EXILED Docs",
    "keywords": "Class GamePlay The reload gameplay command. Inheritance System.Object GamePlay Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class GamePlay : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the GamePlay command. Declaration public static GamePlay Instance { get; } Property Value Type Description GamePlay Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.html": {
    "href": "api/Exiled.Events.Commands.Reload.html",
    "title": "Namespace Exiled.Events.Commands.Reload | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Commands.Reload Classes All The reload configs command. Configs The reload configs command. GamePlay The reload gameplay command. Plugins The reload plugins command. Reload The reload command. RemoteAdmin The reload remoteadmin command. Translations The reload configs command."
  },
  "api/Exiled.Events.Commands.Reload.Plugins.html": {
    "href": "api/Exiled.Events.Commands.Reload.Plugins.html",
    "title": "Class Plugins | EXILED Docs",
    "keywords": "Class Plugins The reload plugins command. Inheritance System.Object Plugins Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Plugins : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Plugins command. Declaration public static Plugins Instance { get; } Property Value Type Description Plugins Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Reload.html": {
    "href": "api/Exiled.Events.Commands.Reload.Reload.html",
    "title": "Class Reload | EXILED Docs",
    "keywords": "Class Reload The reload command. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Reload Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax [CommandHandler(typeof(RemoteAdminCommandHandler))] [CommandHandler(typeof(GameConsoleCommandHandler))] public class Reload : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Reload() Initializes a new instance of the Reload class. Declaration public Reload() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.RemoteAdmin.html": {
    "href": "api/Exiled.Events.Commands.Reload.RemoteAdmin.html",
    "title": "Class RemoteAdmin | EXILED Docs",
    "keywords": "Class RemoteAdmin The reload remoteadmin command. Inheritance System.Object RemoteAdmin Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class RemoteAdmin : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the RemoteAdmin command. Declaration public static RemoteAdmin Instance { get; } Property Value Type Description RemoteAdmin Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Translations.html": {
    "href": "api/Exiled.Events.Commands.Reload.Translations.html",
    "title": "Class Translations | EXILED Docs",
    "keywords": "Class Translations The reload configs command. Inheritance System.Object Translations Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Translations : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Translations command. Declaration public static Translations Instance { get; } Property Value Type Description Translations Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Show.html": {
    "href": "api/Exiled.Events.Commands.Show.html",
    "title": "Namespace Exiled.Events.Commands.Show | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Commands.Show Classes Plugins The command to show all plugins. Show The command to show all plugins."
  },
  "api/Exiled.Events.Commands.Show.Plugins.html": {
    "href": "api/Exiled.Events.Commands.Show.Plugins.html",
    "title": "Class Plugins | EXILED Docs",
    "keywords": "Class Plugins The command to show all plugins. Inheritance System.Object Plugins Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Show Assembly : Exiled.Events.dll Syntax public sealed class Plugins : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Show.Show.html": {
    "href": "api/Exiled.Events.Commands.Show.Show.html",
    "title": "Class Show | EXILED Docs",
    "keywords": "Class Show The command to show all plugins. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Show Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Show Assembly : Exiled.Events.dll Syntax [CommandHandler(typeof(RemoteAdminCommandHandler))] [CommandHandler(typeof(GameConsoleCommandHandler))] public sealed class Show : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Show() Initializes a new instance of the Show class. Declaration public Show() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Config.html": {
    "href": "api/Exiled.Events.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public sealed class Config : IConfig Properties | Improve this Doc View Source CanSpawnBlood Gets or sets a value indicating whether the blood can be spawned or not. Declaration public bool CanSpawnBlood { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanTutorialBlockScp173 Gets or sets a value indicating whether SCP-173 can be blocked or not by the tutorial. Declaration public bool CanTutorialBlockScp173 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanTutorialTriggerScp096 Gets or sets a value indicating whether SCP-096 can be triggered or not by the tutorial. Declaration public bool CanTutorialTriggerScp096 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNameTrackingEnabled Gets or sets a value indicating whether the name tracking is enabled or not. Declaration public bool IsNameTrackingEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogRaCommands Gets or sets a value indicating whether to log RA commands. Declaration public bool LogRaCommands { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldDropInventory Gets or sets a value indicating whether the inventory should be dropped before being set as spectator, through commands or plugins. Declaration public bool ShouldDropInventory { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldLogBans Gets a value indicating whether bans should be logged or not. Declaration public bool ShouldLogBans { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldReloadConfigsAtRoundRestart Gets or sets a value indicating whether configs has to be reloaded every time a round restarts. Declaration public bool ShouldReloadConfigsAtRoundRestart { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldReloadTranslationsAtRoundRestart Gets or sets a value indicating whether translations has to be reloaded every time a round restarts. Declaration public bool ShouldReloadTranslationsAtRoundRestart { get; set; } Property Value Type Description System.Boolean Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ActivatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ActivatingEventArgs.html",
    "title": "Class ActivatingEventArgs | EXILED Docs",
    "keywords": "Class ActivatingEventArgs Contains all informations before a player activates SCP-914. Inheritance System.Object System.EventArgs ActivatingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ActivatingEventArgs : EventArgs Constructors | Improve this Doc View Source ActivatingEventArgs(Player, Boolean) Initializes a new instance of the ActivatingEventArgs class. Declaration public ActivatingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-914 can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's activating SCP-914. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ActivatingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ActivatingGeneratorEventArgs.html",
    "title": "Class ActivatingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class ActivatingGeneratorEventArgs Contains all information before a player inserts a tablet into a generator. Inheritance System.Object System.EventArgs ActivatingGeneratorEventArgs StoppingGeneratorEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ActivatingGeneratorEventArgs : EventArgs Constructors | Improve this Doc View Source ActivatingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the ActivatingGeneratorEventArgs class. Declaration public ActivatingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the MapGeneration.Distributors.Scp079Generator instance. Declaration public Scp079Generator Generator { get; } Property Value Type Description MapGeneration.Distributors.Scp079Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the tablet can be inserted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's inserting a tablet into the generator. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ActivatingWarheadPanelEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ActivatingWarheadPanelEventArgs.html",
    "title": "Class ActivatingWarheadPanelEventArgs | EXILED Docs",
    "keywords": "Class ActivatingWarheadPanelEventArgs Contains all informations before a player activates the warhead panel. Inheritance System.Object System.EventArgs ActivatingWarheadPanelEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ActivatingWarheadPanelEventArgs : EventArgs Constructors | Improve this Doc View Source ActivatingWarheadPanelEventArgs(Player, Boolean) Initializes a new instance of the ActivatingWarheadPanelEventArgs class. Declaration public ActivatingWarheadPanelEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the warhead can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's trying to activate the warhead panel. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ActivatingWorkstationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ActivatingWorkstationEventArgs.html",
    "title": "Class ActivatingWorkstationEventArgs | EXILED Docs",
    "keywords": "Class ActivatingWorkstationEventArgs Contains all informations before a player activates a workstation. Inheritance System.Object System.EventArgs ActivatingWorkstationEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ActivatingWorkstationEventArgs : EventArgs Constructors | Improve this Doc View Source ActivatingWorkstationEventArgs(Player, WorkstationController, Boolean) Initializes a new instance of the ActivatingWorkstationEventArgs class. Declaration public ActivatingWorkstationEventArgs(Player player, WorkstationController controller, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Firearms.Attachments.WorkstationController controller System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the workstation can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewStatus Gets or sets the workstation status. Declaration public WorkstationController.WorkstationStatus NewStatus { get; set; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController.WorkstationStatus | Improve this Doc View Source Player Gets the player who's trying to activate the workstation. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source WorkstationController Gets the workstation. Declaration public WorkstationController WorkstationController { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.AddingTargetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.AddingTargetEventArgs.html",
    "title": "Class AddingTargetEventArgs | EXILED Docs",
    "keywords": "Class AddingTargetEventArgs Contains all informations before adding a target to SCP-096. Inheritance System.Object System.EventArgs AddingTargetEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class AddingTargetEventArgs : EventArgs Constructors | Improve this Doc View Source AddingTargetEventArgs(Player, Player, Single, Boolean) Initializes a new instance of the AddingTargetEventArgs class. Declaration public AddingTargetEventArgs(Player scp096, Player target, float enrageTimeToAdd, bool isAllowed = true) Parameters Type Name Description Player scp096 Player target System.Single enrageTimeToAdd System.Boolean isAllowed Properties | Improve this Doc View Source EnrageTimeToAdd Gets or sets how much time is added to SCP-096's enrage timer if IsAllowed is true. Declaration public float EnrageTimeToAdd { get; set; } Property Value Type Description System.Single Remarks This does not affect anything if he doesn't already have any targets before this event is called. | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the target is allowed to be added. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Scp096 Gets the Player that is controlling SCP-096. Declaration public Player Scp096 { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the Player being added as a target. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.AimingDownSightEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.AimingDownSightEventArgs.html",
    "title": "Class AimingDownSightEventArgs | EXILED Docs",
    "keywords": "Class AimingDownSightEventArgs Contains all information when a player aims. Inheritance System.Object System.EventArgs AimingDownSightEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class AimingDownSightEventArgs : EventArgs Constructors | Improve this Doc View Source AimingDownSightEventArgs(Player, Boolean, Boolean) Initializes a new instance of the AimingDownSightEventArgs class. Declaration public AimingDownSightEventArgs(Player player, bool adsIn, bool adsOut) Parameters Type Name Description Player player System.Boolean adsIn System.Boolean adsOut Properties | Improve this Doc View Source AdsIn Gets a value indicating whether or not the player is aiming down sight in. Declaration public bool AdsIn { get; } Property Value Type Description System.Boolean | Improve this Doc View Source AdsOut Gets a value indicating whether or not the player is aiming down sight out. Declaration public bool AdsOut { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Firearm Gets the Firearm used to trigger the aim action. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source Player Gets the player who's triggering the aim action. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.AnnouncingDecontaminationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.AnnouncingDecontaminationEventArgs.html",
    "title": "Class AnnouncingDecontaminationEventArgs | EXILED Docs",
    "keywords": "Class AnnouncingDecontaminationEventArgs Contains all informations before C.A.S.S.I.E announces light containment zone decontamination. Inheritance System.Object System.EventArgs AnnouncingDecontaminationEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class AnnouncingDecontaminationEventArgs : EventArgs Constructors | Improve this Doc View Source AnnouncingDecontaminationEventArgs(Int32, Boolean) Initializes a new instance of the AnnouncingDecontaminationEventArgs class. Declaration public AnnouncingDecontaminationEventArgs(int announcementId, bool isGlobal) Parameters Type Name Description System.Int32 announcementId System.Boolean isGlobal Properties | Improve this Doc View Source Id Gets the announcement id, from 0 to 6. Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsGlobal Gets a value indicating whether the announcement is going to be global or not. Declaration public bool IsGlobal { get; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.AnnouncingNtfEntranceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.AnnouncingNtfEntranceEventArgs.html",
    "title": "Class AnnouncingNtfEntranceEventArgs | EXILED Docs",
    "keywords": "Class AnnouncingNtfEntranceEventArgs Contains all informations before C.A.S.S.I.E announces the NTF entrance. Inheritance System.Object System.EventArgs AnnouncingNtfEntranceEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class AnnouncingNtfEntranceEventArgs : EventArgs Constructors | Improve this Doc View Source AnnouncingNtfEntranceEventArgs(Int32, String, Int32, Boolean) Initializes a new instance of the AnnouncingNtfEntranceEventArgs class. Declaration public AnnouncingNtfEntranceEventArgs(int scpsLeft, string unitName, int unitNumber, bool isAllowed = true) Parameters Type Name Description System.Int32 scpsLeft System.String unitName System.Int32 unitNumber System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the NTF spawn will be announced by C.A.S.S.I.E. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScpsLeft Gets the number of SCPs left. Declaration public int ScpsLeft { get; } Property Value Type Description System.Int32 | Improve this Doc View Source UnitName Gets or sets the NTF unit name. Declaration public string UnitName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UnitNumber Gets or sets the NTF unit number. Declaration public int UnitNumber { get; set; } Property Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.AnnouncingScpTerminationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.AnnouncingScpTerminationEventArgs.html",
    "title": "Class AnnouncingScpTerminationEventArgs | EXILED Docs",
    "keywords": "Class AnnouncingScpTerminationEventArgs Contains all informations before C.A.S.S.I.E announces an SCP termination. Inheritance System.Object System.EventArgs AnnouncingScpTerminationEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class AnnouncingScpTerminationEventArgs : EventArgs Constructors | Improve this Doc View Source AnnouncingScpTerminationEventArgs(Player, DamageHandlerBase, Boolean) Initializes a new instance of the AnnouncingScpTerminationEventArgs class. Declaration public AnnouncingScpTerminationEventArgs(Player scp, DamageHandlerBase damageHandlerBase, bool isAllowed = true) Parameters Type Name Description Player scp PlayerStatsSystem.DamageHandlerBase damageHandlerBase System.Boolean isAllowed Properties | Improve this Doc View Source DamageHandler Gets or sets the PlayerStatsSystem.DamageHandlerBase . Declaration [Obsolete(\"Use AnnouncingScpTerminationEventArgs.Handler\")] public DamageHandlerBase DamageHandler { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Handler Gets or sets the DamageHandler . Declaration public DamageHandler Handler { get; set; } Property Value Type Description DamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the SCP termination will be announced by C.A.S.S.I.E. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Killer Gets the player who killed the SCP. Declaration public Player Killer { get; } Property Value Type Description Player | Improve this Doc View Source Player Gets the player the announcement is being played for. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Role Gets the killed Role . Declaration public Role Role { get; } Property Value Type Description Role | Improve this Doc View Source TerminationCause Gets or sets the termination cause. Declaration public string TerminationCause { get; set; } Property Value Type Description System.String Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.BannedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.BannedEventArgs.html",
    "title": "Class BannedEventArgs | EXILED Docs",
    "keywords": "Class BannedEventArgs Contains all informations after banning a player from the server. Inheritance System.Object System.EventArgs BannedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class BannedEventArgs : EventArgs Constructors | Improve this Doc View Source BannedEventArgs(Player, Player, BanDetails, BanHandler.BanType) Initializes a new instance of the BannedEventArgs class. Declaration public BannedEventArgs(Player target, Player issuer, BanDetails details, BanHandler.BanType type) Parameters Type Name Description Player target The banned player. Player issuer The issuer player. BanDetails details The ban details. BanHandler.BanType type Properties | Improve this Doc View Source Details Gets the ban details. Declaration public BanDetails Details { get; } Property Value Type Description BanDetails | Improve this Doc View Source Issuer Gets the issuer player. Declaration public Player Issuer { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the banned player. Declaration public Player Target { get; } Property Value Type Description Player | Improve this Doc View Source Type Gets the ban type. Declaration public BanHandler.BanType Type { get; } Property Value Type Description BanHandler.BanType Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.BanningEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.BanningEventArgs.html",
    "title": "Class BanningEventArgs | EXILED Docs",
    "keywords": "Class BanningEventArgs Contains all informations before banning a player from the server. Inheritance System.Object System.EventArgs KickingEventArgs BanningEventArgs Inherited Members KickingEventArgs.Target KickingEventArgs.Issuer KickingEventArgs.Reason KickingEventArgs.FullMessage KickingEventArgs.IsAllowed KickingEventArgs.LogBanChange(String) System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class BanningEventArgs : KickingEventArgs Constructors | Improve this Doc View Source BanningEventArgs(Player, Player, Int64, String, String, Boolean) Initializes a new instance of the BanningEventArgs class. Declaration public BanningEventArgs(Player target, Player issuer, long duration, string reason, string fullMessage, bool isAllowed = true) Parameters Type Name Description Player target The ban target. Player issuer The ban issuer. System.Int64 duration The ban minutes duration. System.String reason The ban reason. System.String fullMessage The ban full message. System.Boolean isAllowed Indicates whether the event can be executed or not. Properties | Improve this Doc View Source Duration Gets or sets the ban duration. Declaration public long Duration { get; set; } Property Value Type Description System.Int64 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.BlinkingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.BlinkingEventArgs.html",
    "title": "Class BlinkingEventArgs | EXILED Docs",
    "keywords": "Class BlinkingEventArgs Contains all informations before a players blink near SCP-173. Inheritance System.Object System.EventArgs BlinkingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class BlinkingEventArgs : EventArgs Constructors | Improve this Doc View Source BlinkingEventArgs(Player, List<Player>, Vector3) Initializes a new instance of the BlinkingEventArgs class. Declaration public BlinkingEventArgs(Player player, List<Player> targets, Vector3 blinkPos) Parameters Type Name Description Player player System.Collections.Generic.List < Player > targets UnityEngine.Vector3 blinkPos Properties | Improve this Doc View Source BlinkCooldown Gets or sets how long the blink cooldown will last. Declaration public float BlinkCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BlinkPosition Gets or sets the location the player is blinking to. Declaration public Vector3 BlinkPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the player is allowed to blink. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who controlling SCP-173. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Targets Gets a list of players who have triggered SCP-173. Declaration public List<Player> Targets { get; } Property Value Type Description System.Collections.Generic.List < Player > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.CalmingDownEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.CalmingDownEventArgs.html",
    "title": "Class CalmingDownEventArgs | EXILED Docs",
    "keywords": "Class CalmingDownEventArgs Contains all informations before SCP-096 calms down. Inheritance System.Object System.EventArgs EnragingEventArgs CalmingDownEventArgs Inherited Members EnragingEventArgs.Scp096 EnragingEventArgs.Player EnragingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class CalmingDownEventArgs : EnragingEventArgs Constructors | Improve this Doc View Source CalmingDownEventArgs(Scp096, Player, Boolean) Initializes a new instance of the CalmingDownEventArgs class. Declaration public CalmingDownEventArgs(Scp096 scp096, Player player, bool isAllowed = true) Parameters Type Name Description PlayableScps.Scp096 scp096 The PlayableScps.Scp096 instance. Player player The player who's controlling SCP-096. System.Boolean isAllowed Indicates whether or not SCP-096 can calm down. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.CancellingItemUseEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.CancellingItemUseEventArgs.html",
    "title": "Class CancellingItemUseEventArgs | EXILED Docs",
    "keywords": "Class CancellingItemUseEventArgs Contains all information before a player cancels usage of a medical item. Inheritance System.Object System.EventArgs UsedItemEventArgs UsingItemEventArgs CancellingItemUseEventArgs Inherited Members UsingItemEventArgs.Cooldown UsingItemEventArgs.IsAllowed UsedItemEventArgs.Player UsedItemEventArgs.Item System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class CancellingItemUseEventArgs : UsingItemEventArgs Constructors | Improve this Doc View Source CancellingItemUseEventArgs(Player, UsableItem) Initializes a new instance of the CancellingItemUseEventArgs class. Declaration public CancellingItemUseEventArgs(Player player, UsableItem item) Parameters Type Name Description Player player The player who's stopping the use of the medical item. InventorySystem.Items.Usables.UsableItem item Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingAttachmentsEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingAttachmentsEventArgs.html",
    "title": "Class ChangingAttachmentsEventArgs | EXILED Docs",
    "keywords": "Class ChangingAttachmentsEventArgs Contains all informations before changing item attachments. Inheritance System.Object System.EventArgs ChangingAttributesEventArgs ChangingAttachmentsEventArgs Inherited Members ChangingAttributesEventArgs.NewItem ChangingAttributesEventArgs.NewUniqueId ChangingAttributesEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingAttachmentsEventArgs : ChangingAttributesEventArgs Constructors | Improve this Doc View Source ChangingAttachmentsEventArgs(Firearm, SightType, BarrelType, OtherType, Boolean) Initializes a new instance of the ChangingAttachmentsEventArgs class. Declaration public ChangingAttachmentsEventArgs(Firearm item, SightType newSight, BarrelType newBarrel, OtherType newOther, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Firearms.Firearm item SightType newSight BarrelType newBarrel OtherType newOther System.Boolean isAllowed Properties | Improve this Doc View Source NewBarrel Gets the new item barrel attachment. Declaration public BarrelType NewBarrel { get; } Property Value Type Description BarrelType | Improve this Doc View Source NewOther Gets the new item other attachment. Declaration public OtherType NewOther { get; } Property Value Type Description OtherType | Improve this Doc View Source NewSight Gets the new item sight attachment. Declaration public SightType NewSight { get; } Property Value Type Description SightType | Improve this Doc View Source OldItem Declaration public Firearm OldItem { get; } Property Value Type Description Firearm Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingAttributesEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingAttributesEventArgs.html",
    "title": "Class ChangingAttributesEventArgs | EXILED Docs",
    "keywords": "Class ChangingAttributesEventArgs Contains all informations before changing item attributes. Inheritance System.Object System.EventArgs ChangingAttributesEventArgs ChangingAttachmentsEventArgs ChangingDurabilityEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingAttributesEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingAttributesEventArgs(ItemBase, ItemBase, Boolean) Initializes a new instance of the ChangingAttributesEventArgs class. Declaration public ChangingAttributesEventArgs(ItemBase oldItem, ItemBase newItem, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.ItemBase oldItem InventorySystem.Items.ItemBase newItem System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event can be executed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewItem Gets or sets the item. Declaration public Item NewItem { get; set; } Property Value Type Description Item | Improve this Doc View Source NewUniqueId Gets the new item unique id. Declaration public int NewUniqueId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OldItem Gets the old item. Declaration public Item OldItem { get; } Property Value Type Description Item Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingCameraEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingCameraEventArgs.html",
    "title": "Class ChangingCameraEventArgs | EXILED Docs",
    "keywords": "Class ChangingCameraEventArgs Contains all informations before a SCP-079 changes the current camera. Inheritance System.Object System.EventArgs ChangingCameraEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingCameraEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingCameraEventArgs(Player, Camera079, Single, Boolean) Initializes a new instance of the ChangingCameraEventArgs class. Declaration public ChangingCameraEventArgs(Player player, Camera079 camera, float auxiliaryPowerCost, bool isAllowed = true) Parameters Type Name Description Player player Camera079 camera System.Single auxiliaryPowerCost System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power that will be required to switch cameras. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Camera Gets or sets the camera SCP-079 will be moved to. Declaration public Camera079 Camera { get; set; } Property Value Type Description Camera079 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can switch cameras. Defaults to a value describing whether or not SCP-079 has enough auxiliary power to switch. Can be set to true to allow a switch regardless of SCP-079's auxiliary power amount. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingDurabilityEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingDurabilityEventArgs.html",
    "title": "Class ChangingDurabilityEventArgs | EXILED Docs",
    "keywords": "Class ChangingDurabilityEventArgs Contains all informations before changing item durability. Inheritance System.Object System.EventArgs ChangingAttributesEventArgs ChangingDurabilityEventArgs Inherited Members ChangingAttributesEventArgs.OldItem ChangingAttributesEventArgs.NewItem ChangingAttributesEventArgs.NewUniqueId ChangingAttributesEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingDurabilityEventArgs : ChangingAttributesEventArgs Constructors | Improve this Doc View Source ChangingDurabilityEventArgs(Firearm, Single, Boolean) Initializes a new instance of the ChangingDurabilityEventArgs class. Declaration public ChangingDurabilityEventArgs(Firearm item, float newDurability, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Firearms.Firearm item System.Single newDurability System.Boolean isAllowed Properties | Improve this Doc View Source Item Declaration public Firearm Item { get; set; } Property Value Type Description Firearm | Improve this Doc View Source NewDurability Gets or sets the new durability to be used by the weapon. Declaration public float NewDurability { get; set; } Property Value Type Description System.Single Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingGroupEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingGroupEventArgs.html",
    "title": "Class ChangingGroupEventArgs | EXILED Docs",
    "keywords": "Class ChangingGroupEventArgs Contains all informations before a player changes his group. Inheritance System.Object System.EventArgs ChangingGroupEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingGroupEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingGroupEventArgs(Player, UserGroup, Boolean) Initializes a new instance of the ChangingGroupEventArgs class. Declaration public ChangingGroupEventArgs(Player player, UserGroup newGroup, bool isAllowed = true) Parameters Type Name Description Player player UserGroup newGroup System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can change groups. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewGroup Gets or sets the player's new group. Declaration public UserGroup NewGroup { get; set; } Property Value Type Description UserGroup | Improve this Doc View Source Player Gets the player who's changing his group. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingIntercomMuteStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingIntercomMuteStatusEventArgs.html",
    "title": "Class ChangingIntercomMuteStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingIntercomMuteStatusEventArgs Contains all informations before a player's intercom mute status is changed. Inheritance System.Object System.EventArgs ChangingIntercomMuteStatusEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingIntercomMuteStatusEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingIntercomMuteStatusEventArgs(Player, Boolean, Boolean) Initializes a new instance of the ChangingIntercomMuteStatusEventArgs class. Declaration public ChangingIntercomMuteStatusEventArgs(Player player, bool isMuted, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isMuted System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be intercom muted/unmuted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets a value indicating whether the player is being intercom muted or unmuted. Declaration public bool IsMuted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's being intercom muted/unmuted. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingIntoGrenadeEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingIntoGrenadeEventArgs.html",
    "title": "Class ChangingIntoGrenadeEventArgs | EXILED Docs",
    "keywords": "Class ChangingIntoGrenadeEventArgs Contains all information for when the server is turning a pickup into a live grenade. Inheritance System.Object System.EventArgs ChangingIntoGrenadeEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingIntoGrenadeEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingIntoGrenadeEventArgs(TimedGrenadePickup) Initializes a new instance of the ChangingIntoGrenadeEventArgs class. Declaration public ChangingIntoGrenadeEventArgs(TimedGrenadePickup pickup) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.TimedGrenadePickup pickup The Pickup being changed. Properties | Improve this Doc View Source FuseTime Gets or sets a value indicating how long the fuse of the changed grenade will be. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the pickup will be changed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets a value indicating the pickup being changed. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Type Gets or sets a value indicating what type of grenade will be spawned. Declaration public ItemType Type { get; set; } Property Value Type Description ItemType Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingItemEventArgs.html",
    "title": "Class ChangingItemEventArgs | EXILED Docs",
    "keywords": "Class ChangingItemEventArgs Contains all information before a player's held item changes. Inheritance System.Object System.EventArgs ChangingItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingItemEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingItemEventArgs(Player, ItemBase) Initializes a new instance of the ChangingItemEventArgs class. Declaration public ChangingItemEventArgs(Player player, ItemBase newItem) Parameters Type Name Description Player player InventorySystem.Items.ItemBase newItem Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event is allowed to continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewItem Gets or sets the new item. Declaration public Item NewItem { get; set; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's changing the item. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingKnobSettingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingKnobSettingEventArgs.html",
    "title": "Class ChangingKnobSettingEventArgs | EXILED Docs",
    "keywords": "Class ChangingKnobSettingEventArgs Contains all information before a player changes the SCP-914 knob setting. Inheritance System.Object System.EventArgs ChangingKnobSettingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingKnobSettingEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingKnobSettingEventArgs(Player, Scp914KnobSetting, Boolean) Initializes a new instance of the ChangingKnobSettingEventArgs class. Declaration public ChangingKnobSettingEventArgs(Player player, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description Player player Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-914's knob setting can be changed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobSetting Gets or sets the SCP-914 knob setting. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source Player Gets the player who's changing the SCP-914 knob setting. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingLeverStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingLeverStatusEventArgs.html",
    "title": "Class ChangingLeverStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingLeverStatusEventArgs Contains all informations before a player changes the warhead lever status. Inheritance System.Object System.EventArgs ChangingLeverStatusEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingLeverStatusEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingLeverStatusEventArgs(Player, Boolean, Boolean) Initializes a new instance of the ChangingLeverStatusEventArgs class. Declaration public ChangingLeverStatusEventArgs(Player player, bool curState, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean curState System.Boolean isAllowed Properties | Improve this Doc View Source CurrentState Gets a value indicating whether the lever is enabled. Declaration public bool CurrentState { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the lever status will change. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's changing the warhead status. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingMicroHIDStateEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingMicroHIDStateEventArgs.html",
    "title": "Class ChangingMicroHIDStateEventArgs | EXILED Docs",
    "keywords": "Class ChangingMicroHIDStateEventArgs Contains all information before MicroHID state is changed. Inheritance System.Object System.EventArgs ChangingMicroHIDStateEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingMicroHIDStateEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingMicroHIDStateEventArgs(Player, MicroHIDItem, HidState, HidState, Boolean) Initializes a new instance of the ChangingMicroHIDStateEventArgs class. Declaration public ChangingMicroHIDStateEventArgs(Player player, MicroHIDItem microHID, HidState oldState, HidState newState, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.MicroHID.MicroHIDItem microHID InventorySystem.Items.MicroHID.HidState oldState InventorySystem.Items.MicroHID.HidState newState System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the MicroHID state can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MicroHID Gets the MicroHID instance. Declaration public MicroHid MicroHID { get; } Property Value Type Description MicroHid | Improve this Doc View Source NewState Gets or sets the new MicroHID state. Declaration public HidState NewState { get; set; } Property Value Type Description InventorySystem.Items.MicroHID.HidState | Improve this Doc View Source OldState Gets the old MicroHID state. Declaration public HidState OldState { get; } Property Value Type Description InventorySystem.Items.MicroHID.HidState | Improve this Doc View Source Player Gets the player who's using the MicroHID. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingMoveStateEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingMoveStateEventArgs.html",
    "title": "Class ChangingMoveStateEventArgs | EXILED Docs",
    "keywords": "Class ChangingMoveStateEventArgs Contains all informations before changing movement state. Inheritance System.Object System.EventArgs ChangingMoveStateEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingMoveStateEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingMoveStateEventArgs(Player, PlayerMovementState, PlayerMovementState, Boolean) Initializes a new instance of the ChangingMoveStateEventArgs class. Declaration public ChangingMoveStateEventArgs(Player player, PlayerMovementState oldState, PlayerMovementState newState, bool isAllowed = true) Parameters Type Name Description Player player PlayerMovementState oldState PlayerMovementState newState System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the player can change the movement state. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewState Gets or sets the new state. Declaration public PlayerMovementState NewState { get; set; } Property Value Type Description PlayerMovementState | Improve this Doc View Source OldState Gets the old state. Declaration public PlayerMovementState OldState { get; } Property Value Type Description PlayerMovementState | Improve this Doc View Source Player Gets the player who's changing the movement state. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingMuteStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingMuteStatusEventArgs.html",
    "title": "Class ChangingMuteStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingMuteStatusEventArgs Contains all informations before a player's mute status is changed. Inheritance System.Object System.EventArgs ChangingMuteStatusEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingMuteStatusEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingMuteStatusEventArgs(Player, Boolean, Boolean) Initializes a new instance of the ChangingMuteStatusEventArgs class. Declaration public ChangingMuteStatusEventArgs(Player player, bool isMuted, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isMuted System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be muted/unmuted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets a value indicating whether the player is being muted or unmuted. Declaration public bool IsMuted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's being muted/unmuted. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingRadioPresetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingRadioPresetEventArgs.html",
    "title": "Class ChangingRadioPresetEventArgs | EXILED Docs",
    "keywords": "Class ChangingRadioPresetEventArgs Contains all informations before radio preset is changed. Inheritance System.Object System.EventArgs ChangingRadioPresetEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingRadioPresetEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingRadioPresetEventArgs(Player, Byte, Byte, Boolean) Initializes a new instance of the ChangingRadioPresetEventArgs class. Declaration public ChangingRadioPresetEventArgs(Player player, byte oldValue, byte newValue, bool isAllowed = true) Parameters Type Name Description Player player System.Byte oldValue System.Byte newValue System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the radio preset can be changed or not. Client radio graphics won't sync with OldValue . Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewValue Gets or sets the new radio preset value. Client radio graphics won't sync with this value. Declaration public byte NewValue { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source OldValue Gets the old radio preset value. Declaration public byte OldValue { get; } Property Value Type Description System.Byte | Improve this Doc View Source Player Gets the player who's using the radio. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingRoleEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingRoleEventArgs.html",
    "title": "Class ChangingRoleEventArgs | EXILED Docs",
    "keywords": "Class ChangingRoleEventArgs Contains all information before a player's RoleType changes. Inheritance System.Object System.EventArgs ChangingRoleEventArgs OwnerChangingRoleEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingRoleEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingRoleEventArgs(Player, RoleType, Boolean, CharacterClassManager.SpawnReason) Initializes a new instance of the ChangingRoleEventArgs class. Declaration public ChangingRoleEventArgs(Player player, RoleType newRole, bool shouldPreservePosition, CharacterClassManager.SpawnReason reason) Parameters Type Name Description Player player RoleType newRole System.Boolean shouldPreservePosition CharacterClassManager.SpawnReason reason Properties | Improve this Doc View Source Ammo Gets the base ammo values for the new role. (Changing this will overwrite their current inventory if Lite is true!). Declaration public Dictionary<ItemType, ushort> Ammo { get; } Property Value Type Description System.Collections.Generic.Dictionary < ItemType , System.UInt16 > | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event can continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Items Gets base items that the player will receive. (Changing this will overwrite their current inventory if Lite is true!). Declaration public List<ItemType> Items { get; } Property Value Type Description System.Collections.Generic.List < ItemType > | Improve this Doc View Source Lite Gets or sets a value indicating whether the position and items has to be preserved after changing the role. Declaration public bool Lite { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewRole Gets or sets the new player's role. Declaration public RoleType NewRole { get; set; } Property Value Type Description RoleType | Improve this Doc View Source Player Gets the player whose RoleType is changing. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the reason for their class change. Declaration public SpawnReason Reason { get; set; } Property Value Type Description SpawnReason Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChangingSpectatedPlayerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChangingSpectatedPlayerEventArgs.html",
    "title": "Class ChangingSpectatedPlayerEventArgs | EXILED Docs",
    "keywords": "Class ChangingSpectatedPlayerEventArgs Contains all informations before a spectator changes the spectated player. Inheritance System.Object System.EventArgs ChangingSpectatedPlayerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChangingSpectatedPlayerEventArgs : EventArgs Constructors | Improve this Doc View Source ChangingSpectatedPlayerEventArgs(Player, Player, Player, Boolean) Initializes a new instance of the ChangingSpectatedPlayerEventArgs class. Declaration public ChangingSpectatedPlayerEventArgs(Player player, Player oldTarget, Player newTarget, bool isAllowed) Parameters Type Name Description Player player Player oldTarget Player newTarget System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not spectated player value can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewTarget Gets or sets the player who's going to be spectated. Declaration public Player NewTarget { get; set; } Property Value Type Description Player | Improve this Doc View Source OldTarget Gets player that was spectated. Declaration public Player OldTarget { get; } Property Value Type Description Player | Improve this Doc View Source Player Gets player that is changing spectated player. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChargingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChargingEventArgs.html",
    "title": "Class ChargingEventArgs | EXILED Docs",
    "keywords": "Class ChargingEventArgs Contains all informations before SCP-096 charges. Inheritance System.Object System.EventArgs ChargingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChargingEventArgs : EventArgs Constructors | Improve this Doc View Source ChargingEventArgs(Scp096, Player, Boolean) Initializes a new instance of the ChargingEventArgs class. Declaration public ChargingEventArgs(Scp096 scp096, Player player, bool isAllowed = true) Parameters Type Name Description PlayableScps.Scp096 scp096 Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can charge. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096 Scp096 { get; } Property Value Type Description PlayableScps.Scp096 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ChargingPlayerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ChargingPlayerEventArgs.html",
    "title": "Class ChargingPlayerEventArgs | EXILED Docs",
    "keywords": "Class ChargingPlayerEventArgs Contains all informations before SCP-096 charges a player. Inheritance System.Object System.EventArgs ChargingPlayerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ChargingPlayerEventArgs : EventArgs Constructors | Improve this Doc View Source ChargingPlayerEventArgs(Scp096, Player, Player, Boolean, Single) Initializes a new instance of the ChargingPlayerEventArgs class. Declaration public ChargingPlayerEventArgs(Scp096 scp096, Player player, Player victim, bool isTarget, float damage) Parameters Type Name Description PlayableScps.Scp096 scp096 Player player Player victim System.Boolean isTarget System.Single damage Properties | Improve this Doc View Source Damage Gets or sets the inflicted damage. Declaration public float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndCharge Gets or sets a value indicating whether SCP-096's charge should be ended next frame. Declaration public bool EndCharge { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can hit the target. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTarget Gets a value indicating whether the target is one of SCP-096's targets. Declaration public bool IsTarget { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096 Scp096 { get; } Property Value Type Description PlayableScps.Scp096 | Improve this Doc View Source Victim Gets the player who SCP-096 is charging. Declaration public Player Victim { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ClosingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ClosingGeneratorEventArgs.html",
    "title": "Class ClosingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class ClosingGeneratorEventArgs Contains all informations before a player closes a generator. Inheritance System.Object System.EventArgs OpeningGeneratorEventArgs ClosingGeneratorEventArgs Inherited Members OpeningGeneratorEventArgs.Player OpeningGeneratorEventArgs.Generator OpeningGeneratorEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ClosingGeneratorEventArgs : OpeningGeneratorEventArgs Constructors | Improve this Doc View Source ClosingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the ClosingGeneratorEventArgs class. Declaration public ClosingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player The player who's closing the generator. MapGeneration.Distributors.Scp079Generator generator The MapGeneration.Distributors.Scp079Generator instance. System.Boolean isAllowed Indicates whether or not the generator can be closed. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ContainingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ContainingEventArgs.html",
    "title": "Class ContainingEventArgs | EXILED Docs",
    "keywords": "Class ContainingEventArgs Contains all informations before containing SCP-106. Inheritance System.Object System.EventArgs ContainingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ContainingEventArgs : EventArgs Constructors | Improve this Doc View Source ContainingEventArgs(Player, Player, Boolean) Initializes a new instance of the ContainingEventArgs class. Declaration public ContainingEventArgs(Player player, Player buttonPresser, bool isAllowed = true) Parameters Type Name Description Player player Player buttonPresser System.Boolean isAllowed Properties | Improve this Doc View Source ButtonPresser Gets the player who pressed the button. Declaration public Player ButtonPresser { get; } Property Value Type Description Player | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-106 can be recontained. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-106. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.CreatingPortalEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.CreatingPortalEventArgs.html",
    "title": "Class CreatingPortalEventArgs | EXILED Docs",
    "keywords": "Class CreatingPortalEventArgs Contains all informations before SCP-106 creates a portal. Inheritance System.Object System.EventArgs CreatingPortalEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class CreatingPortalEventArgs : EventArgs Constructors | Improve this Doc View Source CreatingPortalEventArgs(Player, Vector3, Boolean) Initializes a new instance of the CreatingPortalEventArgs class. Declaration public CreatingPortalEventArgs(Player player, Vector3 position, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 position System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-106 can create a portal. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-106. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the portal position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DamagingShootingTargetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DamagingShootingTargetEventArgs.html",
    "title": "Class DamagingShootingTargetEventArgs | EXILED Docs",
    "keywords": "Class DamagingShootingTargetEventArgs Contains all information before a player damages a shooting target. Inheritance System.Object System.EventArgs DamagingShootingTargetEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DamagingShootingTargetEventArgs : EventArgs Constructors | Improve this Doc View Source DamagingShootingTargetEventArgs(Player, Single, Single, Vector3, ShootingTarget, DamageHandlerBase, Boolean) Initializes a new instance of the DamagingShootingTargetEventArgs class. Declaration public DamagingShootingTargetEventArgs(Player player, float damage, float distance, Vector3 hitLocation, ShootingTarget shootingTarget, DamageHandlerBase damageHandler, bool isAllowed = true) Parameters Type Name Description Player player System.Single damage System.Single distance UnityEngine.Vector3 hitLocation AdminToys.ShootingTarget shootingTarget PlayerStatsSystem.DamageHandlerBase damageHandler System.Boolean isAllowed Properties | Improve this Doc View Source Amount Gets or sets the damage amount. Declaration public float Amount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DamageHandler Gets the PlayerStatsSystem.AttackerDamageHandler . Declaration public AttackerDamageHandler DamageHandler { get; } Property Value Type Description PlayerStatsSystem.AttackerDamageHandler | Improve this Doc View Source Distance Gets the distance between the shooter and the shooting target. Declaration public float Distance { get; } Property Value Type Description System.Single | Improve this Doc View Source HitLocation Gets the exact world location the bullet impacted the target. Declaration public Vector3 HitLocation { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the target can be damaged. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the item which is being used to deal the damage. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's damaging the shooting target. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ShootingTarget Gets the shooting target which is being damaged. Declaration public ShootingTarget ShootingTarget { get; } Property Value Type Description ShootingTarget Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DamagingWindowEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DamagingWindowEventArgs.html",
    "title": "Class DamagingWindowEventArgs | EXILED Docs",
    "keywords": "Class DamagingWindowEventArgs Contains all informations before damage is dealt to a BreakableWindow . Inheritance System.Object System.EventArgs DamagingWindowEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DamagingWindowEventArgs : EventArgs Constructors | Improve this Doc View Source DamagingWindowEventArgs(BreakableWindow, Single) Initializes a new instance of the DamagingWindowEventArgs class. Declaration public DamagingWindowEventArgs(BreakableWindow window, float damage) Parameters Type Name Description BreakableWindow window System.Single damage Properties | Improve this Doc View Source Damage Gets or sets the damage the window will receive. Declaration public float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Window Gets the BreakableWindow object that is damaged. Declaration public BreakableWindow Window { get; } Property Value Type Description BreakableWindow Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DeactivatingWorkstationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DeactivatingWorkstationEventArgs.html",
    "title": "Class DeactivatingWorkstationEventArgs | EXILED Docs",
    "keywords": "Class DeactivatingWorkstationEventArgs Contains all informations before deactivating a workstation. Inheritance System.Object System.EventArgs DeactivatingWorkstationEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DeactivatingWorkstationEventArgs : EventArgs Constructors | Improve this Doc View Source DeactivatingWorkstationEventArgs(WorkstationController, Boolean) Initializes a new instance of the DeactivatingWorkstationEventArgs class. Declaration public DeactivatingWorkstationEventArgs(WorkstationController controller, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.WorkstationController controller System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the workstation can be deactivated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewStatus Gets or sets the workstation status. Declaration public WorkstationController.WorkstationStatus NewStatus { get; set; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController.WorkstationStatus | Improve this Doc View Source WorkstationController Gets the workstation. Declaration public WorkstationController WorkstationController { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DecontaminatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DecontaminatingEventArgs.html",
    "title": "Class DecontaminatingEventArgs | EXILED Docs",
    "keywords": "Class DecontaminatingEventArgs Contains all informations before decontaminating the light containment zone. Inheritance System.Object System.EventArgs DecontaminatingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DecontaminatingEventArgs : EventArgs Constructors | Improve this Doc View Source DecontaminatingEventArgs(Boolean) Initializes a new instance of the DecontaminatingEventArgs class. Declaration public DecontaminatingEventArgs(bool isAllowed = true) Parameters Type Name Description System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not light containment zone decontamination can begin. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DequippedMedicalItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DequippedMedicalItemEventArgs.html",
    "title": "Class DequippedMedicalItemEventArgs | EXILED Docs",
    "keywords": "Class DequippedMedicalItemEventArgs Contains all informations after a player dequipes a medical item. Inheritance System.Object System.EventArgs DequippedMedicalItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DequippedMedicalItemEventArgs : EventArgs Constructors | Improve this Doc View Source DequippedMedicalItemEventArgs(Player, ItemType) Initializes a new instance of the DequippedMedicalItemEventArgs class. Declaration public DequippedMedicalItemEventArgs(Player player, ItemType item) Parameters Type Name Description Player player ItemType item Properties | Improve this Doc View Source Item Gets the medical item that the player consumed. Declaration public ItemType Item { get; } Property Value Type Description ItemType | Improve this Doc View Source Player Gets the player who used the medical item. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DestroyingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DestroyingEventArgs.html",
    "title": "Class DestroyingEventArgs | EXILED Docs",
    "keywords": "Class DestroyingEventArgs Contains all informations before a player's object is destroyed. Inheritance System.Object System.EventArgs DestroyingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DestroyingEventArgs : EventArgs Constructors | Improve this Doc View Source DestroyingEventArgs(Player) Initializes a new instance of the DestroyingEventArgs class. Declaration public DestroyingEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the destoying player. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DiedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DiedEventArgs.html",
    "title": "Class DiedEventArgs | EXILED Docs",
    "keywords": "Class DiedEventArgs Contains all informations after a player dies. Inheritance System.Object System.EventArgs DiedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DiedEventArgs : EventArgs Constructors | Improve this Doc View Source DiedEventArgs(Player, DamageHandlerBase) Initializes a new instance of the DiedEventArgs class. Declaration public DiedEventArgs(Player target, DamageHandlerBase damageHandler) Parameters Type Name Description Player target PlayerStatsSystem.DamageHandlerBase damageHandler Properties | Improve this Doc View Source DamageHandler Gets or sets the PlayerStatsSystem.DamageHandlerBase . Declaration [Obsolete(\"Use DiedEventArgs.Handler\", true)] public DamageHandlerBase DamageHandler { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Handler Gets or sets the DamageHandler . Declaration public DamageHandler Handler { get; set; } Property Value Type Description DamageHandler | Improve this Doc View Source Killer Gets the killer player. Declaration public Player Killer { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the killed player. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DroppingAmmoEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DroppingAmmoEventArgs.html",
    "title": "Class DroppingAmmoEventArgs | EXILED Docs",
    "keywords": "Class DroppingAmmoEventArgs Contains all information before a player drops an item. Inheritance System.Object System.EventArgs DroppingAmmoEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DroppingAmmoEventArgs : EventArgs Constructors | Improve this Doc View Source DroppingAmmoEventArgs(Player, AmmoType, UInt16, Boolean) Initializes a new instance of the DroppingAmmoEventArgs class. Declaration public DroppingAmmoEventArgs(Player player, AmmoType ammoType, ushort amount, bool isAllowed = true) Parameters Type Name Description Player player AmmoType ammoType System.UInt16 amount System.Boolean isAllowed Properties | Improve this Doc View Source AmmoType Gets the type of ammo being dropped. Declaration public AmmoType AmmoType { get; } Property Value Type Description AmmoType | Improve this Doc View Source Amount Gets or sets the amount of ammo being dropped. Declaration public int Amount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the ammo can be dropped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's dropping the ammo. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DroppingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DroppingItemEventArgs.html",
    "title": "Class DroppingItemEventArgs | EXILED Docs",
    "keywords": "Class DroppingItemEventArgs Contains all information before a player drops an item. Inheritance System.Object System.EventArgs DroppingItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DroppingItemEventArgs : EventArgs Constructors | Improve this Doc View Source DroppingItemEventArgs(Player, ItemBase, Boolean, Boolean) Initializes a new instance of the DroppingItemEventArgs class. Declaration public DroppingItemEventArgs(Player player, ItemBase item, bool isThrown, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ItemBase item System.Boolean isThrown System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the item can be dropped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsThrown Gets a value indicating whether or not the item was thrown. Declaration public bool IsThrown { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the item to be dropped. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's dropping the item. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DroppingNullEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DroppingNullEventArgs.html",
    "title": "Class DroppingNullEventArgs | EXILED Docs",
    "keywords": "Class DroppingNullEventArgs Contains all information before a player drops a null item. Inheritance System.Object System.EventArgs DroppingNullEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DroppingNullEventArgs : EventArgs Constructors | Improve this Doc View Source DroppingNullEventArgs(Player) Initializes a new instance of the DroppingNullEventArgs class. Declaration public DroppingNullEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the player who's dropping the null item. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DryfiringWeaponEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DryfiringWeaponEventArgs.html",
    "title": "Class DryfiringWeaponEventArgs | EXILED Docs",
    "keywords": "Class DryfiringWeaponEventArgs Contains all information before a player's weapon is dryfired. Inheritance System.Object System.EventArgs DryfiringWeaponEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DryfiringWeaponEventArgs : EventArgs Constructors | Improve this Doc View Source DryfiringWeaponEventArgs(Player, Boolean) Initializes a new instance of the DryfiringWeaponEventArgs class. Declaration public DryfiringWeaponEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being dryfired. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon can be dryfired. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's dryfiring the weapon. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.DyingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.DyingEventArgs.html",
    "title": "Class DyingEventArgs | EXILED Docs",
    "keywords": "Class DyingEventArgs Contains all information before a player dies. Inheritance System.Object System.EventArgs DyingEventArgs OwnerDyingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class DyingEventArgs : EventArgs Constructors | Improve this Doc View Source DyingEventArgs(Player, DamageHandlerBase) Initializes a new instance of the DyingEventArgs class. Declaration public DyingEventArgs(Player target, DamageHandlerBase damageHandler) Parameters Type Name Description Player target PlayerStatsSystem.DamageHandlerBase damageHandler Properties | Improve this Doc View Source DamageHandler Gets or sets the damage handler for the event. Declaration [Obsolete(\"Use DyingEventArgs.Handler\", true)] public DamageHandlerBase DamageHandler { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Handler Gets or sets the DamageHandler . Declaration public DamageHandler Handler { get; set; } Property Value Type Description DamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be killed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemsToDrop Gets or sets the list of items to be dropped. Declaration public List<Item> ItemsToDrop { get; set; } Property Value Type Description System.Collections.Generic.List < Item > | Improve this Doc View Source Killer Gets the killing player. Declaration public Player Killer { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the dying player. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ElevatorTeleportEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ElevatorTeleportEventArgs.html",
    "title": "Class ElevatorTeleportEventArgs | EXILED Docs",
    "keywords": "Class ElevatorTeleportEventArgs Contains all informations before SCP-079 changes rooms via elevator. Inheritance System.Object System.EventArgs ElevatorTeleportingEventArgs ElevatorTeleportEventArgs Inherited Members ElevatorTeleportingEventArgs.Player ElevatorTeleportingEventArgs.Camera ElevatorTeleportingEventArgs.AuxiliaryPowerCost ElevatorTeleportingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ElevatorTeleportEventArgs : ElevatorTeleportingEventArgs Constructors | Improve this Doc View Source ElevatorTeleportEventArgs(Player, Camera079, Single, Boolean) Initializes a new instance of the ElevatorTeleportEventArgs class. Declaration public ElevatorTeleportEventArgs(Player player, Camera079 camera, float auxiliaryPowerCost, bool isAllowed = true) Parameters Type Name Description Player player Camera079 camera System.Single auxiliaryPowerCost System.Boolean isAllowed Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ElevatorTeleportingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ElevatorTeleportingEventArgs.html",
    "title": "Class ElevatorTeleportingEventArgs | EXILED Docs",
    "keywords": "Class ElevatorTeleportingEventArgs Contains all informations before SCP-079 changes rooms via elevator. Inheritance System.Object System.EventArgs ElevatorTeleportingEventArgs ElevatorTeleportEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ElevatorTeleportingEventArgs : EventArgs Constructors | Improve this Doc View Source ElevatorTeleportingEventArgs(Player, Camera079, Single, Boolean) Initializes a new instance of the ElevatorTeleportingEventArgs class. Declaration public ElevatorTeleportingEventArgs(Player player, Camera079 camera, float auxiliaryPowerCost, bool isAllowed = true) Parameters Type Name Description Player player Camera079 camera System.Single auxiliaryPowerCost System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to teleport to an elevator camera. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Camera Gets or sets the Camera079 that SCP-079 will be moved to. Declaration public Camera079 Camera { get; set; } Property Value Type Description Camera079 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can teleport. Defaults to a System.Boolean describing whether or not SCP-079 has enough auxiliary power to teleport. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.EndingRoundEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.EndingRoundEventArgs.html",
    "title": "Class EndingRoundEventArgs | EXILED Docs",
    "keywords": "Class EndingRoundEventArgs Contains all informations before ending a round. Inheritance System.Object System.EventArgs EndingRoundEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class EndingRoundEventArgs : EventArgs Constructors | Improve this Doc View Source EndingRoundEventArgs(LeadingTeam, RoundSummary.SumInfo_ClassList, Boolean, Boolean) Initializes a new instance of the EndingRoundEventArgs class. Declaration public EndingRoundEventArgs(LeadingTeam leadingTeam, RoundSummary.SumInfo_ClassList classList, bool isRoundEnded, bool isAllowed = true) Parameters Type Name Description LeadingTeam leadingTeam RoundSummary.SumInfo_ClassList classList System.Boolean isRoundEnded System.Boolean isAllowed Properties | Improve this Doc View Source ClassList Gets or sets the round summary class list. Declaration public RoundSummary.SumInfo_ClassList ClassList { get; set; } Property Value Type Description RoundSummary.SumInfo_ClassList | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event can be executed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoundEnded Gets or sets a value indicating whether the round is going to finish or not. Declaration public bool IsRoundEnded { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeadingTeam Gets or sets the leading team. Declaration public LeadingTeam LeadingTeam { get; set; } Property Value Type Description LeadingTeam Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.EnragingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.EnragingEventArgs.html",
    "title": "Class EnragingEventArgs | EXILED Docs",
    "keywords": "Class EnragingEventArgs Contains all informations before SCP-096 gets enraged. Inheritance System.Object System.EventArgs EnragingEventArgs CalmingDownEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class EnragingEventArgs : EventArgs Constructors | Improve this Doc View Source EnragingEventArgs(Scp096, Player, Boolean) Initializes a new instance of the EnragingEventArgs class. Declaration public EnragingEventArgs(Scp096 scp096, Player player, bool isAllowed = true) Parameters Type Name Description PlayableScps.Scp096 scp096 Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can be enraged. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096 Scp096 { get; } Property Value Type Description PlayableScps.Scp096 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.EnteringFemurBreakerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.EnteringFemurBreakerEventArgs.html",
    "title": "Class EnteringFemurBreakerEventArgs | EXILED Docs",
    "keywords": "Class EnteringFemurBreakerEventArgs Contains all informations before a player enters the femur breaker. Inheritance System.Object System.EventArgs EnteringFemurBreakerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class EnteringFemurBreakerEventArgs : EventArgs Constructors | Improve this Doc View Source EnteringFemurBreakerEventArgs(Player, Boolean) Initializes a new instance of the EnteringFemurBreakerEventArgs class. Declaration public EnteringFemurBreakerEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can activate the femur breaker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's entering the femur breaker. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.EnteringPocketDimensionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.EnteringPocketDimensionEventArgs.html",
    "title": "Class EnteringPocketDimensionEventArgs | EXILED Docs",
    "keywords": "Class EnteringPocketDimensionEventArgs Contains all informations before a player enters the pocket dimension. Inheritance System.Object System.EventArgs EnteringPocketDimensionEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class EnteringPocketDimensionEventArgs : EventArgs Constructors | Improve this Doc View Source EnteringPocketDimensionEventArgs(Player, Vector3, Player, Boolean) Initializes a new instance of the EnteringPocketDimensionEventArgs class. Declaration public EnteringPocketDimensionEventArgs(Player player, Vector3 position, Player scp106, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 position Player scp106 System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can enter the pocket dimension. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's entering the pocket dimension. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the pocket dimension position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Scp106 Gets the SCP-106 who sent the player to the pocket dimension. Declaration public Player Scp106 { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.EscapingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.EscapingEventArgs.html",
    "title": "Class EscapingEventArgs | EXILED Docs",
    "keywords": "Class EscapingEventArgs Contains all information before a player escapes. Inheritance System.Object System.EventArgs EscapingEventArgs OwnerEscapingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class EscapingEventArgs : EventArgs Constructors | Improve this Doc View Source EscapingEventArgs(Player) Initializes a new instance of the EscapingEventArgs class. Declaration public EscapingEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can escape. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewRole Gets or sets the role that will be assigned when the player escapes. Declaration public RoleType NewRole { get; set; } Property Value Type Description RoleType | Improve this Doc View Source Player Gets the player who's escaping. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.EscapingPocketDimensionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.EscapingPocketDimensionEventArgs.html",
    "title": "Class EscapingPocketDimensionEventArgs | EXILED Docs",
    "keywords": "Class EscapingPocketDimensionEventArgs Contains all informations before a player escapes the pocket dimension. Inheritance System.Object System.EventArgs EscapingPocketDimensionEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class EscapingPocketDimensionEventArgs : EventArgs Constructors | Improve this Doc View Source EscapingPocketDimensionEventArgs(Player, Vector3, Boolean) Initializes a new instance of the EscapingPocketDimensionEventArgs class. Declaration public EscapingPocketDimensionEventArgs(Player player, Vector3 teleportPosition, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 teleportPosition System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can successfully escape the pocket dimension. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's escaping the pocket dimension. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source TeleportPosition Gets or sets the position in which the player is going to be teleported to. Declaration public Vector3 TeleportPosition { get; set; } Property Value Type Description UnityEngine.Vector3 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ExplodingGrenadeEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ExplodingGrenadeEventArgs.html",
    "title": "Class ExplodingGrenadeEventArgs | EXILED Docs",
    "keywords": "Class ExplodingGrenadeEventArgs Contains all information before a grenade explodes. Inheritance System.Object System.EventArgs ExplodingGrenadeEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ExplodingGrenadeEventArgs : EventArgs Constructors | Improve this Doc View Source ExplodingGrenadeEventArgs(Player, EffectGrenade, List<Player>) Initializes a new instance of the ExplodingGrenadeEventArgs class. Declaration public ExplodingGrenadeEventArgs(Player thrower, EffectGrenade grenade, List<Player> players) Parameters Type Name Description Player thrower InventorySystem.Items.ThrowableProjectiles.EffectGrenade grenade System.Collections.Generic.List < Player > players | Improve this Doc View Source ExplodingGrenadeEventArgs(Player, EffectGrenade, Collider[]) Initializes a new instance of the ExplodingGrenadeEventArgs class. Declaration public ExplodingGrenadeEventArgs(Player thrower, EffectGrenade grenade, Collider[] targets) Parameters Type Name Description Player thrower InventorySystem.Items.ThrowableProjectiles.EffectGrenade grenade UnityEngine.Collider [] targets Properties | Improve this Doc View Source Grenade Gets the grenade that is exploding. Declaration public EffectGrenade Grenade { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.EffectGrenade | Improve this Doc View Source GrenadeType Gets the GrenadeType of the grenade. Declaration public GrenadeType GrenadeType { get; } Property Value Type Description GrenadeType | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the grenade can be thrown. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFrag Gets a value indicating whether the grenade is a frag or flash grenade. Declaration [Obsolete(\"Use GrenadeType instead.\", true)] public bool IsFrag { get; } Property Value Type Description System.Boolean | Improve this Doc View Source TargetsToAffect Gets the players who could be affected by the grenade, if any, and the damage that would hurt them. Declaration public List<Player> TargetsToAffect { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source Thrower Gets the player who thrown the grenade. Declaration public Player Thrower { get; } Property Value Type Description Player Methods | Improve this Doc View Source Finalize() Finalizes an instance of the ExplodingGrenadeEventArgs class. Declaration protected void Finalize() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.FailingEscapePocketDimensionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.FailingEscapePocketDimensionEventArgs.html",
    "title": "Class FailingEscapePocketDimensionEventArgs | EXILED Docs",
    "keywords": "Class FailingEscapePocketDimensionEventArgs Contains all informations before a player dies from walking through an incorrect exit in the pocket dimension. Inheritance System.Object System.EventArgs FailingEscapePocketDimensionEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class FailingEscapePocketDimensionEventArgs : EventArgs Constructors | Improve this Doc View Source FailingEscapePocketDimensionEventArgs(Player, PocketDimensionTeleport, Boolean) Initializes a new instance of the FailingEscapePocketDimensionEventArgs class. Declaration public FailingEscapePocketDimensionEventArgs(Player player, PocketDimensionTeleport teleporter, bool isAllowed = true) Parameters Type Name Description Player player PocketDimensionTeleport teleporter System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player dies by failing the pocket dimension escape. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's escaping the pocket dimension. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Teleporter Gets the PocketDimensionTeleport the player walked into. Declaration public PocketDimensionTeleport Teleporter { get; } Property Value Type Description PocketDimensionTeleport Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.FinishingRecallEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.FinishingRecallEventArgs.html",
    "title": "Class FinishingRecallEventArgs | EXILED Docs",
    "keywords": "Class FinishingRecallEventArgs Contains all informations before SCP-049 finishes recalling a player. Inheritance System.Object System.EventArgs FinishingRecallEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class FinishingRecallEventArgs : EventArgs Constructors | Improve this Doc View Source FinishingRecallEventArgs(Player, Player, Boolean) Initializes a new instance of the FinishingRecallEventArgs class. Declaration public FinishingRecallEventArgs(Player target, Player scp049, bool isAllowed = true) Parameters Type Name Description Player target Player scp049 System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be recalled. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Scp049 Gets the player who is controlling SCP-049. Declaration public Player Scp049 { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the player who's getting recalled. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.FlippingCoinEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.FlippingCoinEventArgs.html",
    "title": "Class FlippingCoinEventArgs | EXILED Docs",
    "keywords": "Class FlippingCoinEventArgs Contains all informations before a player flips a coin. Inheritance System.Object System.EventArgs FlippingCoinEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class FlippingCoinEventArgs : EventArgs Constructors | Improve this Doc View Source FlippingCoinEventArgs(Player, Boolean, Boolean) Initializes a new instance of the FlippingCoinEventArgs class. Declaration public FlippingCoinEventArgs(Player player, bool isTails, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isTails System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the coin can be flipped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTails Gets or sets a value indicating whether or not the coin is landing on tails. Declaration public bool IsTails { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's flipping the coin. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.GainingExperienceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.GainingExperienceEventArgs.html",
    "title": "Class GainingExperienceEventArgs | EXILED Docs",
    "keywords": "Class GainingExperienceEventArgs Contains all informations before SCP-079 gains experience. Inheritance System.Object System.EventArgs GainingExperienceEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class GainingExperienceEventArgs : EventArgs Constructors | Improve this Doc View Source GainingExperienceEventArgs(Player, ExpGainType, Single, Boolean) Initializes a new instance of the GainingExperienceEventArgs class. Declaration public GainingExperienceEventArgs(Player player, ExpGainType gainType, float amount, bool isAllowed = true) Parameters Type Name Description Player player ExpGainType gainType System.Single amount System.Boolean isAllowed Properties | Improve this Doc View Source Amount Gets or sets the amount of experience to be gained. Declaration public float Amount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source GainType Gets the experience gain type. Declaration public ExpGainType GainType { get; } Property Value Type Description ExpGainType | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the experience is successfully granted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.GainingLevelEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.GainingLevelEventArgs.html",
    "title": "Class GainingLevelEventArgs | EXILED Docs",
    "keywords": "Class GainingLevelEventArgs Contains all informations before SCP-079 gains a level. Inheritance System.Object System.EventArgs GainingLevelEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class GainingLevelEventArgs : EventArgs Constructors | Improve this Doc View Source GainingLevelEventArgs(Player, Int32, Boolean) Initializes a new instance of the GainingLevelEventArgs class. Declaration public GainingLevelEventArgs(Player player, int newLevel, bool isAllowed = true) Parameters Type Name Description Player player System.Int32 newLevel System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the level is successfully granted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewLevel Gets or sets the new level of SCP-079. Declaration public int NewLevel { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.GeneratorActivatedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.GeneratorActivatedEventArgs.html",
    "title": "Class GeneratorActivatedEventArgs | EXILED Docs",
    "keywords": "Class GeneratorActivatedEventArgs Contains all informations after activating a generator. Inheritance System.Object System.EventArgs GeneratorActivatedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class GeneratorActivatedEventArgs : EventArgs Constructors | Improve this Doc View Source GeneratorActivatedEventArgs(Scp079Generator, Boolean) Initializes a new instance of the GeneratorActivatedEventArgs class. Declaration public GeneratorActivatedEventArgs(Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the activated generator. Declaration public Scp079Generator Generator { get; } Property Value Type Description MapGeneration.Distributors.Scp079Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the generator can be activated or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.HandcuffingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.HandcuffingEventArgs.html",
    "title": "Class HandcuffingEventArgs | EXILED Docs",
    "keywords": "Class HandcuffingEventArgs Contains all informations before handcuffing a player. Inheritance System.Object System.EventArgs HandcuffingEventArgs OwnerHandcuffingEventArgs RemovingHandcuffsEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class HandcuffingEventArgs : EventArgs Constructors | Improve this Doc View Source HandcuffingEventArgs(Player, Player, Boolean) Initializes a new instance of the HandcuffingEventArgs class. Declaration public HandcuffingEventArgs(Player cuffer, Player target, bool isAllowed = true) Parameters Type Name Description Player cuffer Player target System.Boolean isAllowed Properties | Improve this Doc View Source Cuffer Gets the cuffer player. Declaration public Player Cuffer { get; } Property Value Type Description Player | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be handcuffed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Gets the target player to be cuffed. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.html",
    "title": "Namespace Exiled.Events.EventArgs | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs Classes ActivatingEventArgs Contains all informations before a player activates SCP-914. ActivatingGeneratorEventArgs Contains all information before a player inserts a tablet into a generator. ActivatingWarheadPanelEventArgs Contains all informations before a player activates the warhead panel. ActivatingWorkstationEventArgs Contains all informations before a player activates a workstation. AddingTargetEventArgs Contains all informations before adding a target to SCP-096. AimingDownSightEventArgs Contains all information when a player aims. AnnouncingDecontaminationEventArgs Contains all informations before C.A.S.S.I.E announces light containment zone decontamination. AnnouncingNtfEntranceEventArgs Contains all informations before C.A.S.S.I.E announces the NTF entrance. AnnouncingScpTerminationEventArgs Contains all informations before C.A.S.S.I.E announces an SCP termination. BannedEventArgs Contains all informations after banning a player from the server. BanningEventArgs Contains all informations before banning a player from the server. BlinkingEventArgs Contains all informations before a players blink near SCP-173. CalmingDownEventArgs Contains all informations before SCP-096 calms down. CancellingItemUseEventArgs Contains all information before a player cancels usage of a medical item. ChangingAttachmentsEventArgs Contains all informations before changing item attachments. ChangingAttributesEventArgs Contains all informations before changing item attributes. ChangingCameraEventArgs Contains all informations before a SCP-079 changes the current camera. ChangingDurabilityEventArgs Contains all informations before changing item durability. ChangingGroupEventArgs Contains all informations before a player changes his group. ChangingIntercomMuteStatusEventArgs Contains all informations before a player's intercom mute status is changed. ChangingIntoGrenadeEventArgs Contains all information for when the server is turning a pickup into a live grenade. ChangingItemEventArgs Contains all information before a player's held item changes. ChangingKnobSettingEventArgs Contains all information before a player changes the SCP-914 knob setting. ChangingLeverStatusEventArgs Contains all informations before a player changes the warhead lever status. ChangingMicroHIDStateEventArgs Contains all information before MicroHID state is changed. ChangingMoveStateEventArgs Contains all informations before changing movement state. ChangingMuteStatusEventArgs Contains all informations before a player's mute status is changed. ChangingRadioPresetEventArgs Contains all informations before radio preset is changed. ChangingRoleEventArgs Contains all information before a player's RoleType changes. ChangingSpectatedPlayerEventArgs Contains all informations before a spectator changes the spectated player. ChargingEventArgs Contains all informations before SCP-096 charges. ChargingPlayerEventArgs Contains all informations before SCP-096 charges a player. ClosingGeneratorEventArgs Contains all informations before a player closes a generator. ContainingEventArgs Contains all informations before containing SCP-106. CreatingPortalEventArgs Contains all informations before SCP-106 creates a portal. DamagingShootingTargetEventArgs Contains all information before a player damages a shooting target. DamagingWindowEventArgs Contains all informations before damage is dealt to a BreakableWindow . DeactivatingWorkstationEventArgs Contains all informations before deactivating a workstation. DecontaminatingEventArgs Contains all informations before decontaminating the light containment zone. DequippedMedicalItemEventArgs Contains all informations after a player dequipes a medical item. DestroyingEventArgs Contains all informations before a player's object is destroyed. DiedEventArgs Contains all informations after a player dies. DroppingAmmoEventArgs Contains all information before a player drops an item. DroppingItemEventArgs Contains all information before a player drops an item. DroppingNullEventArgs Contains all information before a player drops a null item. DryfiringWeaponEventArgs Contains all information before a player's weapon is dryfired. DyingEventArgs Contains all information before a player dies. ElevatorTeleportEventArgs Contains all informations before SCP-079 changes rooms via elevator. ElevatorTeleportingEventArgs Contains all informations before SCP-079 changes rooms via elevator. EndingRoundEventArgs Contains all informations before ending a round. EnragingEventArgs Contains all informations before SCP-096 gets enraged. EnteringFemurBreakerEventArgs Contains all informations before a player enters the femur breaker. EnteringPocketDimensionEventArgs Contains all informations before a player enters the pocket dimension. EscapingEventArgs Contains all information before a player escapes. EscapingPocketDimensionEventArgs Contains all informations before a player escapes the pocket dimension. ExplodingGrenadeEventArgs Contains all information before a grenade explodes. FailingEscapePocketDimensionEventArgs Contains all informations before a player dies from walking through an incorrect exit in the pocket dimension. FinishingRecallEventArgs Contains all informations before SCP-049 finishes recalling a player. FlippingCoinEventArgs Contains all informations before a player flips a coin. GainingExperienceEventArgs Contains all informations before SCP-079 gains experience. GainingLevelEventArgs Contains all informations before SCP-079 gains a level. GeneratorActivatedEventArgs Contains all informations after activating a generator. HandcuffingEventArgs Contains all informations before handcuffing a player. HurtingEventArgs Contains all information before a player gets damaged. InteractedEventArgs Contains all informations after a player has interacted with an interactable. InteractingDoorEventArgs Contains all informations before a player interacts with a door. InteractingElevatorEventArgs Contains all information before a player interacts with an elevator. InteractingLockerEventArgs Contains all informations before a player interacts with a locker. InteractingShootingTargetEventArgs Contains all information before a player interacts with a shooting target. InteractingTeslaEventArgs Contains all informations before SCP-079 triggers a tesla gate. IntercomSpeakingEventArgs Contains all informations before a player speaks to the intercom. JoinedEventArgs Contains all informations after a player joins the server. JumpingEventArgs Contains all informations before a player jumps. KickedEventArgs Contains all informations after kicking a player from the server. KickingEventArgs Contains all informations before kicking a player from the server. LeftEventArgs Contains all player's information, after he leaves the server. LocalReportingEventArgs Contains informations before a report is sent to local administrators. LockingDownEventArgs Contains all information before SCP-079 lockdowns a room. MakingNoiseEventArgs Contains all informations before a player makes noise. OpeningGeneratorEventArgs Contains all informations before a player opens a generator. PickingUpAmmoEventArgs Contains all information before a player picks up an ammo. PickingUpArmorEventArgs Contains all information before a player picks up Armor . PickingUpItemEventArgs Contains all information before a player picks up an item. PickingUpScp330EventArgs Contains all informations before a player interacts with SCP-330. PlacingBloodEventArgs Contains all informations before a player places blood. PlacingBulletHole Contains all informations before placing a decal. PlacingTantrumEventArgs Contains all information before the tantrum is placed. PreAuthenticatingEventArgs Contains all informations before pre-autenticating a player. ProcessingHotkeyEventArgs Contains all informations before pressing a hotkey. ReceivingEffectEventArgs Contains all information before a player receives a CustomPlayerEffects.PlayerEffect . RecontainedEventArgs Contains informations after SCP-079 recontainming. ReloadingWeaponEventArgs Contains all information before a player's weapon is reloaded. RemovingHandcuffsEventArgs Contains all informations before freeing a handcuffed player. ReportingCheaterEventArgs Contains all informations before reporting a cheater. RespawningTeamEventArgs Contains all informations before spawning a wave of Respawning.SpawnableTeamType.NineTailedFox or Respawning.SpawnableTeamType.ChaosInsurgency . RoundEndedEventArgs Contains all information after the end of a round. SendingCassieMessageEventArgs Contains all the information after sending a C.A.S.S.I.E. message. ShootingEventArgs Contains all information before a player fires a weapon. ShotEventArgs Contains all information after a player has fired a weapon. SpawningEventArgs Contains all information before spawning a player. SpawningItemEventArgs Contains all information before the server spawns an item. SpawningRagdollEventArgs Contains all informations before spawning a player ragdoll. StartingEventArgs Contains all informations before starting the warhead. StartingRecallEventArgs Contains all informations before SCP-049 begins recalling a player. StartingSpeakerEventArgs Contains all informations before SCP-079 uses a speaker. StartPryingGateEventArgs Contains all information before SCP-096 begins prying a gate open. StoppingEventArgs Contains all informations before stopping the warhead. StoppingGeneratorEventArgs Contains all informations before a player ejects a tablet from a generator. StoppingSpeakerEventArgs Contains all informations before SCP-079 finishes using a speaker. SyncingDataEventArgs Contains all informations before syncing player's data with the server. TeleportingEventArgs Contains all informations before SCP-106 teleports using a portal. ThrowingItemEventArgs Contains all information before a player throws a grenade. TogglingFlashlightEventArgs Contains all information before a player toggles the flashlight. TogglingNoClipEventArgs Contains all informations before a player toggles the NoClip mode. TogglingWeaponFlashlightEventArgs Contains all information before a player toggles the weapon's flashlight. TransmittingEventArgs Contains all information after a player presses the transmission key. TriggeringDoorEventArgs Contains all informations before SCP-079 interacts with a door. TriggeringTeslaEventArgs Contains all informations before triggering a tesla. TryingNotToCryEventArgs Contains all informations before SCP-096 tries not to cry. UnloadingWeaponEventArgs Contains all information before a player's weapon is unloaded. UnlockingGeneratorEventArgs Contains all informations before a generator is unlocked. UpgradingInventoryItemEventArgs Contains all information before SCP-914 upgrades an item. UpgradingItemEventArgs Contains all information before SCP-914 upgrades an item. UpgradingPlayerEventArgs Contains all information before SCP-914 upgrades a player. UsedItemEventArgs Contains all information after a player used an item. UsingItemEventArgs Contains all information before a player uses an item. UsingMicroHIDEnergyEventArgs Contains all information before MicroHID energy is changed. UsingRadioBatteryEventArgs Contains all informations before radio battery charge is changed. VerifiedEventArgs Contains all informations after the server verifies a player. VoiceChattingEventArgs Contains all information after a player presses the voicechat key. WalkingOnSinkholeEventArgs Contains all information before a player walks over a sinkhole. WalkingOnTantrumEventArgs Contains all information before a player walks over a tantrum."
  },
  "api/Exiled.Events.EventArgs.HurtingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.HurtingEventArgs.html",
    "title": "Class HurtingEventArgs | EXILED Docs",
    "keywords": "Class HurtingEventArgs Contains all information before a player gets damaged. Inheritance System.Object System.EventArgs HurtingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class HurtingEventArgs : EventArgs Constructors | Improve this Doc View Source HurtingEventArgs(Player, DamageHandlerBase) Initializes a new instance of the HurtingEventArgs class. Declaration public HurtingEventArgs(Player target, DamageHandlerBase damageHandler) Parameters Type Name Description Player target PlayerStatsSystem.DamageHandlerBase damageHandler Properties | Improve this Doc View Source Amount Gets or sets the amount of inflicted damage. Declaration public float Amount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Attacker Gets the attacker player. Declaration public Player Attacker { get; } Property Value Type Description Player | Improve this Doc View Source DamageHandler Gets the hit informations. Declaration [Obsolete(\"Use HurtingEventArgs.Handler instead.\", true)] public DamageHandlerBase DamageHandler { get; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Handler Gets or sets the DamageHandler for the event. Declaration public DamageHandler Handler { get; set; } Property Value Type Description DamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player will be dealt damage. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Gets the target player, who is going to be hurt. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.InteractedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.InteractedEventArgs.html",
    "title": "Class InteractedEventArgs | EXILED Docs",
    "keywords": "Class InteractedEventArgs Contains all informations after a player has interacted with an interactable. Inheritance System.Object System.EventArgs InteractedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class InteractedEventArgs : EventArgs Constructors | Improve this Doc View Source InteractedEventArgs(Player) Initializes a new instance of the InteractedEventArgs class. Declaration public InteractedEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the player who interacted. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.InteractingDoorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.InteractingDoorEventArgs.html",
    "title": "Class InteractingDoorEventArgs | EXILED Docs",
    "keywords": "Class InteractingDoorEventArgs Contains all informations before a player interacts with a door. Inheritance System.Object System.EventArgs InteractingDoorEventArgs TriggeringDoorEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class InteractingDoorEventArgs : EventArgs Constructors | Improve this Doc View Source InteractingDoorEventArgs(Player, DoorVariant, Boolean) Initializes a new instance of the InteractingDoorEventArgs class. Declaration public InteractingDoorEventArgs(Player player, DoorVariant door, bool isAllowed = true) Parameters Type Name Description Player player Interactables.Interobjects.DoorUtils.DoorVariant door System.Boolean isAllowed Properties | Improve this Doc View Source Door Gets or sets the Door instance. Declaration public Door Door { get; set; } Property Value Type Description Door | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with the door. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's interacting with the door. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.InteractingElevatorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.InteractingElevatorEventArgs.html",
    "title": "Class InteractingElevatorEventArgs | EXILED Docs",
    "keywords": "Class InteractingElevatorEventArgs Contains all information before a player interacts with an elevator. Inheritance System.Object System.EventArgs InteractingElevatorEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class InteractingElevatorEventArgs : EventArgs Constructors | Improve this Doc View Source InteractingElevatorEventArgs(Player, Lift.Elevator, Lift, Boolean) Initializes a new instance of the InteractingElevatorEventArgs class. Declaration public InteractingElevatorEventArgs(Player player, Lift.Elevator elevator, Lift lift, bool isAllowed = true) Parameters Type Name Description Player player Lift.Elevator elevator Lift lift System.Boolean isAllowed Properties | Improve this Doc View Source Elevator Gets the Elevator instance. Declaration public Lift.Elevator Elevator { get; } Property Value Type Description Lift.Elevator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with the elevator. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lift Gets the Lift instance. Declaration public Lift Lift { get; } Property Value Type Description Lift | Improve this Doc View Source Player Gets the player who's interacting with the elevator. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Status Gets the Lift current Status . Declaration public Lift.Status Status { get; } Property Value Type Description Lift.Status Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.InteractingLockerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.InteractingLockerEventArgs.html",
    "title": "Class InteractingLockerEventArgs | EXILED Docs",
    "keywords": "Class InteractingLockerEventArgs Contains all informations before a player interacts with a locker. Inheritance System.Object System.EventArgs InteractingLockerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class InteractingLockerEventArgs : EventArgs Constructors | Improve this Doc View Source InteractingLockerEventArgs(Player, Locker, LockerChamber, Byte, Boolean) Initializes a new instance of the InteractingLockerEventArgs class. Declaration public InteractingLockerEventArgs(Player player, Locker locker, LockerChamber lockerChamber, byte chamberId, bool isAllowed) Parameters Type Name Description Player player MapGeneration.Distributors.Locker locker MapGeneration.Distributors.LockerChamber lockerChamber System.Byte chamberId System.Boolean isAllowed Properties | Improve this Doc View Source Chamber Gets the interacting chamber. Declaration public LockerChamber Chamber { get; } Property Value Type Description MapGeneration.Distributors.LockerChamber | Improve this Doc View Source ChamberId Gets the chamber id. Declaration public byte ChamberId { get; } Property Value Type Description System.Byte | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with the locker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Locker Gets the Locker instance. Declaration public Locker Locker { get; } Property Value Type Description MapGeneration.Distributors.Locker | Improve this Doc View Source Player Gets the player who's interacting with the locker. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.InteractingShootingTargetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.InteractingShootingTargetEventArgs.html",
    "title": "Class InteractingShootingTargetEventArgs | EXILED Docs",
    "keywords": "Class InteractingShootingTargetEventArgs Contains all information before a player interacts with a shooting target. Inheritance System.Object System.EventArgs InteractingShootingTargetEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class InteractingShootingTargetEventArgs : EventArgs Constructors | Improve this Doc View Source InteractingShootingTargetEventArgs(Player, ShootingTarget, ShootingTargetButton, Int32, Int32, Boolean) Initializes a new instance of the InteractingShootingTargetEventArgs class. Declaration public InteractingShootingTargetEventArgs(Player player, ShootingTarget shootingTarget, ShootingTargetButton targetButton, int maxHp, int autoResetTime, bool isAllowed = true) Parameters Type Name Description Player player AdminToys.ShootingTarget shootingTarget ShootingTargetButton targetButton System.Int32 maxHp System.Int32 autoResetTime System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the interaction is allowed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewAutoResetTime Gets or sets the new auto reset time of the target. Declaration public int NewAutoResetTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NewMaxHp Gets or sets the new max hp of the target. Declaration public int NewMaxHp { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Player Gets the player interacting with the shooting target. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ShootingTarget Gets the shooting target being interacted with. Declaration public ShootingTarget ShootingTarget { get; } Property Value Type Description ShootingTarget | Improve this Doc View Source TargetButton Gets the button the player interacted with. Declaration public ShootingTargetButton TargetButton { get; } Property Value Type Description ShootingTargetButton Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.InteractingTeslaEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.InteractingTeslaEventArgs.html",
    "title": "Class InteractingTeslaEventArgs | EXILED Docs",
    "keywords": "Class InteractingTeslaEventArgs Contains all informations before SCP-079 triggers a tesla gate. Inheritance System.Object System.EventArgs InteractingTeslaEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class InteractingTeslaEventArgs : EventArgs Constructors | Improve this Doc View Source InteractingTeslaEventArgs(Player, TeslaGate, Single) Initializes a new instance of the InteractingTeslaEventArgs class. Declaration public InteractingTeslaEventArgs(Player player, TeslaGate tesla, float auxiliaryPowerCost) Parameters Type Name Description Player player TeslaGate tesla System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to interact with a tesla gate through SCP-079. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can interact with the tesla gate. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Tesla Gets the TeslaGate that SCP-079 is triggering. Declaration public TeslaGate Tesla { get; } Property Value Type Description TeslaGate Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.IntercomSpeakingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.IntercomSpeakingEventArgs.html",
    "title": "Class IntercomSpeakingEventArgs | EXILED Docs",
    "keywords": "Class IntercomSpeakingEventArgs Contains all informations before a player speaks to the intercom. Inheritance System.Object System.EventArgs IntercomSpeakingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class IntercomSpeakingEventArgs : EventArgs Constructors | Improve this Doc View Source IntercomSpeakingEventArgs(Player, Boolean) Initializes a new instance of the IntercomSpeakingEventArgs class. Declaration public IntercomSpeakingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can speak to the intercom. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's going to speak to the intercom. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.JoinedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.JoinedEventArgs.html",
    "title": "Class JoinedEventArgs | EXILED Docs",
    "keywords": "Class JoinedEventArgs Contains all informations after a player joins the server. Inheritance System.Object System.EventArgs JoinedEventArgs LeftEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class JoinedEventArgs : EventArgs Constructors | Improve this Doc View Source JoinedEventArgs(Player) Initializes a new instance of the JoinedEventArgs class. Declaration public JoinedEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the joined player. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.JumpingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.JumpingEventArgs.html",
    "title": "Class JumpingEventArgs | EXILED Docs",
    "keywords": "Class JumpingEventArgs Contains all informations before a player jumps. Inheritance System.Object System.EventArgs JumpingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class JumpingEventArgs : EventArgs Constructors | Improve this Doc View Source JumpingEventArgs(Player, Vector3, Boolean) Initializes a new instance of the JumpingEventArgs class. Declaration public JumpingEventArgs(Player player, Vector3 pos, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 pos System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the client data can be synchronized with the server. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's jumping. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the jump position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.KickedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.KickedEventArgs.html",
    "title": "Class KickedEventArgs | EXILED Docs",
    "keywords": "Class KickedEventArgs Contains all informations after kicking a player from the server. Inheritance System.Object System.EventArgs KickedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class KickedEventArgs : EventArgs Constructors | Improve this Doc View Source KickedEventArgs(Player, String) Initializes a new instance of the KickedEventArgs class. Declaration public KickedEventArgs(Player target, string reason) Parameters Type Name Description Player target System.String reason Properties | Improve this Doc View Source Reason Gets the kick reason. Declaration public string Reason { get; } Property Value Type Description System.String | Improve this Doc View Source Target Gets the kicked player. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.KickingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.KickingEventArgs.html",
    "title": "Class KickingEventArgs | EXILED Docs",
    "keywords": "Class KickingEventArgs Contains all informations before kicking a player from the server. Inheritance System.Object System.EventArgs KickingEventArgs BanningEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class KickingEventArgs : EventArgs Constructors | Improve this Doc View Source KickingEventArgs(Player, Player, String, String, Boolean) Initializes a new instance of the KickingEventArgs class. Declaration public KickingEventArgs(Player target, Player issuer, string reason, string fullMessage, bool isAllowed = true) Parameters Type Name Description Player target Player issuer System.String reason System.String fullMessage System.Boolean isAllowed Properties | Improve this Doc View Source FullMessage Gets or sets the full kick message. Declaration public string FullMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not action is taken against the target. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Issuer Gets or sets the ban issuer. Declaration public Player Issuer { get; set; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the kick reason. Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source Target Gets or sets the ban target. Declaration public Player Target { get; set; } Property Value Type Description Player Methods | Improve this Doc View Source LogBanChange(String) Logs the kick, anti-backdoor protection from malicious plugins. Declaration protected void LogBanChange(string message) Parameters Type Name Description System.String message The message to be logged. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.LeftEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.LeftEventArgs.html",
    "title": "Class LeftEventArgs | EXILED Docs",
    "keywords": "Class LeftEventArgs Contains all player's information, after he leaves the server. Inheritance System.Object System.EventArgs JoinedEventArgs LeftEventArgs Inherited Members JoinedEventArgs.Player System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class LeftEventArgs : JoinedEventArgs Constructors | Improve this Doc View Source LeftEventArgs(Player) Initializes a new instance of the LeftEventArgs class. Declaration public LeftEventArgs(Player player) Parameters Type Name Description Player player The player who left the server. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.LocalReportingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.LocalReportingEventArgs.html",
    "title": "Class LocalReportingEventArgs | EXILED Docs",
    "keywords": "Class LocalReportingEventArgs Contains informations before a report is sent to local administrators. Inheritance System.Object System.EventArgs LocalReportingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class LocalReportingEventArgs : EventArgs Constructors | Improve this Doc View Source LocalReportingEventArgs(Player, Player, String, Boolean) Initializes a new instance of the LocalReportingEventArgs class. Declaration public LocalReportingEventArgs(Player issuer, Player target, string reason, bool isAllowed = true) Parameters Type Name Description Player issuer Player target System.String reason System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the report can be processed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Issuer Gets the report issuer. Declaration public Player Issuer { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the report reason. Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source Target Gets the report target. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.LockingDownEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.LockingDownEventArgs.html",
    "title": "Class LockingDownEventArgs | EXILED Docs",
    "keywords": "Class LockingDownEventArgs Contains all information before SCP-079 lockdowns a room. Inheritance System.Object System.EventArgs LockingDownEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class LockingDownEventArgs : EventArgs Constructors | Improve this Doc View Source LockingDownEventArgs(Player, RoomIdentifier, Single) Initializes a new instance of the LockingDownEventArgs class. Declaration public LockingDownEventArgs(Player player, RoomIdentifier roomIdentifier, float auxiliaryPowerCost) Parameters Type Name Description Player player MapGeneration.RoomIdentifier roomIdentifier System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to lockdown a room. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can lockdown a room. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source RoomGameObject Gets the MapGeneration.RoomIdentifier of the room that will be locked down. Declaration public RoomIdentifier RoomGameObject { get; } Property Value Type Description MapGeneration.RoomIdentifier Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.MakingNoiseEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.MakingNoiseEventArgs.html",
    "title": "Class MakingNoiseEventArgs | EXILED Docs",
    "keywords": "Class MakingNoiseEventArgs Contains all informations before a player makes noise. Inheritance System.Object System.EventArgs MakingNoiseEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class MakingNoiseEventArgs : EventArgs Constructors | Improve this Doc View Source MakingNoiseEventArgs(Player, Single, Boolean) Initializes a new instance of the MakingNoiseEventArgs class. Declaration public MakingNoiseEventArgs(Player player, float volume, bool isAllowed = true) Parameters Type Name Description Player player System.Single volume System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can make noise. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's making noise. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Volume Gets or sets the volume. Declaration public float Volume { get; set; } Property Value Type Description System.Single Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.OpeningGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.OpeningGeneratorEventArgs.html",
    "title": "Class OpeningGeneratorEventArgs | EXILED Docs",
    "keywords": "Class OpeningGeneratorEventArgs Contains all informations before a player opens a generator. Inheritance System.Object System.EventArgs OpeningGeneratorEventArgs ClosingGeneratorEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class OpeningGeneratorEventArgs : EventArgs Constructors | Improve this Doc View Source OpeningGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the OpeningGeneratorEventArgs class. Declaration public OpeningGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the generator that is opening. Declaration public Scp079Generator Generator { get; } Property Value Type Description MapGeneration.Distributors.Scp079Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the generator can be opened. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's opening the generator. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PickingUpAmmoEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PickingUpAmmoEventArgs.html",
    "title": "Class PickingUpAmmoEventArgs | EXILED Docs",
    "keywords": "Class PickingUpAmmoEventArgs Contains all information before a player picks up an ammo. Inheritance System.Object System.EventArgs PickingUpItemEventArgs PickingUpAmmoEventArgs Inherited Members PickingUpItemEventArgs.Player PickingUpItemEventArgs.Pickup PickingUpItemEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PickingUpAmmoEventArgs : PickingUpItemEventArgs Constructors | Improve this Doc View Source PickingUpAmmoEventArgs(Player, ItemPickupBase, Boolean) Initializes a new instance of the PickingUpAmmoEventArgs class. Declaration public PickingUpAmmoEventArgs(Player player, ItemPickupBase pickup, bool isAllowed = true) Parameters Type Name Description Player player The player who's picking up the ammo. InventorySystem.Items.Pickups.ItemPickupBase pickup The pickup to be picked up. System.Boolean isAllowed Gets or sets a value indicating whether or not the ammo can be picked up. Properties | Improve this Doc View Source AmmoType Gets the AmmoType of the item. Declaration public AmmoType AmmoType { get; } Property Value Type Description AmmoType Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PickingUpArmorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PickingUpArmorEventArgs.html",
    "title": "Class PickingUpArmorEventArgs | EXILED Docs",
    "keywords": "Class PickingUpArmorEventArgs Contains all information before a player picks up Armor . Inheritance System.Object System.EventArgs PickingUpItemEventArgs PickingUpArmorEventArgs Inherited Members PickingUpItemEventArgs.Player PickingUpItemEventArgs.Pickup PickingUpItemEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PickingUpArmorEventArgs : PickingUpItemEventArgs Constructors | Improve this Doc View Source PickingUpArmorEventArgs(Player, ItemPickupBase, Boolean) Initializes a new instance of the PickingUpArmorEventArgs class. Declaration public PickingUpArmorEventArgs(Player player, ItemPickupBase pickup, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Pickups.ItemPickupBase pickup System.Boolean isAllowed Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PickingUpItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PickingUpItemEventArgs.html",
    "title": "Class PickingUpItemEventArgs | EXILED Docs",
    "keywords": "Class PickingUpItemEventArgs Contains all information before a player picks up an item. Inheritance System.Object System.EventArgs PickingUpItemEventArgs PickingUpAmmoEventArgs PickingUpArmorEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PickingUpItemEventArgs : EventArgs Constructors | Improve this Doc View Source PickingUpItemEventArgs(Player, ItemPickupBase, Boolean) Initializes a new instance of the PickingUpItemEventArgs class. Declaration public PickingUpItemEventArgs(Player player, ItemPickupBase pickup, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Pickups.ItemPickupBase pickup System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the item can be picked up. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets the dropped pickup. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Player Gets the player who dropped the item. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PickingUpScp330EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PickingUpScp330EventArgs.html",
    "title": "Class PickingUpScp330EventArgs | EXILED Docs",
    "keywords": "Class PickingUpScp330EventArgs Contains all informations before a player interacts with SCP-330. Inheritance System.Object System.EventArgs PickingUpScp330EventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PickingUpScp330EventArgs : EventArgs Constructors | Improve this Doc View Source PickingUpScp330EventArgs(Player, Int32, ItemType, Boolean) Initializes a new instance of the PickingUpScp330EventArgs class. Declaration public PickingUpScp330EventArgs(Player player, int usage, ItemType item, bool isAllowed = true) Parameters Type Name Description Player player System.Int32 usage ItemType item System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with SCP-330. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSevere Gets or sets a value indicating whether or not the interaction should be severe. Declaration public bool IsSevere { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemId Gets or sets a value indicating what item will be picked up. Declaration public ItemType ItemId { get; set; } Property Value Type Description ItemType | Improve this Doc View Source Player Gets the player who's interacting with SCP-330. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Usage Gets or sets player's pickup counter. Declaration public int Usage { get; set; } Property Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PlacingBloodEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PlacingBloodEventArgs.html",
    "title": "Class PlacingBloodEventArgs | EXILED Docs",
    "keywords": "Class PlacingBloodEventArgs Contains all informations before a player places blood. Inheritance System.Object System.EventArgs PlacingBloodEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PlacingBloodEventArgs : EventArgs Constructors | Improve this Doc View Source PlacingBloodEventArgs(Player, Vector3, Int32, Single, Boolean) Initializes a new instance of the PlacingBloodEventArgs class. Declaration public PlacingBloodEventArgs(Player player, Vector3 position, int type, float multiplier, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 position System.Int32 type System.Single multiplier System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the blood can be placed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Multiplier Gets or sets the blood multiplier. Declaration public float Multiplier { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Player Gets the player who's placing the blood. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the blood placing position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Type Gets or sets the blood type. Declaration public int Type { get; set; } Property Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PlacingBulletHole.html": {
    "href": "api/Exiled.Events.EventArgs.PlacingBulletHole.html",
    "title": "Class PlacingBulletHole | EXILED Docs",
    "keywords": "Class PlacingBulletHole Contains all informations before placing a decal. Inheritance System.Object System.EventArgs PlacingBulletHole Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PlacingBulletHole : EventArgs Constructors | Improve this Doc View Source PlacingBulletHole(Player, RaycastHit) Initializes a new instance of the PlacingBulletHole class. Declaration public PlacingBulletHole(Player owner, RaycastHit hit) Parameters Type Name Description Player owner UnityEngine.RaycastHit hit Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the decal can be placed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Owner Gets the decal owner. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the decal position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets or sets the decal rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PlacingTantrumEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PlacingTantrumEventArgs.html",
    "title": "Class PlacingTantrumEventArgs | EXILED Docs",
    "keywords": "Class PlacingTantrumEventArgs Contains all information before the tantrum is placed. Inheritance System.Object System.EventArgs PlacingTantrumEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PlacingTantrumEventArgs : EventArgs Constructors | Improve this Doc View Source PlacingTantrumEventArgs(Scp173, Player, GameObject, Single, Boolean) Initializes a new instance of the PlacingTantrumEventArgs class. Declaration public PlacingTantrumEventArgs(Scp173 scp173, Player player, GameObject gameObject, float cooldown, bool isAllowed = true) Parameters Type Name Description PlayableScps.Scp173 scp173 Player player UnityEngine.GameObject gameObject System.Single cooldown System.Boolean isAllowed Properties | Improve this Doc View Source Cooldown Gets or sets the tantrum cooldown. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source GameObject Gets the tantrum GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the tantrum can be placed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's placing the tantrum. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp173 Gets the player's PlayableScps.Scp173 instance. Declaration public Scp173 Scp173 { get; } Property Value Type Description PlayableScps.Scp173 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.PreAuthenticatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.PreAuthenticatingEventArgs.html",
    "title": "Class PreAuthenticatingEventArgs | EXILED Docs",
    "keywords": "Class PreAuthenticatingEventArgs Contains all informations before pre-autenticating a player. Inheritance System.Object System.EventArgs PreAuthenticatingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class PreAuthenticatingEventArgs : EventArgs Constructors | Improve this Doc View Source PreAuthenticatingEventArgs(String, ConnectionRequest, Int32, Byte, String, Int32) Initializes a new instance of the PreAuthenticatingEventArgs class. Declaration public PreAuthenticatingEventArgs(string userId, ConnectionRequest request, int readerStartPosition, byte flags, string country, int num) Parameters Type Name Description System.String userId LiteNetLib.ConnectionRequest request System.Int32 readerStartPosition System.Byte flags System.String country System.Int32 num Properties | Improve this Doc View Source Country Gets the player's country. Declaration public string Country { get; } Property Value Type Description System.String | Improve this Doc View Source Flags Gets the flags. Declaration public byte Flags { get; } Property Value Type Description System.Byte | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the player can be authenticated or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ReaderStartPosition Gets the reader starting position for reading the preauth. Declaration public int ReaderStartPosition { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Request Gets the connection request. Declaration public ConnectionRequest Request { get; } Property Value Type Description LiteNetLib.ConnectionRequest | Improve this Doc View Source ServerFull Gets a value indicating whether the server is full. Declaration public bool ServerFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UserId Gets the player's user id. Declaration public string UserId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Delay(Byte, Boolean) Delays the connection. Declaration public void Delay(byte seconds, bool isForced) Parameters Type Name Description System.Byte seconds The delay in seconds. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. | Improve this Doc View Source Disallow() Disallows the connection without sending any reason. Should only be used when the connection has already been terminated by the plugin itself. Declaration public void Disallow() | Improve this Doc View Source Redirect(UInt16, Boolean) Rejects the player and redirects them to another server port. Declaration public void Redirect(ushort port, bool isForced) Parameters Type Name Description System.UInt16 port The new server port. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. | Improve this Doc View Source Reject(NetDataWriter, Boolean) Rejects a player who's trying to authenticate. Declaration public void Reject(NetDataWriter writer, bool isForced) Parameters Type Name Description LiteNetLib.Utils.NetDataWriter writer The LiteNetLib.Utils.NetDataWriter instance. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. | Improve this Doc View Source Reject(RejectionReason, Boolean, String, Int64, Byte, UInt16) Rejects a player who's trying to authenticate. Declaration public void Reject(RejectionReason rejectionReason, bool isForced, string customReason = null, long expiration = 0L, byte seconds = 0, ushort port = 0) Parameters Type Name Description RejectionReason rejectionReason The rejection reason. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. System.String customReason The custom rejection reason (Banned and Custom reasons only). System.Int64 expiration The ban expiration ticks (Banned reason only). System.Byte seconds The delay in seconds (Delay reason only). System.UInt16 port The redirection port (Redirect reason only). | Improve this Doc View Source Reject(String, Boolean) Rejects a player who's trying to authenticate. Declaration public void Reject(string rejectionReason, bool isForced) Parameters Type Name Description System.String rejectionReason The custom rejection reason. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. | Improve this Doc View Source RejectBanned(String, DateTime, Boolean) Rejects a player who's trying to authenticate. Declaration public void RejectBanned(string banReason, DateTime expiration, bool isForced) Parameters Type Name Description System.String banReason The ban reason. System.DateTime expiration The ban expiration time. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. | Improve this Doc View Source RejectBanned(String, Int64, Boolean) Rejects a player who's trying to authenticate. Declaration public void RejectBanned(string banReason, long expiration, bool isForced) Parameters Type Name Description System.String banReason The ban reason. System.Int64 expiration The ban expiration time in .NET Ticks. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ProcessingHotkeyEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ProcessingHotkeyEventArgs.html",
    "title": "Class ProcessingHotkeyEventArgs | EXILED Docs",
    "keywords": "Class ProcessingHotkeyEventArgs Contains all informations before pressing a hotkey. Inheritance System.Object System.EventArgs ProcessingHotkeyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ProcessingHotkeyEventArgs : EventArgs Constructors | Improve this Doc View Source ProcessingHotkeyEventArgs(Player, HotkeyButton, Boolean) Initializes a new instance of the ProcessingHotkeyEventArgs class. Declaration public ProcessingHotkeyEventArgs(Player player, HotkeyButton hotkey, bool isAllowed = true) Parameters Type Name Description Player player HotkeyButton hotkey System.Boolean isAllowed Properties | Improve this Doc View Source Hotkey Gets the pressed hotkey. Declaration public HotkeyButton Hotkey { get; } Property Value Type Description HotkeyButton | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the hotkey is allowed to be pressed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's pressing the hotkey. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ReceivingEffectEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ReceivingEffectEventArgs.html",
    "title": "Class ReceivingEffectEventArgs | EXILED Docs",
    "keywords": "Class ReceivingEffectEventArgs Contains all information before a player receives a CustomPlayerEffects.PlayerEffect . Inheritance System.Object System.EventArgs ReceivingEffectEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ReceivingEffectEventArgs : EventArgs Constructors | Improve this Doc View Source ReceivingEffectEventArgs(Player, PlayerEffect, Byte, Byte) Initializes a new instance of the ReceivingEffectEventArgs class. Declaration public ReceivingEffectEventArgs(Player player, PlayerEffect effect, byte state, byte currentState) Parameters Type Name Description Player player The Player receiving the effect. CustomPlayerEffects.PlayerEffect effect The CustomPlayerEffects.PlayerEffect being added to the player. System.Byte state The state the effect is being changed to. System.Byte currentState The current state of the effect being changed. Properties | Improve this Doc View Source CurrentState Gets the value of the current state of this effect on the player. Declaration public byte CurrentState { get; } Property Value Type Description System.Byte | Improve this Doc View Source Duration Gets or sets a value indicating how long the effect will last. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Effect Gets the CustomPlayerEffects.PlayerEffect being received. Declaration public PlayerEffect Effect { get; } Property Value Type Description CustomPlayerEffects.PlayerEffect | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the effect will be applied. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player receiving the effect. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source State Gets or sets the value of the new state of the effect. Setting this to 0 is the same as setting IsAllowed to false. Declaration public byte State { get; set; } Property Value Type Description System.Byte Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.RecontainedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.RecontainedEventArgs.html",
    "title": "Class RecontainedEventArgs | EXILED Docs",
    "keywords": "Class RecontainedEventArgs Contains informations after SCP-079 recontainming. Inheritance System.Object System.EventArgs RecontainedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class RecontainedEventArgs : EventArgs Constructors | Improve this Doc View Source RecontainedEventArgs(Player) Initializes a new instance of the RecontainedEventArgs class. Declaration public RecontainedEventArgs(Player target) Parameters Type Name Description Player target Properties | Improve this Doc View Source Target Gets the player that previously controlled SCP-079. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ReloadingWeaponEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ReloadingWeaponEventArgs.html",
    "title": "Class ReloadingWeaponEventArgs | EXILED Docs",
    "keywords": "Class ReloadingWeaponEventArgs Contains all information before a player's weapon is reloaded. Inheritance System.Object System.EventArgs ReloadingWeaponEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ReloadingWeaponEventArgs : EventArgs Constructors | Improve this Doc View Source ReloadingWeaponEventArgs(Player, Boolean) Initializes a new instance of the ReloadingWeaponEventArgs class. Declaration public ReloadingWeaponEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being reloaded. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon can be reloaded. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's reloading the weapon. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.RemovingHandcuffsEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.RemovingHandcuffsEventArgs.html",
    "title": "Class RemovingHandcuffsEventArgs | EXILED Docs",
    "keywords": "Class RemovingHandcuffsEventArgs Contains all informations before freeing a handcuffed player. Inheritance System.Object System.EventArgs HandcuffingEventArgs RemovingHandcuffsEventArgs Inherited Members HandcuffingEventArgs.Cuffer HandcuffingEventArgs.Target HandcuffingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class RemovingHandcuffsEventArgs : HandcuffingEventArgs Constructors | Improve this Doc View Source RemovingHandcuffsEventArgs(Player, Player, Boolean) Initializes a new instance of the RemovingHandcuffsEventArgs class. Declaration public RemovingHandcuffsEventArgs(Player cuffer, Player target, bool isAllowed = true) Parameters Type Name Description Player cuffer The cuffer player. Player target The target player to be uncuffed. System.Boolean isAllowed Indicates whether the event can be executed or not. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ReportingCheaterEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ReportingCheaterEventArgs.html",
    "title": "Class ReportingCheaterEventArgs | EXILED Docs",
    "keywords": "Class ReportingCheaterEventArgs Contains all informations before reporting a cheater. Inheritance System.Object System.EventArgs ReportingCheaterEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ReportingCheaterEventArgs : EventArgs Constructors | Improve this Doc View Source ReportingCheaterEventArgs(Player, Player, Int32, String, Boolean) Initializes a new instance of the ReportingCheaterEventArgs class. Declaration public ReportingCheaterEventArgs(Player issuer, Player target, int serverPort, string reason, bool isAllowed = true) Parameters Type Name Description Player issuer Player target System.Int32 serverPort System.String reason System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the report will be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Issuer Gets the issuing player. Declaration public Player Issuer { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the report reason. Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServerPort Gets the server id. Declaration public int ServerPort { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Target Gets the targeted player. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.RespawningTeamEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.RespawningTeamEventArgs.html",
    "title": "Class RespawningTeamEventArgs | EXILED Docs",
    "keywords": "Class RespawningTeamEventArgs Contains all informations before spawning a wave of Respawning.SpawnableTeamType.NineTailedFox or Respawning.SpawnableTeamType.ChaosInsurgency . Inheritance System.Object System.EventArgs RespawningTeamEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class RespawningTeamEventArgs : EventArgs Constructors | Improve this Doc View Source RespawningTeamEventArgs(List<Player>, Int32, SpawnableTeamType, Boolean) Initializes a new instance of the RespawningTeamEventArgs class. Declaration public RespawningTeamEventArgs(List<Player> players, int maxRespawn, SpawnableTeamType nextKnownTeam, bool isAllowed = true) Parameters Type Name Description System.Collections.Generic.List < Player > players System.Int32 maxRespawn Respawning.SpawnableTeamType nextKnownTeam System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the spawn can occur. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaximumRespawnAmount Gets or sets the maximum amount of respawnable players. Declaration public int MaximumRespawnAmount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NextKnownTeam Gets or sets a value indicating what the next respawnable team is. Declaration public SpawnableTeamType NextKnownTeam { get; set; } Property Value Type Description Respawning.SpawnableTeamType | Improve this Doc View Source Players Gets the list of players that are going to be respawned. Declaration public List<Player> Players { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source SpawnableTeam Gets the current spawnable team. Declaration public SpawnableTeamHandlerBase SpawnableTeam { get; } Property Value Type Description Respawning.SpawnableTeamHandlerBase Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.RoundEndedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.RoundEndedEventArgs.html",
    "title": "Class RoundEndedEventArgs | EXILED Docs",
    "keywords": "Class RoundEndedEventArgs Contains all information after the end of a round. Inheritance System.Object System.EventArgs RoundEndedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class RoundEndedEventArgs : EventArgs Constructors | Improve this Doc View Source RoundEndedEventArgs(LeadingTeam, RoundSummary.SumInfo_ClassList, Int32) Initializes a new instance of the RoundEndedEventArgs class. Declaration public RoundEndedEventArgs(LeadingTeam leadingTeam, RoundSummary.SumInfo_ClassList classList, int timeToRestart) Parameters Type Name Description LeadingTeam leadingTeam RoundSummary.SumInfo_ClassList classList System.Int32 timeToRestart Properties | Improve this Doc View Source ClassList Gets or sets the round summary class list. Declaration public RoundSummary.SumInfo_ClassList ClassList { get; set; } Property Value Type Description RoundSummary.SumInfo_ClassList | Improve this Doc View Source LeadingTeam Gets the leading team. Declaration public LeadingTeam LeadingTeam { get; } Property Value Type Description LeadingTeam | Improve this Doc View Source TimeToRestart Gets or sets the time to restart the next round. Declaration public int TimeToRestart { get; set; } Property Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.SendingCassieMessageEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.SendingCassieMessageEventArgs.html",
    "title": "Class SendingCassieMessageEventArgs | EXILED Docs",
    "keywords": "Class SendingCassieMessageEventArgs Contains all the information after sending a C.A.S.S.I.E. message. Inheritance System.Object System.EventArgs SendingCassieMessageEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class SendingCassieMessageEventArgs : EventArgs Constructors | Improve this Doc View Source SendingCassieMessageEventArgs(String, Boolean, Boolean, Boolean) Initializes a new instance of the SendingCassieMessageEventArgs class. Declaration public SendingCassieMessageEventArgs(string words, bool makeHold, bool makeNoise, bool isAllowed = true) Parameters Type Name Description System.String words System.Boolean makeHold System.Boolean makeNoise System.Boolean isAllowed Indicates whether the event can be executed or not. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the message can be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MakeHold Gets or sets a value indicating whether or not the message should be held. Declaration public bool MakeHold { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MakeNoise Gets or sets a value indicating whether or not the message should make noise. Declaration public bool MakeNoise { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Words Gets or sets the message. Declaration public string Words { get; set; } Property Value Type Description System.String Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ShootingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ShootingEventArgs.html",
    "title": "Class ShootingEventArgs | EXILED Docs",
    "keywords": "Class ShootingEventArgs Contains all information before a player fires a weapon. Inheritance System.Object System.EventArgs ShootingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ShootingEventArgs : EventArgs Constructors | Improve this Doc View Source ShootingEventArgs(Player, ShotMessage) Initializes a new instance of the ShootingEventArgs class. Declaration public ShootingEventArgs(Player shooter, ShotMessage msg) Parameters Type Name Description Player shooter InventorySystem.Items.Firearms.BasicMessages.ShotMessage msg Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the shot can be fired. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Shooter Gets the player who's shooting. Declaration public Player Shooter { get; } Property Value Type Description Player | Improve this Doc View Source ShotMessage Gets or sets the ShotMessage for the event. Declaration public ShotMessage ShotMessage { get; set; } Property Value Type Description InventorySystem.Items.Firearms.BasicMessages.ShotMessage | Improve this Doc View Source ShotPosition Gets or sets the position of the shot. Declaration public Vector3 ShotPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source TargetNetId Gets or sets the netId of the target of the shot. Declaration public uint TargetNetId { get; set; } Property Value Type Description System.UInt32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ShotEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ShotEventArgs.html",
    "title": "Class ShotEventArgs | EXILED Docs",
    "keywords": "Class ShotEventArgs Contains all information after a player has fired a weapon. Inheritance System.Object System.EventArgs ShotEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ShotEventArgs : EventArgs Constructors | Improve this Doc View Source ShotEventArgs(Player, RaycastHit, IDestructible, Single) Initializes a new instance of the ShotEventArgs class. Declaration public ShotEventArgs(Player shooter, RaycastHit hit, IDestructible destructible, float damage) Parameters Type Name Description Player shooter UnityEngine.RaycastHit hit IDestructible destructible The IDestructible hit. System.Single damage Properties | Improve this Doc View Source CanHurt Gets or sets a value indicating whether or not the shot can hurt the target. Declaration public bool CanHurt { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Damage Gets or sets the inflicted damage. Declaration public float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Distance Gets the shot distance. Declaration public float Distance { get; } Property Value Type Description System.Single | Improve this Doc View Source Hitbox Gets the hitbox type of the shot. Can be null!. Declaration public HitboxIdentity Hitbox { get; } Property Value Type Description HitboxIdentity | Improve this Doc View Source Shooter Gets the player who shot. Declaration public Player Shooter { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the target of the shot. Can be null!. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.SpawningEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.SpawningEventArgs.html",
    "title": "Class SpawningEventArgs | EXILED Docs",
    "keywords": "Class SpawningEventArgs Contains all information before spawning a player. Inheritance System.Object System.EventArgs SpawningEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class SpawningEventArgs : EventArgs Constructors | Improve this Doc View Source SpawningEventArgs(Player, RoleType) Initializes a new instance of the SpawningEventArgs class. Declaration public SpawningEventArgs(Player player, RoleType roleType) Parameters Type Name Description Player player RoleType roleType Properties | Improve this Doc View Source Player Gets the spawning player. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the player's spawning position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source RoleType Gets the player role type. Declaration public RoleType RoleType { get; } Property Value Type Description RoleType | Improve this Doc View Source RotationY Gets or sets the rotation y axis of the player. Declaration public float RotationY { get; set; } Property Value Type Description System.Single Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.SpawningItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.SpawningItemEventArgs.html",
    "title": "Class SpawningItemEventArgs | EXILED Docs",
    "keywords": "Class SpawningItemEventArgs Contains all information before the server spawns an item. Inheritance System.Object System.EventArgs SpawningItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class SpawningItemEventArgs : EventArgs Constructors | Improve this Doc View Source SpawningItemEventArgs(ItemPickupBase, Boolean) Initializes a new instance of the SpawningItemEventArgs class. Declaration public SpawningItemEventArgs(ItemPickupBase pickupBase, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase pickupBase System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the item can be spawned. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets or sets a value indicating the pickup being spawned. Declaration public Pickup Pickup { get; set; } Property Value Type Description Pickup Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.SpawningRagdollEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.SpawningRagdollEventArgs.html",
    "title": "Class SpawningRagdollEventArgs | EXILED Docs",
    "keywords": "Class SpawningRagdollEventArgs Contains all informations before spawning a player ragdoll. Inheritance System.Object System.EventArgs SpawningRagdollEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class SpawningRagdollEventArgs : EventArgs Constructors | Improve this Doc View Source SpawningRagdollEventArgs(RagdollInfo, DamageHandlerBase, Boolean) Initializes a new instance of the SpawningRagdollEventArgs class. Declaration public SpawningRagdollEventArgs(RagdollInfo ragdollInfo, DamageHandlerBase damageHandlerBase, bool isAllowed = true) Parameters Type Name Description RagdollInfo ragdollInfo PlayerStatsSystem.DamageHandlerBase damageHandlerBase System.Boolean isAllowed Properties | Improve this Doc View Source CreationTime Gets the ragdoll's creation time. Declaration public double CreationTime { get; } Property Value Type Description System.Double | Improve this Doc View Source DamageHandlerBase Gets or sets the ragdoll's PlayerStatsSystem.DamageHandlerBase . Declaration public DamageHandlerBase DamageHandlerBase { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Info Gets or sets the ragdoll's RagdollInfo . Declaration public RagdollInfo Info { get; set; } Property Value Type Description RagdollInfo | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the ragdoll can be spawned. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Nickname Gets or sets the ragdoll's nickname. Declaration public string Nickname { get; set; } Property Value Type Description System.String | Improve this Doc View Source Owner Gets the Player of the ragdoll. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the spawning position of the ragdoll. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Role Gets or sets the ragdoll's RoleType . Declaration public RoleType Role { get; set; } Property Value Type Description RoleType | Improve this Doc View Source Rotation Gets or sets the ragdoll's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StartingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StartingEventArgs.html",
    "title": "Class StartingEventArgs | EXILED Docs",
    "keywords": "Class StartingEventArgs Contains all informations before starting the warhead. Inheritance System.Object System.EventArgs StoppingEventArgs StartingEventArgs Inherited Members StoppingEventArgs.Player StoppingEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StartingEventArgs : StoppingEventArgs Constructors | Improve this Doc View Source StartingEventArgs(Player, Boolean) Initializes a new instance of the StartingEventArgs class. Declaration public StartingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player The player who's going to start the warhead. System.Boolean isAllowed Indicating whether the event can be executed or not. Properties | Improve this Doc View Source IsAuto Gets a value indicating whether or not the nuke was set off automatically. Declaration public bool IsAuto { get; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StartingRecallEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StartingRecallEventArgs.html",
    "title": "Class StartingRecallEventArgs | EXILED Docs",
    "keywords": "Class StartingRecallEventArgs Contains all informations before SCP-049 begins recalling a player. Inheritance System.Object System.EventArgs StartingRecallEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StartingRecallEventArgs : EventArgs Constructors | Improve this Doc View Source StartingRecallEventArgs(Player, Player, Boolean) Initializes a new instance of the StartingRecallEventArgs class. Declaration public StartingRecallEventArgs(Player target, Player scp049, bool isAllowed = true) Parameters Type Name Description Player target Player scp049 System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the recall can begin. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Scp049 Gets the player who is controlling SCP-049. Declaration public Player Scp049 { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the player who's getting recalled. Declaration public Player Target { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StartingSpeakerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StartingSpeakerEventArgs.html",
    "title": "Class StartingSpeakerEventArgs | EXILED Docs",
    "keywords": "Class StartingSpeakerEventArgs Contains all informations before SCP-079 uses a speaker. Inheritance System.Object System.EventArgs StartingSpeakerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StartingSpeakerEventArgs : EventArgs Constructors | Improve this Doc View Source StartingSpeakerEventArgs(Player, Room, Single, Boolean) Initializes a new instance of the StartingSpeakerEventArgs class. Declaration public StartingSpeakerEventArgs(Player player, Room room, float auxiliaryPowerCost, bool isAllowed = true) Parameters Type Name Description Player player Room room System.Single auxiliaryPowerCost System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to use a speaker through SCP-079. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can use the speaker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the room that the speaker is located in. Declaration public Room Room { get; } Property Value Type Description Room Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StartPryingGateEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StartPryingGateEventArgs.html",
    "title": "Class StartPryingGateEventArgs | EXILED Docs",
    "keywords": "Class StartPryingGateEventArgs Contains all information before SCP-096 begins prying a gate open. Inheritance System.Object System.EventArgs StartPryingGateEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StartPryingGateEventArgs : EventArgs Constructors | Improve this Doc View Source StartPryingGateEventArgs(Scp096, Player, PryableDoor, Boolean) Initializes a new instance of the StartPryingGateEventArgs class. Declaration public StartPryingGateEventArgs(Scp096 scp096, Player player, PryableDoor gate, bool isAllowed = true) Parameters Type Name Description PlayableScps.Scp096 scp096 Player player Interactables.Interobjects.PryableDoor gate System.Boolean isAllowed Properties | Improve this Doc View Source Gate Gets the Interactables.Interobjects.PryableDoor to be pried open. Declaration public Door Gate { get; } Property Value Type Description Door | Improve this Doc View Source IsAllowed Gets or Sets a value indicating whether or not the gate can be pried open by SCP-096. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player that is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096 Scp096 { get; } Property Value Type Description PlayableScps.Scp096 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StoppingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StoppingEventArgs.html",
    "title": "Class StoppingEventArgs | EXILED Docs",
    "keywords": "Class StoppingEventArgs Contains all informations before stopping the warhead. Inheritance System.Object System.EventArgs StoppingEventArgs StartingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StoppingEventArgs : EventArgs Constructors | Improve this Doc View Source StoppingEventArgs(Player, Boolean) Initializes a new instance of the StoppingEventArgs class. Declaration public StoppingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the warhead can be stopped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's going to stop the warhead. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StoppingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StoppingGeneratorEventArgs.html",
    "title": "Class StoppingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class StoppingGeneratorEventArgs Contains all informations before a player ejects a tablet from a generator. Inheritance System.Object System.EventArgs ActivatingGeneratorEventArgs StoppingGeneratorEventArgs Inherited Members ActivatingGeneratorEventArgs.Player ActivatingGeneratorEventArgs.Generator ActivatingGeneratorEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StoppingGeneratorEventArgs : ActivatingGeneratorEventArgs Constructors | Improve this Doc View Source StoppingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the StoppingGeneratorEventArgs class. Declaration public StoppingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player The player who's ejecting the tablet. MapGeneration.Distributors.Scp079Generator generator The MapGeneration.Distributors.Scp079Generator instance. System.Boolean isAllowed Indicates whether or not the tablet can be ejected. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.StoppingSpeakerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.StoppingSpeakerEventArgs.html",
    "title": "Class StoppingSpeakerEventArgs | EXILED Docs",
    "keywords": "Class StoppingSpeakerEventArgs Contains all informations before SCP-079 finishes using a speaker. Inheritance System.Object System.EventArgs StoppingSpeakerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class StoppingSpeakerEventArgs : EventArgs Constructors | Improve this Doc View Source StoppingSpeakerEventArgs(Player, Room, Boolean) Initializes a new instance of the StoppingSpeakerEventArgs class. Declaration public StoppingSpeakerEventArgs(Player player, Room room, bool isAllowed = true) Parameters Type Name Description Player player Room room System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can stop using the speaker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the room that the speaker is located in. Declaration public Room Room { get; } Property Value Type Description Room Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.SyncingDataEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.SyncingDataEventArgs.html",
    "title": "Class SyncingDataEventArgs | EXILED Docs",
    "keywords": "Class SyncingDataEventArgs Contains all informations before syncing player's data with the server. Inheritance System.Object System.EventArgs SyncingDataEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class SyncingDataEventArgs : EventArgs Constructors | Improve this Doc View Source SyncingDataEventArgs(Player, Vector2, Byte, Boolean) Initializes a new instance of the SyncingDataEventArgs class. Declaration public SyncingDataEventArgs(Player player, Vector2 speed, byte currentAnimation, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector2 speed System.Byte currentAnimation System.Boolean isAllowed Properties | Improve this Doc View Source CurrentAnimation Gets or sets the current player's animation. Declaration public byte CurrentAnimation { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player's data can be synced with the server. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player of the syncing data. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Speed Gets the player's speed. Declaration public Vector2 Speed { get; } Property Value Type Description UnityEngine.Vector2 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TeleportingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TeleportingEventArgs.html",
    "title": "Class TeleportingEventArgs | EXILED Docs",
    "keywords": "Class TeleportingEventArgs Contains all informations before SCP-106 teleports using a portal. Inheritance System.Object System.EventArgs TeleportingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TeleportingEventArgs : EventArgs Constructors | Improve this Doc View Source TeleportingEventArgs(Player, Vector3, Boolean) Initializes a new instance of the TeleportingEventArgs class. Declaration public TeleportingEventArgs(Player player, Vector3 portalPosition, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 portalPosition System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-106 can teleport using a portal. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-106. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source PortalPosition Gets or sets the portal position. Declaration public Vector3 PortalPosition { get; set; } Property Value Type Description UnityEngine.Vector3 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.ThrowingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.ThrowingItemEventArgs.html",
    "title": "Class ThrowingItemEventArgs | EXILED Docs",
    "keywords": "Class ThrowingItemEventArgs Contains all information before a player throws a grenade. Inheritance System.Object System.EventArgs ThrowingItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class ThrowingItemEventArgs : EventArgs Constructors | Improve this Doc View Source ThrowingItemEventArgs(Player, ThrowableItem, ThrowableNetworkHandler.RequestType, Boolean) Initializes a new instance of the ThrowingItemEventArgs class. Declaration public ThrowingItemEventArgs(Player player, ThrowableItem item, ThrowableNetworkHandler.RequestType request, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ThrowableProjectiles.ThrowableItem item InventorySystem.Items.ThrowableProjectiles.ThrowableNetworkHandler.RequestType request System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the grenade can be thrown. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets or sets the item being thrown. Declaration public Throwable Item { get; set; } Property Value Type Description Throwable | Improve this Doc View Source Player Gets the player who's throwing the grenade. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source RequestType Gets or sets the type of throw being requested. Declaration public ThrowRequest RequestType { get; set; } Property Value Type Description ThrowRequest Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TogglingFlashlightEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TogglingFlashlightEventArgs.html",
    "title": "Class TogglingFlashlightEventArgs | EXILED Docs",
    "keywords": "Class TogglingFlashlightEventArgs Contains all information before a player toggles the flashlight. Inheritance System.Object System.EventArgs TogglingFlashlightEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TogglingFlashlightEventArgs : EventArgs Constructors | Improve this Doc View Source TogglingFlashlightEventArgs(Player, FlashlightItem, Boolean, Boolean) Initializes a new instance of the TogglingFlashlightEventArgs class. Declaration public TogglingFlashlightEventArgs(Player player, FlashlightItem flashlight, bool newState, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Flashlight.FlashlightItem flashlight System.Boolean newState System.Boolean isAllowed Properties | Improve this Doc View Source Flashlight Gets the Flashlight being toggled. Declaration public Flashlight Flashlight { get; } Property Value Type Description Flashlight | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can toggle the flashlight. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewState Gets or sets the new flashlight state. Declaration public bool NewState { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's toggling the flashlight. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TogglingNoClipEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TogglingNoClipEventArgs.html",
    "title": "Class TogglingNoClipEventArgs | EXILED Docs",
    "keywords": "Class TogglingNoClipEventArgs Contains all informations before a player toggles the NoClip mode. Inheritance System.Object System.EventArgs TogglingNoClipEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TogglingNoClipEventArgs : EventArgs Constructors | Improve this Doc View Source TogglingNoClipEventArgs(Player, Boolean) Initializes a new instance of the TogglingNoClipEventArgs class. Declaration public TogglingNoClipEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can toggle the NoClip mode. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's toggling the NoClip mode. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TogglingWeaponFlashlightEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TogglingWeaponFlashlightEventArgs.html",
    "title": "Class TogglingWeaponFlashlightEventArgs | EXILED Docs",
    "keywords": "Class TogglingWeaponFlashlightEventArgs Contains all information before a player toggles the weapon's flashlight. Inheritance System.Object System.EventArgs TogglingWeaponFlashlightEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TogglingWeaponFlashlightEventArgs : EventArgs Constructors | Improve this Doc View Source TogglingWeaponFlashlightEventArgs(Player, Boolean, Boolean) Initializes a new instance of the TogglingWeaponFlashlightEventArgs class. Declaration public TogglingWeaponFlashlightEventArgs(Player player, bool newState, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean newState System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being holded. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon's flashlight can be toggled. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewState Gets or sets the new weapon's flashlight state. Declaration public bool NewState { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's toggling the weapon's flashlight. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TransmittingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TransmittingEventArgs.html",
    "title": "Class TransmittingEventArgs | EXILED Docs",
    "keywords": "Class TransmittingEventArgs Contains all information after a player presses the transmission key. Inheritance System.Object System.EventArgs TransmittingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TransmittingEventArgs : EventArgs Constructors | Improve this Doc View Source TransmittingEventArgs(Player, Radio, DissonanceUserSetup, Boolean, Boolean) Initializes a new instance of the TransmittingEventArgs class. Declaration public TransmittingEventArgs(Player player, Radio radio, DissonanceUserSetup dissonanceUserSetup, bool isTransmitting, bool isAllowed = true) Parameters Type Name Description Player player Radio radio Assets._Scripts.Dissonance.DissonanceUserSetup dissonanceUserSetup System.Boolean isTransmitting System.Boolean isAllowed Properties | Improve this Doc View Source DissonanceUserSetup Gets the Radio 's DissonanceUserSetup. Declaration public DissonanceUserSetup DissonanceUserSetup { get; } Property Value Type Description Assets._Scripts.Dissonance.DissonanceUserSetup | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can transmit. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTransmitting Gets a value indicating whether or not the player is transmitting. Declaration public bool IsTransmitting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's transmitting. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Radio Gets the player's Radio component. Declaration public Radio Radio { get; } Property Value Type Description Radio Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TriggeringDoorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TriggeringDoorEventArgs.html",
    "title": "Class TriggeringDoorEventArgs | EXILED Docs",
    "keywords": "Class TriggeringDoorEventArgs Contains all informations before SCP-079 interacts with a door. Inheritance System.Object System.EventArgs InteractingDoorEventArgs TriggeringDoorEventArgs Inherited Members InteractingDoorEventArgs.Player InteractingDoorEventArgs.Door InteractingDoorEventArgs.IsAllowed System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TriggeringDoorEventArgs : InteractingDoorEventArgs Constructors | Improve this Doc View Source TriggeringDoorEventArgs(Player, DoorVariant, Single, Boolean) Initializes a new instance of the TriggeringDoorEventArgs class. Declaration public TriggeringDoorEventArgs(Player player, DoorVariant door, float auxiliaryPowerCost, bool isAllowed = true) Parameters Type Name Description Player player Interactables.Interobjects.DoorUtils.DoorVariant door System.Single auxiliaryPowerCost System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to trigger a door through SCP-079. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TriggeringTeslaEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TriggeringTeslaEventArgs.html",
    "title": "Class TriggeringTeslaEventArgs | EXILED Docs",
    "keywords": "Class TriggeringTeslaEventArgs Contains all informations before triggering a tesla. Inheritance System.Object System.EventArgs TriggeringTeslaEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TriggeringTeslaEventArgs : EventArgs Constructors | Improve this Doc View Source TriggeringTeslaEventArgs(Player, Boolean, Boolean) Initializes a new instance of the TriggeringTeslaEventArgs class. Declaration public TriggeringTeslaEventArgs(Player player, bool isInHurtingRange, bool isTriggerable = true) Parameters Type Name Description Player player System.Boolean isInHurtingRange System.Boolean isTriggerable Properties | Improve this Doc View Source IsInHurtingRange Gets or sets a value indicating whether or not the player is in hurting range. Declaration public bool IsInHurtingRange { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTriggerable Gets or sets a value indicating whether or not the tesla is going to be activated. Declaration public bool IsTriggerable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who triggered the tesla. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.TryingNotToCryEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.TryingNotToCryEventArgs.html",
    "title": "Class TryingNotToCryEventArgs | EXILED Docs",
    "keywords": "Class TryingNotToCryEventArgs Contains all informations before SCP-096 tries not to cry. Inheritance System.Object System.EventArgs TryingNotToCryEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class TryingNotToCryEventArgs : EventArgs Constructors | Improve this Doc View Source TryingNotToCryEventArgs(Scp096, Player, DoorVariant, Boolean) Initializes a new instance of the TryingNotToCryEventArgs class. Declaration public TryingNotToCryEventArgs(Scp096 scp096, Player player, DoorVariant door, bool isAllowed = true) Parameters Type Name Description PlayableScps.Scp096 scp096 Player player Interactables.Interobjects.DoorUtils.DoorVariant door System.Boolean isAllowed Properties | Improve this Doc View Source Door Gets the Door to be cried on. Declaration public Door Door { get; } Property Value Type Description Door | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can try not to cry. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096 Scp096 { get; } Property Value Type Description PlayableScps.Scp096 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UnloadingWeaponEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UnloadingWeaponEventArgs.html",
    "title": "Class UnloadingWeaponEventArgs | EXILED Docs",
    "keywords": "Class UnloadingWeaponEventArgs Contains all information before a player's weapon is unloaded. Inheritance System.Object System.EventArgs UnloadingWeaponEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UnloadingWeaponEventArgs : EventArgs Constructors | Improve this Doc View Source UnloadingWeaponEventArgs(Player, Boolean) Initializes a new instance of the UnloadingWeaponEventArgs class. Declaration public UnloadingWeaponEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being unloaded. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon can be unloaded. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's unloading the weapon. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UnlockingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UnlockingGeneratorEventArgs.html",
    "title": "Class UnlockingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class UnlockingGeneratorEventArgs Contains all informations before a generator is unlocked. Inheritance System.Object System.EventArgs UnlockingGeneratorEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UnlockingGeneratorEventArgs : EventArgs Constructors | Improve this Doc View Source UnlockingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the UnlockingGeneratorEventArgs class. Declaration public UnlockingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the generator that is going to be unlocked. Declaration public Scp079Generator Generator { get; } Property Value Type Description MapGeneration.Distributors.Scp079Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the generator can be unlocked. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's unlocking the generator. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UpgradingInventoryItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UpgradingInventoryItemEventArgs.html",
    "title": "Class UpgradingInventoryItemEventArgs | EXILED Docs",
    "keywords": "Class UpgradingInventoryItemEventArgs Contains all information before SCP-914 upgrades an item. Inheritance System.Object System.EventArgs UpgradingInventoryItemEventArgs UpgradingItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UpgradingInventoryItemEventArgs : EventArgs Constructors | Improve this Doc View Source UpgradingInventoryItemEventArgs(Player, ItemBase, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingInventoryItemEventArgs class. Declaration public UpgradingInventoryItemEventArgs(Player player, ItemBase item, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ItemBase item Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the upgrade is successful. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets a list of items to be upgraded inside SCP-914. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source KnobSetting Gets or sets SCP-914 working knob setting. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source Player Gets the Player who owns the item to be upgraded. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp914 Gets the Scp914.Scp914Controller instance. Declaration public Scp914Controller Scp914 { get; } Property Value Type Description Scp914.Scp914Controller Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UpgradingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UpgradingItemEventArgs.html",
    "title": "Class UpgradingItemEventArgs | EXILED Docs",
    "keywords": "Class UpgradingItemEventArgs Contains all information before SCP-914 upgrades an item. Inheritance System.Object System.EventArgs UpgradingItemEventArgs UpgradingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UpgradingItemEventArgs : EventArgs Constructors | Improve this Doc View Source UpgradingItemEventArgs(ItemPickupBase, Vector3, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingItemEventArgs class. Declaration public UpgradingItemEventArgs(ItemPickupBase item, Vector3 newPos, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase item UnityEngine.Vector3 newPos Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the upgrade is successful. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets a list of items to be upgraded inside SCP-914. Declaration public Pickup Item { get; } Property Value Type Description Pickup | Improve this Doc View Source KnobSetting Gets or sets SCP-914 working knob setting. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source OutputPosition Gets or sets the position the item will be output to. Declaration public Vector3 OutputPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Scp914 Gets the Scp914.Scp914Controller instance. Declaration public Scp914Controller Scp914 { get; } Property Value Type Description Scp914.Scp914Controller Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UpgradingPlayerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UpgradingPlayerEventArgs.html",
    "title": "Class UpgradingPlayerEventArgs | EXILED Docs",
    "keywords": "Class UpgradingPlayerEventArgs Contains all information before SCP-914 upgrades a player. Inheritance System.Object System.EventArgs UpgradingPlayerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UpgradingPlayerEventArgs : EventArgs Constructors | Improve this Doc View Source UpgradingPlayerEventArgs(Player, Boolean, Boolean, Scp914KnobSetting, Vector3) Initializes a new instance of the UpgradingPlayerEventArgs class. Declaration public UpgradingPlayerEventArgs(Player player, bool upgradeItems, bool heldOnly, Scp914KnobSetting setting, Vector3 moveVector) Parameters Type Name Description Player player The Player being upgraded. System.Boolean upgradeItems System.Boolean heldOnly Scp914.Scp914KnobSetting setting The Scp914.Scp914KnobSetting being used. UnityEngine.Vector3 moveVector Properties | Improve this Doc View Source HeldOnly Gets or sets a value indicating whether or not only held items are upgraded. Declaration public bool HeldOnly { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the event can continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobSetting Gets or sets the Scp914.Scp914KnobSetting being used. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source OutputPosition Gets or sets the location the player will be teleported to. Declaration public Vector3 OutputPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Player Gets the player being upgraded. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source UpgradeItems Gets or sets a value indicating whether or not items will be upgraded. Declaration public bool UpgradeItems { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UsedItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UsedItemEventArgs.html",
    "title": "Class UsedItemEventArgs | EXILED Docs",
    "keywords": "Class UsedItemEventArgs Contains all information after a player used an item. Inheritance System.Object System.EventArgs UsedItemEventArgs UsingItemEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UsedItemEventArgs : EventArgs Constructors | Improve this Doc View Source UsedItemEventArgs(Player, UsableItem) Initializes a new instance of the UsedItemEventArgs class. Declaration public UsedItemEventArgs(Player player, UsableItem item) Parameters Type Name Description Player player InventorySystem.Items.Usables.UsableItem item Properties | Improve this Doc View Source Item Gets the item that the player used. Declaration public Usable Item { get; } Property Value Type Description Usable | Improve this Doc View Source Player Gets the player who used the item. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UsingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UsingItemEventArgs.html",
    "title": "Class UsingItemEventArgs | EXILED Docs",
    "keywords": "Class UsingItemEventArgs Contains all information before a player uses an item. Inheritance System.Object System.EventArgs UsedItemEventArgs UsingItemEventArgs CancellingItemUseEventArgs Inherited Members UsedItemEventArgs.Player UsedItemEventArgs.Item System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UsingItemEventArgs : UsedItemEventArgs Constructors | Improve this Doc View Source UsingItemEventArgs(Player, UsableItem, Single) Initializes a new instance of the UsingItemEventArgs class. Declaration public UsingItemEventArgs(Player player, UsableItem item, float cooldown) Parameters Type Name Description Player player The player who's going to use the item. InventorySystem.Items.Usables.UsableItem item System.Single cooldown Properties | Improve this Doc View Source Cooldown Gets or sets the item cooldown. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can use the item. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UsingMicroHIDEnergyEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UsingMicroHIDEnergyEventArgs.html",
    "title": "Class UsingMicroHIDEnergyEventArgs | EXILED Docs",
    "keywords": "Class UsingMicroHIDEnergyEventArgs Contains all information before MicroHID energy is changed. Inheritance System.Object System.EventArgs UsingMicroHIDEnergyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UsingMicroHIDEnergyEventArgs : EventArgs Constructors | Improve this Doc View Source UsingMicroHIDEnergyEventArgs(Player, MicroHIDItem, HidState, Single, Boolean) Initializes a new instance of the UsingMicroHIDEnergyEventArgs class. Declaration public UsingMicroHIDEnergyEventArgs(Player player, MicroHIDItem microHIDitem, HidState currentState, float drain, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.MicroHID.MicroHIDItem microHIDitem InventorySystem.Items.MicroHID.HidState currentState System.Single drain System.Boolean isAllowed Properties | Improve this Doc View Source CurrentState Gets the current state of the MicroHID. Declaration public HidState CurrentState { get; } Property Value Type Description InventorySystem.Items.MicroHID.HidState | Improve this Doc View Source Drain Gets or sets the MicroHID energy drain. Declaration public float Drain { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the MicroHID energy can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MicroHID Gets the MicroHID instance. Declaration public MicroHid MicroHID { get; } Property Value Type Description MicroHid | Improve this Doc View Source Player Gets the player who's using the MicroHID. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.UsingRadioBatteryEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.UsingRadioBatteryEventArgs.html",
    "title": "Class UsingRadioBatteryEventArgs | EXILED Docs",
    "keywords": "Class UsingRadioBatteryEventArgs Contains all informations before radio battery charge is changed. Inheritance System.Object System.EventArgs UsingRadioBatteryEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class UsingRadioBatteryEventArgs : EventArgs Constructors | Improve this Doc View Source UsingRadioBatteryEventArgs(RadioItem, Player, Single, Boolean) Initializes a new instance of the UsingRadioBatteryEventArgs class. Declaration public UsingRadioBatteryEventArgs(RadioItem radio, Player player, float drain, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Radio.RadioItem radio Player player System.Single drain System.Boolean isAllowed Properties | Improve this Doc View Source Drain Gets or sets the radio battery drain per second. Declaration public float Drain { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the radio battery charge can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's using the radio. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Radio Gets the Radio which is being used. Declaration public Radio Radio { get; } Property Value Type Description Radio Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.VerifiedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.VerifiedEventArgs.html",
    "title": "Class VerifiedEventArgs | EXILED Docs",
    "keywords": "Class VerifiedEventArgs Contains all informations after the server verifies a player. Inheritance System.Object System.EventArgs VerifiedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class VerifiedEventArgs : EventArgs Constructors | Improve this Doc View Source VerifiedEventArgs(Player) Initializes a new instance of the VerifiedEventArgs class. Declaration public VerifiedEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the verified player. Declaration public Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.VoiceChattingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.VoiceChattingEventArgs.html",
    "title": "Class VoiceChattingEventArgs | EXILED Docs",
    "keywords": "Class VoiceChattingEventArgs Contains all information after a player presses the voicechat key. Inheritance System.Object System.EventArgs VoiceChattingEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class VoiceChattingEventArgs : EventArgs Constructors | Improve this Doc View Source VoiceChattingEventArgs(Player, Radio, DissonanceUserSetup, Boolean, Boolean) Initializes a new instance of the VoiceChattingEventArgs class. Declaration public VoiceChattingEventArgs(Player player, Radio radio, DissonanceUserSetup dissonanceUserSetup, bool isVoiceChatting, bool isAllowed = true) Parameters Type Name Description Player player Radio radio Assets._Scripts.Dissonance.DissonanceUserSetup dissonanceUserSetup System.Boolean isVoiceChatting System.Boolean isAllowed Properties | Improve this Doc View Source DissonanceUserSetup Gets the Radio 's DissonanceUserSetup. Declaration public DissonanceUserSetup DissonanceUserSetup { get; } Property Value Type Description Assets._Scripts.Dissonance.DissonanceUserSetup | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can voicechat. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVoiceChatting Gets a value indicating whether or not the player is voicechatting. Declaration public bool IsVoiceChatting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's voicechatting. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Radio Gets the player's Radio component. Declaration public Radio Radio { get; } Property Value Type Description Radio Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.WalkingOnSinkholeEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.WalkingOnSinkholeEventArgs.html",
    "title": "Class WalkingOnSinkholeEventArgs | EXILED Docs",
    "keywords": "Class WalkingOnSinkholeEventArgs Contains all information before a player walks over a sinkhole. Inheritance System.Object System.EventArgs WalkingOnSinkholeEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class WalkingOnSinkholeEventArgs : EventArgs Constructors | Improve this Doc View Source WalkingOnSinkholeEventArgs(Player, SinkholeEnvironmentalHazard, Boolean) Initializes a new instance of the WalkingOnSinkholeEventArgs class. Declaration public WalkingOnSinkholeEventArgs(Player player, SinkholeEnvironmentalHazard sinkhole, bool isAllowed = true) Parameters Type Name Description Player player SinkholeEnvironmentalHazard sinkhole System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player's data can be synced with the server. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player walking on the sinkhole. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Sinkhole Gets the sinkhole that the player is walking on. Declaration public SinkholeEnvironmentalHazard Sinkhole { get; } Property Value Type Description SinkholeEnvironmentalHazard Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.WalkingOnTantrumEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.WalkingOnTantrumEventArgs.html",
    "title": "Class WalkingOnTantrumEventArgs | EXILED Docs",
    "keywords": "Class WalkingOnTantrumEventArgs Contains all information before a player walks over a tantrum. Inheritance System.Object System.EventArgs WalkingOnTantrumEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs Assembly : Exiled.Events.dll Syntax public class WalkingOnTantrumEventArgs : EventArgs Constructors | Improve this Doc View Source WalkingOnTantrumEventArgs(Player, TantrumEnvironmentalHazard, Boolean) Initializes a new instance of the WalkingOnTantrumEventArgs class. Declaration public WalkingOnTantrumEventArgs(Player player, TantrumEnvironmentalHazard tantrum, bool isAllowed = true) Parameters Type Name Description Player player TantrumEnvironmentalHazard tantrum System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player's data can be synced with the server. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's walking on the tantrum. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Tantrum Gets the tantrum that the player is walking on. Declaration public TantrumEnvironmentalHazard Tantrum { get; } Property Value Type Description TantrumEnvironmentalHazard Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Events.CustomEventHandler.html": {
    "href": "api/Exiled.Events.Events.CustomEventHandler.html",
    "title": "Delegate Events.CustomEventHandler | EXILED Docs",
    "keywords": "Delegate Events.CustomEventHandler The custom System.EventHandler delegate, with empty parameters. Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public delegate void CustomEventHandler(); Extension Methods Event.InvokeSafely(Events.CustomEventHandler) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Events.CustomEventHandler-1.html": {
    "href": "api/Exiled.Events.Events.CustomEventHandler-1.html",
    "title": "Delegate Events.CustomEventHandler<TEventArgs> | EXILED Docs",
    "keywords": "Delegate Events.CustomEventHandler<TEventArgs> The custom System.EventHandler delegate. Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public delegate void CustomEventHandler<TEventArgs>(TEventArgs ev) where TEventArgs : EventArgs; Parameters Type Name Description TEventArgs ev The System.EventHandler`1 instance. Type Parameters Name Description TEventArgs The System.EventHandler`1 type. Extension Methods Event.InvokeSafely<T>(Events.CustomEventHandler<T>, T) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Events.html": {
    "href": "api/Exiled.Events.Events.html",
    "title": "Class Events | EXILED Docs",
    "keywords": "Class Events Patch and unpatch events into the game. Inheritance System.Object Plugin < Config > Events Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public sealed class Events : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source DisabledPatchesHashSet Gets a set of types and methods for which EXILED patches should not be run. Declaration public static HashSet<MethodBase> DisabledPatchesHashSet { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Reflection.MethodBase > | Improve this Doc View Source Harmony Gets the instance. Declaration public Harmony Harmony { get; } Property Value Type Description Harmony | Improve this Doc View Source Instance Gets the plugin instance. Declaration public static Events Instance { get; } Property Value Type Description Events | Improve this Doc View Source Priority Declaration public override PluginPriority Priority { get; } Property Value Type Description PluginPriority Overrides Exiled.API.Features.Plugin<Exiled.Events.Config>.Priority Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.Events.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.Events.Config>.OnEnabled() | Improve this Doc View Source Patch() Patches all events. Declaration public void Patch() | Improve this Doc View Source ReloadDisabledPatches() Checks the DisabledPatchesHashSet list and un-patches any methods that have been defined there. Once un-patching has been done, they can be patched by plugins, but will not be re-patchable by Exiled until a server reboot. Declaration public void ReloadDisabledPatches() | Improve this Doc View Source Unpatch() Unpatches all events. Declaration public void Unpatch() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods PathExtensions.GetPath(IPlugin<IConfig>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Extensions.Event.html": {
    "href": "api/Exiled.Events.Extensions.Event.html",
    "title": "Class Event | EXILED Docs",
    "keywords": "Class Event A set of tools to execute events safely and without breaking other plugins. Inheritance System.Object Event Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Extensions Assembly : Exiled.Events.dll Syntax public static class Event Methods | Improve this Doc View Source InvokeSafely(Events.CustomEventHandler) Executes all Events.CustomEventHandler listeners safely. Declaration public static void InvokeSafely(this Events.CustomEventHandler ev) Parameters Type Name Description Events.CustomEventHandler ev Source event. Exceptions Type Condition System.ArgumentNullException Event is null. | Improve this Doc View Source InvokeSafely<T>(Events.CustomEventHandler<T>, T) Executes all Events.CustomEventHandler<TEventArgs> listeners safely. Declaration public static void InvokeSafely<T>(this Events.CustomEventHandler<T> ev, T arg) where T : EventArgs Parameters Type Name Description Events.CustomEventHandler <T> ev Source event. T arg Event arg. Type Parameters Name Description T Event arg type. Exceptions Type Condition System.ArgumentNullException Event or its arg is null."
  },
  "api/Exiled.Events.Extensions.html": {
    "href": "api/Exiled.Events.Extensions.html",
    "title": "Namespace Exiled.Events.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Extensions Classes Event A set of tools to execute events safely and without breaking other plugins."
  },
  "api/Exiled.Events.Handlers.Cassie.html": {
    "href": "api/Exiled.Events.Handlers.Cassie.html",
    "title": "Class Cassie | EXILED Docs",
    "keywords": "Class Cassie Cassie related events. Inheritance System.Object Cassie Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Cassie Methods | Improve this Doc View Source OnSendingCassieMessage(SendingCassieMessageEventArgs) Called before sending a cassie message. Declaration public static void OnSendingCassieMessage(SendingCassieMessageEventArgs ev) Parameters Type Name Description SendingCassieMessageEventArgs ev The SendingCassieMessageEventArgs instance. Events | Improve this Doc View Source SendingCassieMessage Invoked before sending a cassie message. Declaration public static event Events.CustomEventHandler<SendingCassieMessageEventArgs> SendingCassieMessage Event Type Type Description Events.CustomEventHandler < SendingCassieMessageEventArgs >"
  },
  "api/Exiled.Events.Handlers.html": {
    "href": "api/Exiled.Events.Handlers.html",
    "title": "Namespace Exiled.Events.Handlers | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Handlers Classes Cassie Cassie related events. Item Item related events. Map Map related events. Player Player related events. Scp049 SCP-049 related events. Scp079 SCP-079 related events. Scp096 SCP-096 related events. Scp106 SCP-106 related events. Scp173 SCP-173 related events. Scp914 Handles SCP-914 related events. Server Server related events. Warhead Handles warhead related events."
  },
  "api/Exiled.Events.Handlers.Item.html": {
    "href": "api/Exiled.Events.Handlers.Item.html",
    "title": "Class Item | EXILED Docs",
    "keywords": "Class Item Item related events. Inheritance System.Object Item Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Item Methods | Improve this Doc View Source OnChangingAttachments(ChangingAttachmentsEventArgs) Called before item attachments are changed. Declaration public static void OnChangingAttachments(ChangingAttachmentsEventArgs ev) Parameters Type Name Description ChangingAttachmentsEventArgs ev The ChangingAttachmentsEventArgs instance. | Improve this Doc View Source OnChangingDurability(ChangingDurabilityEventArgs) Called before the durability of an item is changed. Declaration public static void OnChangingDurability(ChangingDurabilityEventArgs ev) Parameters Type Name Description ChangingDurabilityEventArgs ev The ChangingDurabilityEventArgs instance. Events | Improve this Doc View Source ChangingAttachments Invoked before item attachments are changed. Declaration public static event Events.CustomEventHandler<ChangingAttachmentsEventArgs> ChangingAttachments Event Type Type Description Events.CustomEventHandler < ChangingAttachmentsEventArgs > | Improve this Doc View Source ChangingDurability Invoked before the durability of an item is changed. Declaration public static event Events.CustomEventHandler<ChangingDurabilityEventArgs> ChangingDurability Event Type Type Description Events.CustomEventHandler < ChangingDurabilityEventArgs >"
  },
  "api/Exiled.Events.Handlers.Map.html": {
    "href": "api/Exiled.Events.Handlers.Map.html",
    "title": "Class Map | EXILED Docs",
    "keywords": "Class Map Map related events. Inheritance System.Object Map Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Map Methods | Improve this Doc View Source OnAnnouncingDecontamination(AnnouncingDecontaminationEventArgs) Called before announcing the light containment zone decontamination. Declaration public static void OnAnnouncingDecontamination(AnnouncingDecontaminationEventArgs ev) Parameters Type Name Description AnnouncingDecontaminationEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnAnnouncingNtfEntrance(AnnouncingNtfEntranceEventArgs) Called before announcing the NTF entrance. Declaration public static void OnAnnouncingNtfEntrance(AnnouncingNtfEntranceEventArgs ev) Parameters Type Name Description AnnouncingNtfEntranceEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnAnnouncingScpTermination(AnnouncingScpTerminationEventArgs) Called before announcing an SCP termination. Declaration public static void OnAnnouncingScpTermination(AnnouncingScpTerminationEventArgs ev) Parameters Type Name Description AnnouncingScpTerminationEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnChangingIntoGrenade(ChangingIntoGrenadeEventArgs) Called before the server changes a Pickup into a live Grenade when hit by an explosion. Declaration public static void OnChangingIntoGrenade(ChangingIntoGrenadeEventArgs ev) Parameters Type Name Description ChangingIntoGrenadeEventArgs ev The ChangingIntoGrenadeEventArgs instance. | Improve this Doc View Source OnDamagingWindow(DamagingWindowEventArgs) Called before damaging a window. Declaration public static void OnDamagingWindow(DamagingWindowEventArgs ev) Parameters Type Name Description DamagingWindowEventArgs ev The DamagingWindowEventArgs instance. | Improve this Doc View Source OnDecontaminating(DecontaminatingEventArgs) Called before decontaminating the light containment zone. Declaration public static void OnDecontaminating(DecontaminatingEventArgs ev) Parameters Type Name Description DecontaminatingEventArgs ev The DecontaminatingEventArgs instance. | Improve this Doc View Source OnExplodingGrenade(ExplodingGrenadeEventArgs) Called before a grenade explodes. Declaration public static void OnExplodingGrenade(ExplodingGrenadeEventArgs ev) Parameters Type Name Description ExplodingGrenadeEventArgs ev The ExplodingGrenadeEventArgs instance. | Improve this Doc View Source OnGenerated() Called after the map is generated. Declaration public static void OnGenerated() | Improve this Doc View Source OnGeneratorActivated(GeneratorActivatedEventArgs) Called after a MapGeneration.Distributors.Scp079Generator has been activated. Declaration public static void OnGeneratorActivated(GeneratorActivatedEventArgs ev) Parameters Type Name Description GeneratorActivatedEventArgs ev The GeneratorActivatedEventArgs instance. | Improve this Doc View Source OnPlacingBlood(PlacingBloodEventArgs) Called before placing bloods. Declaration public static void OnPlacingBlood(PlacingBloodEventArgs ev) Parameters Type Name Description PlacingBloodEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnPlacingBulletHole(PlacingBulletHole) Called before placing a decal. Declaration public static void OnPlacingBulletHole(PlacingBulletHole ev) Parameters Type Name Description PlacingBulletHole ev The PlacingBulletHole instance. | Improve this Doc View Source OnSpawningItem(SpawningItemEventArgs) Called before an item is spawned. Declaration public static void OnSpawningItem(SpawningItemEventArgs ev) Parameters Type Name Description SpawningItemEventArgs ev The SpawningItemEventArgs instance. Events | Improve this Doc View Source AnnouncingDecontamination Invoked before announcing the light containment zone decontamination. Declaration public static event Events.CustomEventHandler<AnnouncingDecontaminationEventArgs> AnnouncingDecontamination Event Type Type Description Events.CustomEventHandler < AnnouncingDecontaminationEventArgs > | Improve this Doc View Source AnnouncingNtfEntrance Invoked before announcing the NTF entrance. Declaration public static event Events.CustomEventHandler<AnnouncingNtfEntranceEventArgs> AnnouncingNtfEntrance Event Type Type Description Events.CustomEventHandler < AnnouncingNtfEntranceEventArgs > | Improve this Doc View Source AnnouncingScpTermination Invoked before announcing an SCP termination. Declaration public static event Events.CustomEventHandler<AnnouncingScpTerminationEventArgs> AnnouncingScpTermination Event Type Type Description Events.CustomEventHandler < AnnouncingScpTerminationEventArgs > | Improve this Doc View Source ChangingIntoGrenade Invoked before the server changes a pickup into a grenade, when triggered by an explosion. Declaration public static event Events.CustomEventHandler<ChangingIntoGrenadeEventArgs> ChangingIntoGrenade Event Type Type Description Events.CustomEventHandler < ChangingIntoGrenadeEventArgs > | Improve this Doc View Source DamagingWindow Invoked before damaging a window. Declaration public static event Events.CustomEventHandler<DamagingWindowEventArgs> DamagingWindow Event Type Type Description Events.CustomEventHandler < DamagingWindowEventArgs > | Improve this Doc View Source Decontaminating Invoked before decontaminating the light containment zone. Declaration public static event Events.CustomEventHandler<DecontaminatingEventArgs> Decontaminating Event Type Type Description Events.CustomEventHandler < DecontaminatingEventArgs > | Improve this Doc View Source ExplodingGrenade Invoked before a grenade explodes. Declaration public static event Events.CustomEventHandler<ExplodingGrenadeEventArgs> ExplodingGrenade Event Type Type Description Events.CustomEventHandler < ExplodingGrenadeEventArgs > | Improve this Doc View Source Generated Invoked after the map is generated. Declaration public static event Events.CustomEventHandler Generated Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source GeneratorActivated Invoked after a MapGeneration.Distributors.Scp079Generator has been activated. Declaration public static event Events.CustomEventHandler<GeneratorActivatedEventArgs> GeneratorActivated Event Type Type Description Events.CustomEventHandler < GeneratorActivatedEventArgs > | Improve this Doc View Source PlacingBlood Invoked before placing bloods. Declaration public static event Events.CustomEventHandler<PlacingBloodEventArgs> PlacingBlood Event Type Type Description Events.CustomEventHandler < PlacingBloodEventArgs > | Improve this Doc View Source PlacingBulletHole Invoked before placing decals. Declaration public static event Events.CustomEventHandler<PlacingBulletHole> PlacingBulletHole Event Type Type Description Events.CustomEventHandler < PlacingBulletHole > | Improve this Doc View Source SpawningItem Invoked before an item is spawned. Declaration public static event Events.CustomEventHandler<SpawningItemEventArgs> SpawningItem Event Type Type Description Events.CustomEventHandler < SpawningItemEventArgs >"
  },
  "api/Exiled.Events.Handlers.Player.html": {
    "href": "api/Exiled.Events.Handlers.Player.html",
    "title": "Class Player | EXILED Docs",
    "keywords": "Class Player Player related events. Inheritance System.Object Player Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Player Methods | Improve this Doc View Source OnActivatingGenerator(ActivatingGeneratorEventArgs) Called before a player inserts a workstation tablet into a generator. Declaration public static void OnActivatingGenerator(ActivatingGeneratorEventArgs ev) Parameters Type Name Description ActivatingGeneratorEventArgs ev The ActivatingGeneratorEventArgs instance. | Improve this Doc View Source OnActivatingWarheadPanel(ActivatingWarheadPanelEventArgs) Called before activating the warhead panel. Declaration public static void OnActivatingWarheadPanel(ActivatingWarheadPanelEventArgs ev) Parameters Type Name Description ActivatingWarheadPanelEventArgs ev The ActivatingWarheadPanelEventArgs instance. | Improve this Doc View Source OnActivatingWorkstation(ActivatingWorkstationEventArgs) Called before activating a workstation. Declaration public static void OnActivatingWorkstation(ActivatingWorkstationEventArgs ev) Parameters Type Name Description ActivatingWorkstationEventArgs ev The ActivatingWorkstation instance. | Improve this Doc View Source OnAimingDownSight(AimingDownSightEventArgs) Called before a player triggers an aim action. Declaration public static void OnAimingDownSight(AimingDownSightEventArgs ev) Parameters Type Name Description AimingDownSightEventArgs ev The AimingDownSightEventArgs instance. | Improve this Doc View Source OnBanned(BannedEventArgs) Called after a player has been banned from the server. Declaration public static void OnBanned(BannedEventArgs ev) Parameters Type Name Description BannedEventArgs ev The BannedEventArgs instance. | Improve this Doc View Source OnBanning(BanningEventArgs) Called before banning a player from the server. Declaration public static void OnBanning(BanningEventArgs ev) Parameters Type Name Description BanningEventArgs ev The BanningEventArgs instance. | Improve this Doc View Source OnCancellingItemUse(CancellingItemUseEventArgs) Called after a player has stopped the use of a medical item. Declaration public static void OnCancellingItemUse(CancellingItemUseEventArgs ev) Parameters Type Name Description CancellingItemUseEventArgs ev The CancellingItemUseEventArgs instance. | Improve this Doc View Source OnChangingGroup(ChangingGroupEventArgs) Called before changing a player's group. Declaration public static void OnChangingGroup(ChangingGroupEventArgs ev) Parameters Type Name Description ChangingGroupEventArgs ev The ChangingGroupEventArgs instance. | Improve this Doc View Source OnChangingIntercomMuteStatus(ChangingIntercomMuteStatusEventArgs) Called before an user's intercom mute status is changed. Declaration public static void OnChangingIntercomMuteStatus(ChangingIntercomMuteStatusEventArgs ev) Parameters Type Name Description ChangingIntercomMuteStatusEventArgs ev The ChangingIntercomMuteStatusEventArgs instance. | Improve this Doc View Source OnChangingItem(ChangingItemEventArgs) Called before a player's held item changes. Declaration public static void OnChangingItem(ChangingItemEventArgs ev) Parameters Type Name Description ChangingItemEventArgs ev The ChangingItemEventArgs instance. | Improve this Doc View Source OnChangingMicroHIDState(ChangingMicroHIDStateEventArgs) Called before a player's MicroHID state is changed. Declaration public static void OnChangingMicroHIDState(ChangingMicroHIDStateEventArgs ev) Parameters Type Name Description ChangingMicroHIDStateEventArgs ev The ChangingRadioPresetEventArgs instance. | Improve this Doc View Source OnChangingMoveState(ChangingMoveStateEventArgs) Called before a player changes move state. Declaration public static void OnChangingMoveState(ChangingMoveStateEventArgs ev) Parameters Type Name Description ChangingMoveStateEventArgs ev The ChangingMoveStateEventArgs instance. | Improve this Doc View Source OnChangingMuteStatus(ChangingMuteStatusEventArgs) Called before an user's mute status is changed. Declaration public static void OnChangingMuteStatus(ChangingMuteStatusEventArgs ev) Parameters Type Name Description ChangingMuteStatusEventArgs ev The ChangingMuteStatusEventArgs instance. | Improve this Doc View Source OnChangingRadioPreset(ChangingRadioPresetEventArgs) Called before a user's radio preset is changed. Declaration public static void OnChangingRadioPreset(ChangingRadioPresetEventArgs ev) Parameters Type Name Description ChangingRadioPresetEventArgs ev The ChangingRadioPresetEventArgs instance. | Improve this Doc View Source OnChangingRole(ChangingRoleEventArgs) Called before changing a player's role. Declaration public static void OnChangingRole(ChangingRoleEventArgs ev) Parameters Type Name Description ChangingRoleEventArgs ev The ChangingRoleEventArgs instance. Remarks If you set IsAllowed to false when Escape is true, tickets will still be given to the escapee's team even though they will 'fail' to escape. Use Escaping to block escapes instead. | Improve this Doc View Source OnChangingSpectatedPlayer(ChangingSpectatedPlayerEventArgs) Invoked after a player changes spectated player. Declaration public static void OnChangingSpectatedPlayer(ChangingSpectatedPlayerEventArgs ev) Parameters Type Name Description ChangingSpectatedPlayerEventArgs ev The ChangingSpectatedPlayerEventArgs instance. | Improve this Doc View Source OnClosingGenerator(ClosingGeneratorEventArgs) Called before a player closes a generator. Declaration public static void OnClosingGenerator(ClosingGeneratorEventArgs ev) Parameters Type Name Description ClosingGeneratorEventArgs ev The ClosingGeneratorEventArgs instance. | Improve this Doc View Source OnDamagingShootingTarget(DamagingShootingTargetEventArgs) Called before a player damages a shooting target. Declaration public static void OnDamagingShootingTarget(DamagingShootingTargetEventArgs ev) Parameters Type Name Description DamagingShootingTargetEventArgs ev The DamagingShootingTargetEventArgs instance. | Improve this Doc View Source OnDeactivatingWorkstation(DeactivatingWorkstationEventArgs) Called before deactivating a workstation. Declaration public static void OnDeactivatingWorkstation(DeactivatingWorkstationEventArgs ev) Parameters Type Name Description DeactivatingWorkstationEventArgs ev The DeactivatingWorkstationEventArgs instance. | Improve this Doc View Source OnDestroying(DestroyingEventArgs) Called before destroying a player. Declaration public static void OnDestroying(DestroyingEventArgs ev) Parameters Type Name Description DestroyingEventArgs ev The DestroyingEventArgs instance. | Improve this Doc View Source OnDied(DiedEventArgs) Called after a player died. Declaration public static void OnDied(DiedEventArgs ev) Parameters Type Name Description DiedEventArgs ev The DiedEventArgs instance. | Improve this Doc View Source OnDroppingAmmo(DroppingAmmoEventArgs) Called before dropping ammo. Declaration public static void OnDroppingAmmo(DroppingAmmoEventArgs ev) Parameters Type Name Description DroppingAmmoEventArgs ev The DroppingAmmoEventArgs instance. | Improve this Doc View Source OnDroppingItem(DroppingItemEventArgs) Called before dropping an item. Declaration public static void OnDroppingItem(DroppingItemEventArgs ev) Parameters Type Name Description DroppingItemEventArgs ev The DroppingItemEventArgs instance. | Improve this Doc View Source OnDroppingNull(DroppingNullEventArgs) Called before dropping a null item. Declaration public static void OnDroppingNull(DroppingNullEventArgs ev) Parameters Type Name Description DroppingNullEventArgs ev The DroppingNullEventArgs instance. | Improve this Doc View Source OnDryfiringWeapon(DryfiringWeaponEventArgs) Called before a player dryfires a weapon. Declaration public static void OnDryfiringWeapon(DryfiringWeaponEventArgs ev) Parameters Type Name Description DryfiringWeaponEventArgs ev The DryfiringWeaponEventArgs instance. | Improve this Doc View Source OnDying(DyingEventArgs) Called before a player dies. Declaration public static void OnDying(DyingEventArgs ev) Parameters Type Name Description DyingEventArgs ev DyingEventArgs instance. | Improve this Doc View Source OnEnteringFemurBreaker(EnteringFemurBreakerEventArgs) Called before a player enters the femur breaker. Declaration public static void OnEnteringFemurBreaker(EnteringFemurBreakerEventArgs ev) Parameters Type Name Description EnteringFemurBreakerEventArgs ev The EnteringFemurBreakerEventArgs instance. | Improve this Doc View Source OnEnteringPocketDimension(EnteringPocketDimensionEventArgs) Called before a player enters the pocket dimension. Declaration public static void OnEnteringPocketDimension(EnteringPocketDimensionEventArgs ev) Parameters Type Name Description EnteringPocketDimensionEventArgs ev The EnteringPocketDimensionEventArgs instance. | Improve this Doc View Source OnEscaping(EscapingEventArgs) Called before a player escapes. Declaration public static void OnEscaping(EscapingEventArgs ev) Parameters Type Name Description EscapingEventArgs ev The EscapingEventArgs instance. | Improve this Doc View Source OnEscapingPocketDimension(EscapingPocketDimensionEventArgs) Called before a player escapes the pocket dimension. Declaration public static void OnEscapingPocketDimension(EscapingPocketDimensionEventArgs ev) Parameters Type Name Description EscapingPocketDimensionEventArgs ev The EscapingPocketDimensionEventArgs instance. | Improve this Doc View Source OnFailingEscapePocketDimension(FailingEscapePocketDimensionEventArgs) Called before a player fails to escape the pocket dimension. Declaration public static void OnFailingEscapePocketDimension(FailingEscapePocketDimensionEventArgs ev) Parameters Type Name Description FailingEscapePocketDimensionEventArgs ev The FailingEscapePocketDimensionEventArgs instance. | Improve this Doc View Source OnFlippingCoin(FlippingCoinEventArgs) Called before a player flips a coin. Declaration public static void OnFlippingCoin(FlippingCoinEventArgs ev) Parameters Type Name Description FlippingCoinEventArgs ev The FlippingCoinEventArgs instance. | Improve this Doc View Source OnHandcuffing(HandcuffingEventArgs) Called before handcuffing a player. Declaration public static void OnHandcuffing(HandcuffingEventArgs ev) Parameters Type Name Description HandcuffingEventArgs ev The HandcuffingEventArgs instance. | Improve this Doc View Source OnHurting(HurtingEventArgs) Called before hurting a player. Declaration public static void OnHurting(HurtingEventArgs ev) Parameters Type Name Description HurtingEventArgs ev The HurtingEventArgs instance. | Improve this Doc View Source OnInteracted(InteractedEventArgs) Called after a player interacted with something. Declaration public static void OnInteracted(InteractedEventArgs ev) Parameters Type Name Description InteractedEventArgs ev The InteractedEventArgs instance. | Improve this Doc View Source OnInteractingDoor(InteractingDoorEventArgs) Called before a player interacts with a door. Declaration public static void OnInteractingDoor(InteractingDoorEventArgs ev) Parameters Type Name Description InteractingDoorEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnInteractingElevator(InteractingElevatorEventArgs) Called before a player interacts with an elevator. Declaration public static void OnInteractingElevator(InteractingElevatorEventArgs ev) Parameters Type Name Description InteractingElevatorEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnInteractingLocker(InteractingLockerEventArgs) Called before a player interacts with a locker. Declaration public static void OnInteractingLocker(InteractingLockerEventArgs ev) Parameters Type Name Description InteractingLockerEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnInteractingShootingTarget(InteractingShootingTargetEventArgs) Called before a player interacts with a shooting target. Declaration public static void OnInteractingShootingTarget(InteractingShootingTargetEventArgs ev) Parameters Type Name Description InteractingShootingTargetEventArgs ev The InteractingShootingTargetEventArgs instance. | Improve this Doc View Source OnIntercomSpeaking(IntercomSpeakingEventArgs) Called before a player begins speaking to the intercom. Declaration public static void OnIntercomSpeaking(IntercomSpeakingEventArgs ev) Parameters Type Name Description IntercomSpeakingEventArgs ev The IntercomSpeakingEventArgs instance. | Improve this Doc View Source OnItemUsed(UsedItemEventArgs) Called after a player used a medical item. Declaration public static void OnItemUsed(UsedItemEventArgs ev) Parameters Type Name Description UsedItemEventArgs ev The UsedItemEventArgs instance. | Improve this Doc View Source OnJoined(JoinedEventArgs) Called after a player has joined the server. Declaration public static void OnJoined(JoinedEventArgs ev) Parameters Type Name Description JoinedEventArgs ev The JoinedEventArgs instance. | Improve this Doc View Source OnJumping(JumpingEventArgs) Called before a player jumps. Declaration public static void OnJumping(JumpingEventArgs ev) Parameters Type Name Description JumpingEventArgs ev The JumpingEventArgs instance. | Improve this Doc View Source OnKicked(KickedEventArgs) Called after a player has been kicked from the server. Declaration public static void OnKicked(KickedEventArgs ev) Parameters Type Name Description KickedEventArgs ev The KickedEventArgs instance. | Improve this Doc View Source OnKicking(KickingEventArgs) Called before kicking a player from the server. Declaration public static void OnKicking(KickingEventArgs ev) Parameters Type Name Description KickingEventArgs ev The KickingEventArgs instance. | Improve this Doc View Source OnLeft(LeftEventArgs) Called after a player has left the server. Declaration public static void OnLeft(LeftEventArgs ev) Parameters Type Name Description LeftEventArgs ev The LeftEventArgs instance. | Improve this Doc View Source OnMakingNoise(MakingNoiseEventArgs) Called before a player makes noise. Declaration public static void OnMakingNoise(MakingNoiseEventArgs ev) Parameters Type Name Description MakingNoiseEventArgs ev The MakingNoiseEventArgs instance. | Improve this Doc View Source OnOpeningGenerator(OpeningGeneratorEventArgs) Called before a player opens a generator. Declaration public static void OnOpeningGenerator(OpeningGeneratorEventArgs ev) Parameters Type Name Description OpeningGeneratorEventArgs ev The OpeningGeneratorEventArgs instance. | Improve this Doc View Source OnPickingUpAmmo(PickingUpAmmoEventArgs) Called before a player picks up ammo. Declaration public static void OnPickingUpAmmo(PickingUpAmmoEventArgs ev) Parameters Type Name Description PickingUpAmmoEventArgs ev The PickingUpAmmoEventArgs instance. | Improve this Doc View Source OnPickingUpArmor(PickingUpArmorEventArgs) Called before a player picks up armor. Declaration public static void OnPickingUpArmor(PickingUpArmorEventArgs ev) Parameters Type Name Description PickingUpArmorEventArgs ev The PickingUpArmorEventArgs instance. | Improve this Doc View Source OnPickingUpItem(PickingUpItemEventArgs) Called before a user picks up an item. Declaration public static void OnPickingUpItem(PickingUpItemEventArgs ev) Parameters Type Name Description PickingUpItemEventArgs ev The PickingUpItemEventArgs instance. | Improve this Doc View Source OnPreAuthenticating(PreAuthenticatingEventArgs) Called before pre-authenticating a player. Declaration public static void OnPreAuthenticating(PreAuthenticatingEventArgs ev) Parameters Type Name Description PreAuthenticatingEventArgs ev The PreAuthenticatingEventArgs instance. | Improve this Doc View Source OnProcessingHotkey(ProcessingHotkeyEventArgs) Called before processing a hotkey. Declaration public static void OnProcessingHotkey(ProcessingHotkeyEventArgs ev) Parameters Type Name Description ProcessingHotkeyEventArgs ev The ProcessingHotkeyEventArgs instance. | Improve this Doc View Source OnReceivingEffect(ReceivingEffectEventArgs) Called before a player receives a status effect. Declaration public static void OnReceivingEffect(ReceivingEffectEventArgs ev) Parameters Type Name Description ReceivingEffectEventArgs ev The ReceivingEffectEventArgs instance. | Improve this Doc View Source OnReloadingWeapon(ReloadingWeaponEventArgs) Called before a player reloads a weapon. Declaration public static void OnReloadingWeapon(ReloadingWeaponEventArgs ev) Parameters Type Name Description ReloadingWeaponEventArgs ev The ReloadingWeaponEventArgs instance. | Improve this Doc View Source OnRemovingHandcuffs(RemovingHandcuffsEventArgs) Called before freeing a handcuffed player. Declaration public static void OnRemovingHandcuffs(RemovingHandcuffsEventArgs ev) Parameters Type Name Description RemovingHandcuffsEventArgs ev The RemovingHandcuffsEventArgs instance. | Improve this Doc View Source OnShooting(ShootingEventArgs) Called before a player shoots a weapon. Declaration public static void OnShooting(ShootingEventArgs ev) Parameters Type Name Description ShootingEventArgs ev The ShootingEventArgs instance. | Improve this Doc View Source OnShot(ShotEventArgs) Called after a player shoots a weapon. Declaration public static void OnShot(ShotEventArgs ev) Parameters Type Name Description ShotEventArgs ev The ShotEventArgs instance. | Improve this Doc View Source OnSpawning(SpawningEventArgs) Called before spawning a player. Declaration public static void OnSpawning(SpawningEventArgs ev) Parameters Type Name Description SpawningEventArgs ev The SpawningEventArgs instance. | Improve this Doc View Source OnSpawningRagdoll(SpawningRagdollEventArgs) Called before spawning a player's ragdoll. Declaration public static void OnSpawningRagdoll(SpawningRagdollEventArgs ev) Parameters Type Name Description SpawningRagdollEventArgs ev The SpawningRagdollEventArgs instance. | Improve this Doc View Source OnStoppingGenerator(StoppingGeneratorEventArgs) Called before a player ejects the workstation tablet out of a generator. Declaration public static void OnStoppingGenerator(StoppingGeneratorEventArgs ev) Parameters Type Name Description StoppingGeneratorEventArgs ev The StoppingGeneratorEventArgs instance. | Improve this Doc View Source OnSyncingData(SyncingDataEventArgs) Called before syncing player's data. Declaration public static void OnSyncingData(SyncingDataEventArgs ev) Parameters Type Name Description SyncingDataEventArgs ev The SyncingDataEventArgs instance. | Improve this Doc View Source OnThrowingItem(ThrowingItemEventArgs) Called before throwing a grenade. Declaration public static void OnThrowingItem(ThrowingItemEventArgs ev) Parameters Type Name Description ThrowingItemEventArgs ev The ThrowingItemEventArgs instance. | Improve this Doc View Source OnTogglingFlashlight(TogglingFlashlightEventArgs) Called before a player toggles the flashlight. Declaration public static void OnTogglingFlashlight(TogglingFlashlightEventArgs ev) Parameters Type Name Description TogglingFlashlightEventArgs ev The TogglingFlashlightEventArgs instance. | Improve this Doc View Source OnTogglingNoClip(TogglingNoClipEventArgs) Called before a player toggles the NoClip mode. Declaration public static void OnTogglingNoClip(TogglingNoClipEventArgs ev) Parameters Type Name Description TogglingNoClipEventArgs ev The TogglingNoClipEventArgs instance. | Improve this Doc View Source OnTogglingWeaponFlashlight(TogglingWeaponFlashlightEventArgs) Called before a player toggles the weapon's flashlight. Declaration public static void OnTogglingWeaponFlashlight(TogglingWeaponFlashlightEventArgs ev) Parameters Type Name Description TogglingWeaponFlashlightEventArgs ev The TogglingWeaponFlashlightEventArgs instance. | Improve this Doc View Source OnTransmitting(TransmittingEventArgs) Invoked after a player presses the transmission key. Declaration public static void OnTransmitting(TransmittingEventArgs ev) Parameters Type Name Description TransmittingEventArgs ev The TransmittingEventArgs instance. | Improve this Doc View Source OnTriggeringTesla(TriggeringTeslaEventArgs) Called before a player triggers a tesla. Declaration public static void OnTriggeringTesla(TriggeringTeslaEventArgs ev) Parameters Type Name Description TriggeringTeslaEventArgs ev The TriggeringTeslaEventArgs instance. | Improve this Doc View Source OnUnloadingWeapon(UnloadingWeaponEventArgs) Called before a player unloads a weapon. Declaration public static void OnUnloadingWeapon(UnloadingWeaponEventArgs ev) Parameters Type Name Description UnloadingWeaponEventArgs ev The UnloadingWeaponEventArgs instance. | Improve this Doc View Source OnUnlockingGenerator(UnlockingGeneratorEventArgs) Called before a player unlocks a generator. Declaration public static void OnUnlockingGenerator(UnlockingGeneratorEventArgs ev) Parameters Type Name Description UnlockingGeneratorEventArgs ev The UnlockingGeneratorEventArgs instance. | Improve this Doc View Source OnUsingItem(UsingItemEventArgs) Called before using a medical item. Declaration public static void OnUsingItem(UsingItemEventArgs ev) Parameters Type Name Description UsingItemEventArgs ev The UsingItemEventArgs instance. | Improve this Doc View Source OnUsingMicroHIDEnergy(UsingMicroHIDEnergyEventArgs) Called before a player's MicroHID energy is changed. Declaration public static void OnUsingMicroHIDEnergy(UsingMicroHIDEnergyEventArgs ev) Parameters Type Name Description UsingMicroHIDEnergyEventArgs ev The UsingMicroHIDEnergyEventArgs instance. | Improve this Doc View Source OnUsingRadioBattery(UsingRadioBatteryEventArgs) Called before a user's radio battery charge is changed. Declaration public static void OnUsingRadioBattery(UsingRadioBatteryEventArgs ev) Parameters Type Name Description UsingRadioBatteryEventArgs ev The UsingRadioBatteryEventArgs instance. | Improve this Doc View Source OnVerified(VerifiedEventArgs) Called after a player has been verified. Declaration public static void OnVerified(VerifiedEventArgs ev) Parameters Type Name Description VerifiedEventArgs ev The VerifiedEventArgs instance. | Improve this Doc View Source OnVoiceChatting(VoiceChattingEventArgs) Invoked after a player presses the voicechat key. Declaration public static void OnVoiceChatting(VoiceChattingEventArgs ev) Parameters Type Name Description VoiceChattingEventArgs ev The VoiceChattingEventArgs instance. | Improve this Doc View Source OnWalkingOnSinkhole(WalkingOnSinkholeEventArgs) Called before a player walks on a sinkhole. Declaration public static void OnWalkingOnSinkhole(WalkingOnSinkholeEventArgs ev) Parameters Type Name Description WalkingOnSinkholeEventArgs ev The WalkingOnSinkholeEventArgs instance. | Improve this Doc View Source OnWalkingOnTantrum(WalkingOnTantrumEventArgs) Called before a player walks on a tantrum. Declaration public static void OnWalkingOnTantrum(WalkingOnTantrumEventArgs ev) Parameters Type Name Description WalkingOnTantrumEventArgs ev The WalkingOnTantrumEventArgs instance. Events | Improve this Doc View Source ActivatingGenerator Invoked before a player inserts a workstation tablet into a generator. Declaration public static event Events.CustomEventHandler<ActivatingGeneratorEventArgs> ActivatingGenerator Event Type Type Description Events.CustomEventHandler < ActivatingGeneratorEventArgs > | Improve this Doc View Source ActivatingWarheadPanel Invoked before activating the warhead panel. Declaration public static event Events.CustomEventHandler<ActivatingWarheadPanelEventArgs> ActivatingWarheadPanel Event Type Type Description Events.CustomEventHandler < ActivatingWarheadPanelEventArgs > | Improve this Doc View Source ActivatingWorkstation Invoked before activating a workstation. Declaration public static event Events.CustomEventHandler<ActivatingWorkstationEventArgs> ActivatingWorkstation Event Type Type Description Events.CustomEventHandler < ActivatingWorkstationEventArgs > | Improve this Doc View Source AimingDownSight Invoked before a player triggers an aim action. Declaration public static event Events.CustomEventHandler<AimingDownSightEventArgs> AimingDownSight Event Type Type Description Events.CustomEventHandler < AimingDownSightEventArgs > | Improve this Doc View Source Banned Invoked after a player has been banned from the server. Declaration public static event Events.CustomEventHandler<BannedEventArgs> Banned Event Type Type Description Events.CustomEventHandler < BannedEventArgs > | Improve this Doc View Source Banning Invoked before banning a player from the server. Declaration public static event Events.CustomEventHandler<BanningEventArgs> Banning Event Type Type Description Events.CustomEventHandler < BanningEventArgs > | Improve this Doc View Source CancellingItemUse Invoked after a player has stopped the use of a medical item. Declaration public static event Events.CustomEventHandler<CancellingItemUseEventArgs> CancellingItemUse Event Type Type Description Events.CustomEventHandler < CancellingItemUseEventArgs > | Improve this Doc View Source ChangingGroup Invoked before changing a player's group. Declaration public static event Events.CustomEventHandler<ChangingGroupEventArgs> ChangingGroup Event Type Type Description Events.CustomEventHandler < ChangingGroupEventArgs > | Improve this Doc View Source ChangingIntercomMuteStatus Invoked before an user's intercom mute status is changed. Declaration public static event Events.CustomEventHandler<ChangingIntercomMuteStatusEventArgs> ChangingIntercomMuteStatus Event Type Type Description Events.CustomEventHandler < ChangingIntercomMuteStatusEventArgs > | Improve this Doc View Source ChangingItem Invoked before a player's held item changes. Declaration public static event Events.CustomEventHandler<ChangingItemEventArgs> ChangingItem Event Type Type Description Events.CustomEventHandler < ChangingItemEventArgs > | Improve this Doc View Source ChangingMicroHIDState Invoked before a player's MicroHID state is changed. Declaration public static event Events.CustomEventHandler<ChangingMicroHIDStateEventArgs> ChangingMicroHIDState Event Type Type Description Events.CustomEventHandler < ChangingMicroHIDStateEventArgs > | Improve this Doc View Source ChangingMoveState Invoked before a player changes move state. Declaration public static event Events.CustomEventHandler<ChangingMoveStateEventArgs> ChangingMoveState Event Type Type Description Events.CustomEventHandler < ChangingMoveStateEventArgs > | Improve this Doc View Source ChangingMuteStatus Invoked before an user's mute status is changed. Declaration public static event Events.CustomEventHandler<ChangingMuteStatusEventArgs> ChangingMuteStatus Event Type Type Description Events.CustomEventHandler < ChangingMuteStatusEventArgs > | Improve this Doc View Source ChangingRadioPreset Invoked before a user's radio preset is changed. Declaration public static event Events.CustomEventHandler<ChangingRadioPresetEventArgs> ChangingRadioPreset Event Type Type Description Events.CustomEventHandler < ChangingRadioPresetEventArgs > | Improve this Doc View Source ChangingRole Invoked before changing a player's role. Declaration public static event Events.CustomEventHandler<ChangingRoleEventArgs> ChangingRole Event Type Type Description Events.CustomEventHandler < ChangingRoleEventArgs > Remarks If you set IsAllowed to false when Escape is true, tickets will still be given to the escapee's team even though they will 'fail' to escape. Use Escaping to block escapes instead. | Improve this Doc View Source ChangingSpectatedPlayer Invoked after a player changed spectated player. Declaration public static event Events.CustomEventHandler<ChangingSpectatedPlayerEventArgs> ChangingSpectatedPlayer Event Type Type Description Events.CustomEventHandler < ChangingSpectatedPlayerEventArgs > | Improve this Doc View Source ClosingGenerator Invoked before a player closes a generator. Declaration public static event Events.CustomEventHandler<ClosingGeneratorEventArgs> ClosingGenerator Event Type Type Description Events.CustomEventHandler < ClosingGeneratorEventArgs > | Improve this Doc View Source DamagingShootingTarget Invoked before a player damages a shooting target. Declaration public static event Events.CustomEventHandler<DamagingShootingTargetEventArgs> DamagingShootingTarget Event Type Type Description Events.CustomEventHandler < DamagingShootingTargetEventArgs > | Improve this Doc View Source DeactivatingWorkstation Invoked before deactivating a workstation. Declaration public static event Events.CustomEventHandler<DeactivatingWorkstationEventArgs> DeactivatingWorkstation Event Type Type Description Events.CustomEventHandler < DeactivatingWorkstationEventArgs > | Improve this Doc View Source Destroying Invoked before destroying a player. Declaration public static event Events.CustomEventHandler<DestroyingEventArgs> Destroying Event Type Type Description Events.CustomEventHandler < DestroyingEventArgs > | Improve this Doc View Source Died Invoked after a player died. Declaration public static event Events.CustomEventHandler<DiedEventArgs> Died Event Type Type Description Events.CustomEventHandler < DiedEventArgs > | Improve this Doc View Source DroppingAmmo Invoked before dropping ammo. Declaration public static event Events.CustomEventHandler<DroppingAmmoEventArgs> DroppingAmmo Event Type Type Description Events.CustomEventHandler < DroppingAmmoEventArgs > | Improve this Doc View Source DroppingItem Invoked before dropping an item. Declaration public static event Events.CustomEventHandler<DroppingItemEventArgs> DroppingItem Event Type Type Description Events.CustomEventHandler < DroppingItemEventArgs > | Improve this Doc View Source DroppingNull Invoked before dropping a null item. Declaration public static event Events.CustomEventHandler<DroppingNullEventArgs> DroppingNull Event Type Type Description Events.CustomEventHandler < DroppingNullEventArgs > | Improve this Doc View Source DryfiringWeapon Invoked before a player dryfires a weapon. Declaration public static event Events.CustomEventHandler<DryfiringWeaponEventArgs> DryfiringWeapon Event Type Type Description Events.CustomEventHandler < DryfiringWeaponEventArgs > | Improve this Doc View Source Dying Invoked before a player dies. Declaration public static event Events.CustomEventHandler<DyingEventArgs> Dying Event Type Type Description Events.CustomEventHandler < DyingEventArgs > | Improve this Doc View Source EnteringFemurBreaker Invoked before a player enters the femur breaker. Declaration public static event Events.CustomEventHandler<EnteringFemurBreakerEventArgs> EnteringFemurBreaker Event Type Type Description Events.CustomEventHandler < EnteringFemurBreakerEventArgs > | Improve this Doc View Source EnteringPocketDimension Invoked before a player enters the pocket dimension. Declaration public static event Events.CustomEventHandler<EnteringPocketDimensionEventArgs> EnteringPocketDimension Event Type Type Description Events.CustomEventHandler < EnteringPocketDimensionEventArgs > | Improve this Doc View Source Escaping Invoked before a player escapes. Declaration public static event Events.CustomEventHandler<EscapingEventArgs> Escaping Event Type Type Description Events.CustomEventHandler < EscapingEventArgs > | Improve this Doc View Source EscapingPocketDimension Invoked before a player escapes the pocket dimension. Declaration public static event Events.CustomEventHandler<EscapingPocketDimensionEventArgs> EscapingPocketDimension Event Type Type Description Events.CustomEventHandler < EscapingPocketDimensionEventArgs > | Improve this Doc View Source FailingEscapePocketDimension Invoked before a player fails to escape the pocket dimension. Declaration public static event Events.CustomEventHandler<FailingEscapePocketDimensionEventArgs> FailingEscapePocketDimension Event Type Type Description Events.CustomEventHandler < FailingEscapePocketDimensionEventArgs > | Improve this Doc View Source FlippingCoin Invoked before a player flips a coin. Declaration public static event Events.CustomEventHandler<FlippingCoinEventArgs> FlippingCoin Event Type Type Description Events.CustomEventHandler < FlippingCoinEventArgs > | Improve this Doc View Source Handcuffing Invoked before handcuffing a player. Declaration public static event Events.CustomEventHandler<HandcuffingEventArgs> Handcuffing Event Type Type Description Events.CustomEventHandler < HandcuffingEventArgs > | Improve this Doc View Source Hurting Invoked before hurting a player. Declaration public static event Events.CustomEventHandler<HurtingEventArgs> Hurting Event Type Type Description Events.CustomEventHandler < HurtingEventArgs > | Improve this Doc View Source Interacted Invoked after a player interacted with something. Declaration public static event Events.CustomEventHandler<InteractedEventArgs> Interacted Event Type Type Description Events.CustomEventHandler < InteractedEventArgs > | Improve this Doc View Source InteractingDoor Invoked before a player interacts with a door. Declaration public static event Events.CustomEventHandler<InteractingDoorEventArgs> InteractingDoor Event Type Type Description Events.CustomEventHandler < InteractingDoorEventArgs > | Improve this Doc View Source InteractingElevator Invoked before a player interacts with an elevator. Declaration public static event Events.CustomEventHandler<InteractingElevatorEventArgs> InteractingElevator Event Type Type Description Events.CustomEventHandler < InteractingElevatorEventArgs > | Improve this Doc View Source InteractingLocker Invoked before a player interacts with a locker. Declaration public static event Events.CustomEventHandler<InteractingLockerEventArgs> InteractingLocker Event Type Type Description Events.CustomEventHandler < InteractingLockerEventArgs > | Improve this Doc View Source InteractingShootingTarget Invoked before a player interacts with a shooting target. Declaration public static event Events.CustomEventHandler<InteractingShootingTargetEventArgs> InteractingShootingTarget Event Type Type Description Events.CustomEventHandler < InteractingShootingTargetEventArgs > | Improve this Doc View Source IntercomSpeaking Invoked before a player begins speaking to the intercom. Declaration public static event Events.CustomEventHandler<IntercomSpeakingEventArgs> IntercomSpeaking Event Type Type Description Events.CustomEventHandler < IntercomSpeakingEventArgs > | Improve this Doc View Source ItemUsed Invoked after a player uses an item. Declaration public static event Events.CustomEventHandler<UsedItemEventArgs> ItemUsed Event Type Type Description Events.CustomEventHandler < UsedItemEventArgs > Remarks Invoked after ItemUsed , if a player's class has changed during their health increase, won't fire. | Improve this Doc View Source Joined Invoked after a player has joined the server. Declaration public static event Events.CustomEventHandler<JoinedEventArgs> Joined Event Type Type Description Events.CustomEventHandler < JoinedEventArgs > | Improve this Doc View Source Jumping Invoked before a player jumps. Declaration public static event Events.CustomEventHandler<JumpingEventArgs> Jumping Event Type Type Description Events.CustomEventHandler < JumpingEventArgs > | Improve this Doc View Source Kicked Invoked after a player has been kicked from the server. Declaration public static event Events.CustomEventHandler<KickedEventArgs> Kicked Event Type Type Description Events.CustomEventHandler < KickedEventArgs > | Improve this Doc View Source Kicking Invoked before kicking a player from the server. Declaration public static event Events.CustomEventHandler<KickingEventArgs> Kicking Event Type Type Description Events.CustomEventHandler < KickingEventArgs > | Improve this Doc View Source Left Invoked after a player has left the server. Declaration public static event Events.CustomEventHandler<LeftEventArgs> Left Event Type Type Description Events.CustomEventHandler < LeftEventArgs > | Improve this Doc View Source MakingNoise Invoked before a player makes noise. Declaration public static event Events.CustomEventHandler<MakingNoiseEventArgs> MakingNoise Event Type Type Description Events.CustomEventHandler < MakingNoiseEventArgs > | Improve this Doc View Source OpeningGenerator Invoked before a player opens a generator. Declaration public static event Events.CustomEventHandler<OpeningGeneratorEventArgs> OpeningGenerator Event Type Type Description Events.CustomEventHandler < OpeningGeneratorEventArgs > | Improve this Doc View Source PickingUpAmmo Invoked before picking up ammo. Declaration public static event Events.CustomEventHandler<PickingUpAmmoEventArgs> PickingUpAmmo Event Type Type Description Events.CustomEventHandler < PickingUpAmmoEventArgs > | Improve this Doc View Source PickingUpArmor Invoked before picking up armor. Declaration public static event Events.CustomEventHandler<PickingUpArmorEventArgs> PickingUpArmor Event Type Type Description Events.CustomEventHandler < PickingUpArmorEventArgs > | Improve this Doc View Source PickingUpItem Invoked before picking up an item. Declaration public static event Events.CustomEventHandler<PickingUpItemEventArgs> PickingUpItem Event Type Type Description Events.CustomEventHandler < PickingUpItemEventArgs > | Improve this Doc View Source PreAuthenticating Invoked before authenticating a player. Declaration public static event Events.CustomEventHandler<PreAuthenticatingEventArgs> PreAuthenticating Event Type Type Description Events.CustomEventHandler < PreAuthenticatingEventArgs > | Improve this Doc View Source ProcessingHotkey Called before processing a hotkey. Declaration public static event Events.CustomEventHandler<ProcessingHotkeyEventArgs> ProcessingHotkey Event Type Type Description Events.CustomEventHandler < ProcessingHotkeyEventArgs > | Improve this Doc View Source ReceivingEffect Invoked before a player receives a status effect. Declaration public static event Events.CustomEventHandler<ReceivingEffectEventArgs> ReceivingEffect Event Type Type Description Events.CustomEventHandler < ReceivingEffectEventArgs > | Improve this Doc View Source ReloadingWeapon Invoked before a player reloads a weapon. Declaration public static event Events.CustomEventHandler<ReloadingWeaponEventArgs> ReloadingWeapon Event Type Type Description Events.CustomEventHandler < ReloadingWeaponEventArgs > | Improve this Doc View Source RemovingHandcuffs Invoked before freeing a handcuffed player. Declaration public static event Events.CustomEventHandler<RemovingHandcuffsEventArgs> RemovingHandcuffs Event Type Type Description Events.CustomEventHandler < RemovingHandcuffsEventArgs > | Improve this Doc View Source Shooting Invoked before a player shoots a weapon. Declaration public static event Events.CustomEventHandler<ShootingEventArgs> Shooting Event Type Type Description Events.CustomEventHandler < ShootingEventArgs > | Improve this Doc View Source Shot Invoked after a player gets shot. Declaration public static event Events.CustomEventHandler<ShotEventArgs> Shot Event Type Type Description Events.CustomEventHandler < ShotEventArgs > | Improve this Doc View Source Spawning Invoked before spawning a player. Declaration public static event Events.CustomEventHandler<SpawningEventArgs> Spawning Event Type Type Description Events.CustomEventHandler < SpawningEventArgs > | Improve this Doc View Source SpawningRagdoll Invoked before spawning a player's ragdoll. Declaration public static event Events.CustomEventHandler<SpawningRagdollEventArgs> SpawningRagdoll Event Type Type Description Events.CustomEventHandler < SpawningRagdollEventArgs > | Improve this Doc View Source StoppingGenerator Invoked before a player ejects the workstation tablet out of a generator. Declaration public static event Events.CustomEventHandler<StoppingGeneratorEventArgs> StoppingGenerator Event Type Type Description Events.CustomEventHandler < StoppingGeneratorEventArgs > | Improve this Doc View Source SyncingData Invoked before syncing player's data. Declaration public static event Events.CustomEventHandler<SyncingDataEventArgs> SyncingData Event Type Type Description Events.CustomEventHandler < SyncingDataEventArgs > | Improve this Doc View Source ThrowingItem Invoked before throwing an item. Declaration public static event Events.CustomEventHandler<ThrowingItemEventArgs> ThrowingItem Event Type Type Description Events.CustomEventHandler < ThrowingItemEventArgs > | Improve this Doc View Source TogglingFlashlight Invoked before a player toggles the flashlight. Declaration public static event Events.CustomEventHandler<TogglingFlashlightEventArgs> TogglingFlashlight Event Type Type Description Events.CustomEventHandler < TogglingFlashlightEventArgs > | Improve this Doc View Source TogglingNoClip Invoked before a player toggles the NoClip mode. Declaration public static event Events.CustomEventHandler<TogglingNoClipEventArgs> TogglingNoClip Event Type Type Description Events.CustomEventHandler < TogglingNoClipEventArgs > | Improve this Doc View Source TogglingWeaponFlashlight Invoked before a player toggles the weapon's flashlight. Declaration public static event Events.CustomEventHandler<TogglingWeaponFlashlightEventArgs> TogglingWeaponFlashlight Event Type Type Description Events.CustomEventHandler < TogglingWeaponFlashlightEventArgs > | Improve this Doc View Source Transmitting Invoked after a player presses the transmission key. Declaration public static event Events.CustomEventHandler<TransmittingEventArgs> Transmitting Event Type Type Description Events.CustomEventHandler < TransmittingEventArgs > | Improve this Doc View Source TriggeringTesla Invoked before a player triggers a tesla gate. Declaration public static event Events.CustomEventHandler<TriggeringTeslaEventArgs> TriggeringTesla Event Type Type Description Events.CustomEventHandler < TriggeringTeslaEventArgs > | Improve this Doc View Source UnloadingWeapon Invoked before a player unloads a weapon. Declaration public static event Events.CustomEventHandler<UnloadingWeaponEventArgs> UnloadingWeapon Event Type Type Description Events.CustomEventHandler < UnloadingWeaponEventArgs > | Improve this Doc View Source UnlockingGenerator Invoked before a player unlocks a generator. Declaration public static event Events.CustomEventHandler<UnlockingGeneratorEventArgs> UnlockingGenerator Event Type Type Description Events.CustomEventHandler < UnlockingGeneratorEventArgs > | Improve this Doc View Source UsingItem Invoked before using an item. Declaration public static event Events.CustomEventHandler<UsingItemEventArgs> UsingItem Event Type Type Description Events.CustomEventHandler < UsingItemEventArgs > | Improve this Doc View Source UsingMicroHIDEnergy Invoked before a player's MicroHID energy is changed. Declaration public static event Events.CustomEventHandler<UsingMicroHIDEnergyEventArgs> UsingMicroHIDEnergy Event Type Type Description Events.CustomEventHandler < UsingMicroHIDEnergyEventArgs > | Improve this Doc View Source UsingRadioBattery Invoked before a user's radio battery charge is changed. Declaration public static event Events.CustomEventHandler<UsingRadioBatteryEventArgs> UsingRadioBattery Event Type Type Description Events.CustomEventHandler < UsingRadioBatteryEventArgs > | Improve this Doc View Source Verified Ivoked after a player has been verified. Declaration public static event Events.CustomEventHandler<VerifiedEventArgs> Verified Event Type Type Description Events.CustomEventHandler < VerifiedEventArgs > | Improve this Doc View Source VoiceChatting Invoked after a player presses the voicechat key. Declaration public static event Events.CustomEventHandler<VoiceChattingEventArgs> VoiceChatting Event Type Type Description Events.CustomEventHandler < VoiceChattingEventArgs > | Improve this Doc View Source WalkingOnSinkhole Called before a player walks on a sinkhole. Declaration public static event Events.CustomEventHandler<WalkingOnSinkholeEventArgs> WalkingOnSinkhole Event Type Type Description Events.CustomEventHandler < WalkingOnSinkholeEventArgs > | Improve this Doc View Source WalkingOnTantrum Called before a player walks on a tantrum. Declaration public static event Events.CustomEventHandler<WalkingOnTantrumEventArgs> WalkingOnTantrum Event Type Type Description Events.CustomEventHandler < WalkingOnTantrumEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp049.html": {
    "href": "api/Exiled.Events.Handlers.Scp049.html",
    "title": "Class Scp049 | EXILED Docs",
    "keywords": "Class Scp049 SCP-049 related events. Inheritance System.Object Scp049 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp049 Methods | Improve this Doc View Source OnFinishingRecall(FinishingRecallEventArgs) Called before SCP-049 finishes recalling a player. Declaration public static void OnFinishingRecall(FinishingRecallEventArgs ev) Parameters Type Name Description FinishingRecallEventArgs ev The FinishingRecallEventArgs instance. | Improve this Doc View Source OnStartingRecall(StartingRecallEventArgs) Called before Scp049 starts to recall a player. Declaration public static void OnStartingRecall(StartingRecallEventArgs ev) Parameters Type Name Description StartingRecallEventArgs ev The StartingRecallEventArgs instance. Events | Improve this Doc View Source FinishingRecall Invoked before SCP-049 finishes recalling a player. Declaration public static event Events.CustomEventHandler<FinishingRecallEventArgs> FinishingRecall Event Type Type Description Events.CustomEventHandler < FinishingRecallEventArgs > | Improve this Doc View Source StartingRecall Invoked before SCP-049 begins recalling a player. Declaration public static event Events.CustomEventHandler<StartingRecallEventArgs> StartingRecall Event Type Type Description Events.CustomEventHandler < StartingRecallEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp079.html": {
    "href": "api/Exiled.Events.Handlers.Scp079.html",
    "title": "Class Scp079 | EXILED Docs",
    "keywords": "Class Scp079 SCP-079 related events. Inheritance System.Object Scp079 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp079 Methods | Improve this Doc View Source OnChangingCamera(ChangingCameraEventArgs) Called before SCP-079 switches cameras. Declaration public static void OnChangingCamera(ChangingCameraEventArgs ev) Parameters Type Name Description ChangingCameraEventArgs ev The ChangingCameraEventArgs instance. | Improve this Doc View Source OnElevatorTeleporting(ElevatorTeleportingEventArgs) Called before SCP-079 teleports using an elevator. Declaration public static void OnElevatorTeleporting(ElevatorTeleportingEventArgs ev) Parameters Type Name Description ElevatorTeleportingEventArgs ev The ElevatorTeleportingEventArgs instance. | Improve this Doc View Source OnGainingExperience(GainingExperienceEventArgs) Called before gaining experience with SCP-079. Declaration public static void OnGainingExperience(GainingExperienceEventArgs ev) Parameters Type Name Description GainingExperienceEventArgs ev The GainingExperienceEventArgs instance. | Improve this Doc View Source OnGainingLevel(GainingLevelEventArgs) Called before gaining levels with SCP-079. Declaration public static void OnGainingLevel(GainingLevelEventArgs ev) Parameters Type Name Description GainingLevelEventArgs ev The GainingLevelEventArgs instance. | Improve this Doc View Source OnInteractingTesla(InteractingTeslaEventArgs) Called before triggering a tesla with SCP-079. Declaration public static void OnInteractingTesla(InteractingTeslaEventArgs ev) Parameters Type Name Description InteractingTeslaEventArgs ev The InteractingTeslaEventArgs instance. | Improve this Doc View Source OnLockingDown(LockingDownEventArgs) Called before SCP-079 lockdowns a room. Declaration public static void OnLockingDown(LockingDownEventArgs ev) Parameters Type Name Description LockingDownEventArgs ev The LockingDownEventArgs instance. | Improve this Doc View Source OnRecontained(RecontainedEventArgs) Called after SCP-079 is recontained. Declaration public static void OnRecontained(RecontainedEventArgs ev) Parameters Type Name Description RecontainedEventArgs ev The RecontainedEventArgs instance. | Improve this Doc View Source OnStartingSpeaker(StartingSpeakerEventArgs) Called before interacting with a speaker with SCP-079. Declaration public static void OnStartingSpeaker(StartingSpeakerEventArgs ev) Parameters Type Name Description StartingSpeakerEventArgs ev The StartingSpeakerEventArgs instance. | Improve this Doc View Source OnStoppingSpeaker(StoppingSpeakerEventArgs) Called before SCP-079 finishes using a speaker. Declaration public static void OnStoppingSpeaker(StoppingSpeakerEventArgs ev) Parameters Type Name Description StoppingSpeakerEventArgs ev The StoppingEventArgs instance. | Improve this Doc View Source OnTriggeringDoor(TriggeringDoorEventArgs) Called before interacting with a door with SCP-079. Declaration public static void OnTriggeringDoor(TriggeringDoorEventArgs ev) Parameters Type Name Description TriggeringDoorEventArgs ev The TriggeringDoorEventArgs instance. Events | Improve this Doc View Source ChangingCamera Invoked before SCP-079 switches cameras. Declaration public static event Events.CustomEventHandler<ChangingCameraEventArgs> ChangingCamera Event Type Type Description Events.CustomEventHandler < ChangingCameraEventArgs > | Improve this Doc View Source ElevatorTeleporting Invoked before SCP-079 teleports using an elevator. Declaration public static event Events.CustomEventHandler<ElevatorTeleportingEventArgs> ElevatorTeleporting Event Type Type Description Events.CustomEventHandler < ElevatorTeleportingEventArgs > | Improve this Doc View Source GainingExperience Invoked before gaining experience with SCP-079 Declaration public static event Events.CustomEventHandler<GainingExperienceEventArgs> GainingExperience Event Type Type Description Events.CustomEventHandler < GainingExperienceEventArgs > | Improve this Doc View Source GainingLevel Invoked before gaining levels with SCP-079 Declaration public static event Events.CustomEventHandler<GainingLevelEventArgs> GainingLevel Event Type Type Description Events.CustomEventHandler < GainingLevelEventArgs > | Improve this Doc View Source InteractingTesla Invoked before triggering a tesla with SCP-079. Declaration public static event Events.CustomEventHandler<InteractingTeslaEventArgs> InteractingTesla Event Type Type Description Events.CustomEventHandler < InteractingTeslaEventArgs > | Improve this Doc View Source LockingDown Invoked before SCP-079 lockdowns a room. Declaration public static event Events.CustomEventHandler<LockingDownEventArgs> LockingDown Event Type Type Description Events.CustomEventHandler < LockingDownEventArgs > | Improve this Doc View Source Recontained Invoked after Scp079 recontainment. Declaration public static event Events.CustomEventHandler<RecontainedEventArgs> Recontained Event Type Type Description Events.CustomEventHandler < RecontainedEventArgs > | Improve this Doc View Source StartingSpeaker Invoked before SCP-079 uses a speaker. Declaration public static event Events.CustomEventHandler<StartingSpeakerEventArgs> StartingSpeaker Event Type Type Description Events.CustomEventHandler < StartingSpeakerEventArgs > | Improve this Doc View Source StoppingSpeaker Invoked before SCP-079 finishes using a speaker. Declaration public static event Events.CustomEventHandler<StoppingSpeakerEventArgs> StoppingSpeaker Event Type Type Description Events.CustomEventHandler < StoppingSpeakerEventArgs > | Improve this Doc View Source TriggeringDoor Invoked before triggering a door with SCP-079. Declaration public static event Events.CustomEventHandler<TriggeringDoorEventArgs> TriggeringDoor Event Type Type Description Events.CustomEventHandler < TriggeringDoorEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp096.html": {
    "href": "api/Exiled.Events.Handlers.Scp096.html",
    "title": "Class Scp096 | EXILED Docs",
    "keywords": "Class Scp096 SCP-096 related events. Inheritance System.Object Scp096 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp096 Methods | Improve this Doc View Source OnAddingTarget(AddingTargetEventArgs) Called before adding a target to SCP-096. Declaration public static void OnAddingTarget(AddingTargetEventArgs ev) Parameters Type Name Description AddingTargetEventArgs ev The AddingTargetEventArgs instance. | Improve this Doc View Source OnCalmingDown(CalmingDownEventArgs) Called before SCP-096 calms down. Declaration public static void OnCalmingDown(CalmingDownEventArgs ev) Parameters Type Name Description CalmingDownEventArgs ev The CalmingDownEventArgs instance. | Improve this Doc View Source OnCharging(ChargingEventArgs) Called before SCP-096 begins charging. Declaration public static void OnCharging(ChargingEventArgs ev) Parameters Type Name Description ChargingEventArgs ev The ChargingEventArgs instance. | Improve this Doc View Source OnChargingPlayer(ChargingPlayerEventArgs) Called before SCP-096 charges a player. Declaration public static void OnChargingPlayer(ChargingPlayerEventArgs ev) Parameters Type Name Description ChargingPlayerEventArgs ev The ChargingPlayerEventArgs instance. | Improve this Doc View Source OnEnraging(EnragingEventArgs) Called before SCP-096 is enraged. Declaration public static void OnEnraging(EnragingEventArgs ev) Parameters Type Name Description EnragingEventArgs ev The EnragingEventArgs instance. | Improve this Doc View Source OnStartPryingGate(StartPryingGateEventArgs) Called before SCP-096 begins prying open a gate. Declaration public static void OnStartPryingGate(StartPryingGateEventArgs ev) Parameters Type Name Description StartPryingGateEventArgs ev The StartPryingGateEventArgs instance. | Improve this Doc View Source OnTryingNotToCry(TryingNotToCryEventArgs) Called before SCP-096 starts trying not to cry. Declaration public static void OnTryingNotToCry(TryingNotToCryEventArgs ev) Parameters Type Name Description TryingNotToCryEventArgs ev The TryingNotToCryEventArgs instance. Events | Improve this Doc View Source AddingTarget Invoked before adding a target to SCP-096. Declaration public static event Events.CustomEventHandler<AddingTargetEventArgs> AddingTarget Event Type Type Description Events.CustomEventHandler < AddingTargetEventArgs > | Improve this Doc View Source CalmingDown Invoked before SCP-096 calms down. Declaration public static event Events.CustomEventHandler<CalmingDownEventArgs> CalmingDown Event Type Type Description Events.CustomEventHandler < CalmingDownEventArgs > | Improve this Doc View Source Charging Invoked before SCP-096 begins charging. Declaration public static event Events.CustomEventHandler<ChargingEventArgs> Charging Event Type Type Description Events.CustomEventHandler < ChargingEventArgs > | Improve this Doc View Source ChargingPlayer Invoked before SCP-096 charges a player. Declaration public static event Events.CustomEventHandler<ChargingPlayerEventArgs> ChargingPlayer Event Type Type Description Events.CustomEventHandler < ChargingPlayerEventArgs > | Improve this Doc View Source Enraging Invoked before SCP-096 is enraged. Declaration public static event Events.CustomEventHandler<EnragingEventArgs> Enraging Event Type Type Description Events.CustomEventHandler < EnragingEventArgs > | Improve this Doc View Source StartPryingGate Invoked before SCP-096 begins prying open a gate. Declaration public static event Events.CustomEventHandler<StartPryingGateEventArgs> StartPryingGate Event Type Type Description Events.CustomEventHandler < StartPryingGateEventArgs > | Improve this Doc View Source TryingNotToCry Invoked before SCP-096 tries not to cry. Declaration public static event Events.CustomEventHandler<TryingNotToCryEventArgs> TryingNotToCry Event Type Type Description Events.CustomEventHandler < TryingNotToCryEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp106.html": {
    "href": "api/Exiled.Events.Handlers.Scp106.html",
    "title": "Class Scp106 | EXILED Docs",
    "keywords": "Class Scp106 SCP-106 related events. Inheritance System.Object Scp106 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp106 Methods | Improve this Doc View Source OnContaining(ContainingEventArgs) Called before containing SCP-106. Declaration public static void OnContaining(ContainingEventArgs ev) Parameters Type Name Description ContainingEventArgs ev The ContainingEventArgs instance. | Improve this Doc View Source OnCreatingPortal(CreatingPortalEventArgs) Called before SCP-106 creates a portal. Declaration public static void OnCreatingPortal(CreatingPortalEventArgs ev) Parameters Type Name Description CreatingPortalEventArgs ev The CreatingPortalEventArgs instance. | Improve this Doc View Source OnTeleporting(TeleportingEventArgs) Called before SCP-106 teleports using a portal. Declaration public static void OnTeleporting(TeleportingEventArgs ev) Parameters Type Name Description TeleportingEventArgs ev The TeleportingEventArgs instance. Events | Improve this Doc View Source Containing Invoked before containing SCP-106. Declaration public static event Events.CustomEventHandler<ContainingEventArgs> Containing Event Type Type Description Events.CustomEventHandler < ContainingEventArgs > | Improve this Doc View Source CreatingPortal Invoked before SCP-106 creates a portal. Declaration public static event Events.CustomEventHandler<CreatingPortalEventArgs> CreatingPortal Event Type Type Description Events.CustomEventHandler < CreatingPortalEventArgs > | Improve this Doc View Source Teleporting Invoked before SCP-106 teleports using a portal. Declaration public static event Events.CustomEventHandler<TeleportingEventArgs> Teleporting Event Type Type Description Events.CustomEventHandler < TeleportingEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp173.html": {
    "href": "api/Exiled.Events.Handlers.Scp173.html",
    "title": "Class Scp173 | EXILED Docs",
    "keywords": "Class Scp173 SCP-173 related events. Inheritance System.Object Scp173 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp173 Methods | Improve this Doc View Source OnBlinking(BlinkingEventArgs) Called before players near SCP-173 blink. Declaration public static void OnBlinking(BlinkingEventArgs ev) Parameters Type Name Description BlinkingEventArgs ev The BlinkingEventArgs instance. | Improve this Doc View Source OnPlacingTantrum(PlacingTantrumEventArgs) Called before a tantrum is placed. Declaration public static void OnPlacingTantrum(PlacingTantrumEventArgs ev) Parameters Type Name Description PlacingTantrumEventArgs ev The PlacingTantrumEventArgs instance. Events | Improve this Doc View Source Blinking Invoked before players near SCP-173 blink. Declaration public static event Events.CustomEventHandler<BlinkingEventArgs> Blinking Event Type Type Description Events.CustomEventHandler < BlinkingEventArgs > | Improve this Doc View Source PlacingTantrum Invoked before a tantrum is placed. Declaration public static event Events.CustomEventHandler<PlacingTantrumEventArgs> PlacingTantrum Event Type Type Description Events.CustomEventHandler < PlacingTantrumEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp914.html": {
    "href": "api/Exiled.Events.Handlers.Scp914.html",
    "title": "Class Scp914 | EXILED Docs",
    "keywords": "Class Scp914 Handles SCP-914 related events. Inheritance System.Object Scp914 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp914 Methods | Improve this Doc View Source OnActivating(ActivatingEventArgs) Called before activating the SCP-914 machine. Declaration public static void OnActivating(ActivatingEventArgs ev) Parameters Type Name Description ActivatingEventArgs ev The ActivatingEventArgs instance. | Improve this Doc View Source OnChangingKnobSetting(ChangingKnobSettingEventArgs) Called before changing the SCP-914 machine knob setting. Declaration public static void OnChangingKnobSetting(ChangingKnobSettingEventArgs ev) Parameters Type Name Description ChangingKnobSettingEventArgs ev The ChangingKnobSettingEventArgs instance. | Improve this Doc View Source OnUpgradingInventoryItem(UpgradingInventoryItemEventArgs) Called before SCP-914 upgrades an item in a player's inventory. Declaration public static void OnUpgradingInventoryItem(UpgradingInventoryItemEventArgs ev) Parameters Type Name Description UpgradingInventoryItemEventArgs ev The UpgradingInventoryItemEventArgs instance. | Improve this Doc View Source OnUpgradingItem(UpgradingItemEventArgs) Called before SCP-914 upgrades a item. Declaration public static void OnUpgradingItem(UpgradingItemEventArgs ev) Parameters Type Name Description UpgradingItemEventArgs ev The UpgradingItemEventArgs instance. | Improve this Doc View Source OnUpgradingPlayer(UpgradingPlayerEventArgs) Called before SCP-914 upgrades a player. Declaration public static void OnUpgradingPlayer(UpgradingPlayerEventArgs ev) Parameters Type Name Description UpgradingPlayerEventArgs ev The UpgradingPlayerEventArgs instance. Events | Improve this Doc View Source Activating Invoked before activating the SCP-914 machine. Declaration public static event Events.CustomEventHandler<ActivatingEventArgs> Activating Event Type Type Description Events.CustomEventHandler < ActivatingEventArgs > | Improve this Doc View Source ChangingKnobSetting Invoked before changing the SCP-914 machine knob setting. Declaration public static event Events.CustomEventHandler<ChangingKnobSettingEventArgs> ChangingKnobSetting Event Type Type Description Events.CustomEventHandler < ChangingKnobSettingEventArgs > | Improve this Doc View Source UpgradingInventoryItem Invoked before SCP-914 upgrades an item in a player's inventory. Declaration public static event Events.CustomEventHandler<UpgradingInventoryItemEventArgs> UpgradingInventoryItem Event Type Type Description Events.CustomEventHandler < UpgradingInventoryItemEventArgs > | Improve this Doc View Source UpgradingItem Invoked before SCP-914 upgrades a item. Declaration public static event Events.CustomEventHandler<UpgradingItemEventArgs> UpgradingItem Event Type Type Description Events.CustomEventHandler < UpgradingItemEventArgs > | Improve this Doc View Source UpgradingPlayer Invoked before SCP-914 upgrades a player. Declaration public static event Events.CustomEventHandler<UpgradingPlayerEventArgs> UpgradingPlayer Event Type Type Description Events.CustomEventHandler < UpgradingPlayerEventArgs >"
  },
  "api/Exiled.Events.Handlers.Server.html": {
    "href": "api/Exiled.Events.Handlers.Server.html",
    "title": "Class Server | EXILED Docs",
    "keywords": "Class Server Server related events. Inheritance System.Object Server Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Server Methods | Improve this Doc View Source OnEndingRound(EndingRoundEventArgs) Called before ending a round. Declaration public static void OnEndingRound(EndingRoundEventArgs ev) Parameters Type Name Description EndingRoundEventArgs ev The EndingRoundEventArgs instance. | Improve this Doc View Source OnLocalReporting(LocalReportingEventArgs) Called when sending a complaint about a player to the local server administrators. Declaration public static void OnLocalReporting(LocalReportingEventArgs ev) Parameters Type Name Description LocalReportingEventArgs ev The LocalReportingEventArgs instance. | Improve this Doc View Source OnReloadedConfigs() Called after the \"reload configs\" command is ran. Declaration public static void OnReloadedConfigs() | Improve this Doc View Source OnReloadedGameplay() Called after the \"reload gameplay\" command is ran. Declaration public static void OnReloadedGameplay() | Improve this Doc View Source OnReloadedRA() Called after the \"reload remoteadminconfigs\" command is ran. Declaration public static void OnReloadedRA() | Improve this Doc View Source OnReloadedTranslations() Called after the \"reload translations\" command is ran. Declaration public static void OnReloadedTranslations() | Improve this Doc View Source OnReportingCheater(ReportingCheaterEventArgs) Called when a player reports a cheater. Declaration public static void OnReportingCheater(ReportingCheaterEventArgs ev) Parameters Type Name Description ReportingCheaterEventArgs ev The ReportingCheaterEventArgs instance. | Improve this Doc View Source OnRespawningTeam(RespawningTeamEventArgs) Called before respawning a wave of Chaos Insurgency or NTF. Declaration public static void OnRespawningTeam(RespawningTeamEventArgs ev) Parameters Type Name Description RespawningTeamEventArgs ev The RespawningTeamEventArgs instance. | Improve this Doc View Source OnRestartingRound() Called before restarting a round. Declaration public static void OnRestartingRound() | Improve this Doc View Source OnRoundEnded(RoundEndedEventArgs) Called after the end of a round. Declaration public static void OnRoundEnded(RoundEndedEventArgs ev) Parameters Type Name Description RoundEndedEventArgs ev The RoundEndedEventArgs instance. | Improve this Doc View Source OnRoundStarted() Called after the start of a new round. Declaration public static void OnRoundStarted() | Improve this Doc View Source OnWaitingForPlayers() Called before waiting for players. Declaration public static void OnWaitingForPlayers() Events | Improve this Doc View Source EndingRound Invoked before ending a round. Declaration public static event Events.CustomEventHandler<EndingRoundEventArgs> EndingRound Event Type Type Description Events.CustomEventHandler < EndingRoundEventArgs > | Improve this Doc View Source LocalReporting Invoked when sending a complaint about a player to the local server administrators. Declaration public static event Events.CustomEventHandler<LocalReportingEventArgs> LocalReporting Event Type Type Description Events.CustomEventHandler < LocalReportingEventArgs > | Improve this Doc View Source ReloadedConfigs Invoked after the \"reload configs\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedConfigs Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedGameplay Invoked after the \"reload gameplay\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedGameplay Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedRA Invoked after the \"reload remoteadminconfigs\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedRA Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedTranslations Invoked after the \"reload translations\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedTranslations Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReportingCheater Invoked when a player reports a cheater. Declaration public static event Events.CustomEventHandler<ReportingCheaterEventArgs> ReportingCheater Event Type Type Description Events.CustomEventHandler < ReportingCheaterEventArgs > | Improve this Doc View Source RespawningTeam Invoked before respawning a wave of Chaos Insurgency or NTF. Declaration public static event Events.CustomEventHandler<RespawningTeamEventArgs> RespawningTeam Event Type Type Description Events.CustomEventHandler < RespawningTeamEventArgs > | Improve this Doc View Source RestartingRound Invoked before the restart of a round. Declaration public static event Events.CustomEventHandler RestartingRound Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source RoundEnded Invoked after the end of a round. Declaration public static event Events.CustomEventHandler<RoundEndedEventArgs> RoundEnded Event Type Type Description Events.CustomEventHandler < RoundEndedEventArgs > | Improve this Doc View Source RoundStarted Invoked after the start of a new round. Declaration public static event Events.CustomEventHandler RoundStarted Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source WaitingForPlayers Invoked before waiting for players. Declaration public static event Events.CustomEventHandler WaitingForPlayers Event Type Type Description Events.CustomEventHandler"
  },
  "api/Exiled.Events.Handlers.Warhead.html": {
    "href": "api/Exiled.Events.Handlers.Warhead.html",
    "title": "Class Warhead | EXILED Docs",
    "keywords": "Class Warhead Handles warhead related events. Inheritance System.Object Warhead Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Warhead Methods | Improve this Doc View Source OnChangingLeverStatus(ChangingLeverStatusEventArgs) Called before changing the warhead lever status. Declaration public static void OnChangingLeverStatus(ChangingLeverStatusEventArgs ev) Parameters Type Name Description ChangingLeverStatusEventArgs ev The ChangingLeverStatusEventArgs instance. | Improve this Doc View Source OnDetonated() Called after the warhead has been detonated. Declaration public static void OnDetonated() | Improve this Doc View Source OnStarting(StartingEventArgs) Called before starting the warhead. Declaration public static void OnStarting(StartingEventArgs ev) Parameters Type Name Description StartingEventArgs ev The StartingEventArgs instance. | Improve this Doc View Source OnStopping(StoppingEventArgs) Called before stopping the warhead. Declaration public static void OnStopping(StoppingEventArgs ev) Parameters Type Name Description StoppingEventArgs ev The StoppingEventArgs instance. Events | Improve this Doc View Source ChangingLeverStatus Invoked before changing the warhead lever status. Declaration public static event Events.CustomEventHandler<ChangingLeverStatusEventArgs> ChangingLeverStatus Event Type Type Description Events.CustomEventHandler < ChangingLeverStatusEventArgs > | Improve this Doc View Source Detonated Invoked after the warhead has been detonated. Declaration public static event Events.CustomEventHandler Detonated Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source Starting Invoked before starting the warhead. Declaration public static event Events.CustomEventHandler<StartingEventArgs> Starting Event Type Type Description Events.CustomEventHandler < StartingEventArgs > | Improve this Doc View Source Stopping Invoked before stopping the warhead. Declaration public static event Events.CustomEventHandler<StoppingEventArgs> Stopping Event Type Type Description Events.CustomEventHandler < StoppingEventArgs >"
  },
  "api/Exiled.Events.html": {
    "href": "api/Exiled.Events.html",
    "title": "Namespace Exiled.Events | EXILED Docs",
    "keywords": "Namespace Exiled.Events Classes Config Events Patch and unpatch events into the game. Delegates Events.CustomEventHandler The custom System.EventHandler delegate, with empty parameters. Events.CustomEventHandler<TEventArgs> The custom System.EventHandler delegate."
  },
  "api/Exiled.Events.Patches.Fixes.CassieNotSayingUnitNamesFix.html": {
    "href": "api/Exiled.Events.Patches.Fixes.CassieNotSayingUnitNamesFix.html",
    "title": "Class CassieNotSayingUnitNamesFix | EXILED Docs",
    "keywords": "Class CassieNotSayingUnitNamesFix Fixes Cassie ignoring unit name if it's changed via ChangeUnitColor(Int32, String) . Inheritance System.Object CassieNotSayingUnitNamesFix Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Fixes Assembly : Exiled.Events.dll Syntax public static class CassieNotSayingUnitNamesFix"
  },
  "api/Exiled.Events.Patches.Fixes.html": {
    "href": "api/Exiled.Events.Patches.Fixes.html",
    "title": "Namespace Exiled.Events.Patches.Fixes | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Patches.Fixes Classes CassieNotSayingUnitNamesFix Fixes Cassie ignoring unit name if it's changed via ChangeUnitColor(Int32, String) ."
  },
  "api/Exiled.Events.Patches.Generic.html": {
    "href": "api/Exiled.Events.Patches.Generic.html",
    "title": "Namespace Exiled.Events.Patches.Generic | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Patches.Generic Classes IndividualFriendlyFire Checks friendly fire rules. PlayerHasHint Patches Hints.HintDisplay.Show(Hints.Hint) ."
  },
  "api/Exiled.Events.Patches.Generic.IndividualFriendlyFire.html": {
    "href": "api/Exiled.Events.Patches.Generic.IndividualFriendlyFire.html",
    "title": "Class IndividualFriendlyFire | EXILED Docs",
    "keywords": "Class IndividualFriendlyFire Checks friendly fire rules. Inheritance System.Object IndividualFriendlyFire Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Generic Assembly : Exiled.Events.dll Syntax public static class IndividualFriendlyFire Methods | Improve this Doc View Source CheckFriendlyFirePlayerFriendly(ReferenceHub, ReferenceHub, RoleType) Checks if there can be damage between two players, according to the FF rules. Declaration public static bool CheckFriendlyFirePlayerFriendly(ReferenceHub attackerHub, ReferenceHub victimHub, RoleType attackerRole) Parameters Type Name Description ReferenceHub attackerHub The person attacking. ReferenceHub victimHub The person being attacked. RoleType attackerRole The attackers current role. Returns Type Description System.Boolean True if the attacker can damage the victim."
  },
  "api/Exiled.Events.Patches.Generic.PlayerHasHint.html": {
    "href": "api/Exiled.Events.Patches.Generic.PlayerHasHint.html",
    "title": "Class PlayerHasHint | EXILED Docs",
    "keywords": "Class PlayerHasHint Patches Hints.HintDisplay.Show(Hints.Hint) . Inheritance System.Object PlayerHasHint Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Generic Assembly : Exiled.Events.dll Syntax public static class PlayerHasHint Methods | Improve this Doc View Source HasHintToFalse(Player, Single) Declaration public static IEnumerator<float> HasHintToFalse(Player player, float duration) Parameters Type Name Description Player player System.Single duration Returns Type Description System.Collections.Generic.IEnumerator < System.Single > | Improve this Doc View Source Postfix(HintDisplay, Hint) Declaration public static void Postfix(HintDisplay __instance, Hint hint) Parameters Type Name Description Hints.HintDisplay __instance Hints.Hint hint"
  },
  "api/Exiled.Loader.Config.html": {
    "href": "api/Exiled.Loader.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config The configs of the loader. Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public sealed class Config : IConfig Properties | Improve this Doc View Source Environment Gets or sets the environment type. Declaration public EnvironmentType Environment { get; set; } Property Value Type Description EnvironmentType | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldLoadOutdatedPlugins Gets or sets a value indicating whether outdated plugins should be loaded or not. Declaration public bool ShouldLoadOutdatedPlugins { get; set; } Property Value Type Description System.Boolean Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.ConfigManager.html": {
    "href": "api/Exiled.Loader.ConfigManager.html",
    "title": "Class ConfigManager | EXILED Docs",
    "keywords": "Class ConfigManager Used to handle plugin configs. Inheritance System.Object ConfigManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class ConfigManager Methods | Improve this Doc View Source Clear() Clears the configs. Declaration public static bool Clear() Returns Type Description System.Boolean Returns a value indicating whether configs have been cleared successfully or not. | Improve this Doc View Source LoadSorted(String) Loads all plugin configs. Declaration public static SortedDictionary<string, IConfig> LoadSorted(string rawConfigs) Parameters Type Name Description System.String rawConfigs The raw configs to be loaded. Returns Type Description System.Collections.Generic.SortedDictionary < System.String , IConfig > Returns a dictionary of loaded configs. | Improve this Doc View Source Read() Read all plugin configs. Declaration public static string Read() Returns Type Description System.String Returns the read configs. | Improve this Doc View Source Reload() Reads, Loads and Saves plugin configs. Declaration public static bool Reload() Returns Type Description System.Boolean Returns a value indicating if the reloading process has been completed successfully or not. | Improve this Doc View Source ReloadRemoteAdmin() Reloads RemoteAdmin configs. Declaration public static void ReloadRemoteAdmin() | Improve this Doc View Source Save(SortedDictionary<String, IConfig>) Saves plugin configs. Declaration public static bool Save(SortedDictionary<string, IConfig> configs) Parameters Type Name Description System.Collections.Generic.SortedDictionary < System.String , IConfig > configs The configs to be saved. Returns Type Description System.Boolean Returns a value indicating whether the configs have been saved successfully or not. | Improve this Doc View Source Save(String) Saves plugin configs. Declaration public static bool Save(string configs) Parameters Type Name Description System.String configs The configs to be saved, already serialized in yaml format. Returns Type Description System.Boolean Returns a value indicating whether the configs have been saved successfully or not."
  },
  "api/Exiled.Loader.Features.Configs.CommentGatheringTypeInspector.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentGatheringTypeInspector.html",
    "title": "Class CommentGatheringTypeInspector | EXILED Docs",
    "keywords": "Class CommentGatheringTypeInspector Spurce: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentGatheringTypeInspector Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentGatheringTypeInspector : TypeInspectorSkeleton Constructors | Improve this Doc View Source CommentGatheringTypeInspector(ITypeInspector) Initializes a new instance of the CommentGatheringTypeInspector class. Declaration public CommentGatheringTypeInspector(ITypeInspector innerTypeDescriptor) Parameters Type Name Description ITypeInspector innerTypeDescriptor The inner type description instance. Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description System.Type type System.Object container Returns Type Description System.Collections.Generic.IEnumerable < IPropertyDescriptor > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CommentsObjectDescriptor.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentsObjectDescriptor.html",
    "title": "Class CommentsObjectDescriptor | EXILED Docs",
    "keywords": "Class CommentsObjectDescriptor Source: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentsObjectDescriptor Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentsObjectDescriptor : IObjectDescriptor Constructors | Improve this Doc View Source CommentsObjectDescriptor(IObjectDescriptor, String) Initializes a new instance of the CommentsObjectDescriptor class. Declaration public CommentsObjectDescriptor(IObjectDescriptor innerDescriptor, string comment) Parameters Type Name Description IObjectDescriptor innerDescriptor The inner descriptor instance. System.String comment The comment to be written. Properties | Improve this Doc View Source Comment Gets the comment to be written. Declaration public string Comment { get; } Property Value Type Description System.String | Improve this Doc View Source ScalarStyle Declaration public ScalarStyle ScalarStyle { get; } Property Value Type Description ScalarStyle | Improve this Doc View Source StaticType Declaration public Type StaticType { get; } Property Value Type Description System.Type | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description System.Type | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description System.Object Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor.html",
    "title": "Class CommentsObjectGraphVisitor | EXILED Docs",
    "keywords": "Class CommentsObjectGraphVisitor Source: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentsObjectGraphVisitor Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentsObjectGraphVisitor : ChainedObjectGraphVisitor Constructors | Improve this Doc View Source CommentsObjectGraphVisitor(IObjectGraphVisitor<IEmitter>) Initializes a new instance of the CommentsObjectGraphVisitor class. Declaration public CommentsObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor) Parameters Type Name Description IObjectGraphVisitor < IEmitter > nextVisitor The next visitor instance. Methods | Improve this Doc View Source EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) Declaration public override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context) Parameters Type Name Description IPropertyDescriptor key IObjectDescriptor value IEmitter context Returns Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.html",
    "title": "Class CommentsPropertyDescriptor | EXILED Docs",
    "keywords": "Class CommentsPropertyDescriptor Source: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentsPropertyDescriptor Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentsPropertyDescriptor : IPropertyDescriptor Constructors | Improve this Doc View Source CommentsPropertyDescriptor(IPropertyDescriptor) Initializes a new instance of the CommentsPropertyDescriptor class. Declaration public CommentsPropertyDescriptor(IPropertyDescriptor baseDescriptor) Parameters Type Name Description IPropertyDescriptor baseDescriptor The base descriptor instance. Properties | Improve this Doc View Source CanWrite Declaration public bool CanWrite { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Order Declaration public int Order { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ScalarStyle Declaration public ScalarStyle ScalarStyle { get; set; } Property Value Type Description ScalarStyle | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description System.Type | Improve this Doc View Source TypeOverride Declaration public Type TypeOverride { get; set; } Property Value Type Description System.Type Methods | Improve this Doc View Source GetCustomAttribute<T>() Declaration public T GetCustomAttribute<T>() where T : Attribute Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Read(Object) Declaration public IObjectDescriptor Read(object target) Parameters Type Name Description System.Object target Returns Type Description IObjectDescriptor | Improve this Doc View Source Write(Object, Object) Declaration public void Write(object target, object value) Parameters Type Name Description System.Object target System.Object value Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CustomConverters.html": {
    "href": "api/Exiled.Loader.Features.Configs.CustomConverters.html",
    "title": "Namespace Exiled.Loader.Features.Configs.CustomConverters | EXILED Docs",
    "keywords": "Namespace Exiled.Loader.Features.Configs.CustomConverters Classes VectorsConverter Converts a Vector2, Vector3 or Vector4 to Yaml configs and vice versa."
  },
  "api/Exiled.Loader.Features.Configs.CustomConverters.VectorsConverter.html": {
    "href": "api/Exiled.Loader.Features.Configs.CustomConverters.VectorsConverter.html",
    "title": "Class VectorsConverter | EXILED Docs",
    "keywords": "Class VectorsConverter Converts a Vector2, Vector3 or Vector4 to Yaml configs and vice versa. Inheritance System.Object VectorsConverter Namespace : Exiled.Loader.Features.Configs.CustomConverters Assembly : Exiled.Loader.dll Syntax public sealed class VectorsConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser System.Type type Returns Type Description System.Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter System.Object value System.Type type Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.html": {
    "href": "api/Exiled.Loader.Features.Configs.html",
    "title": "Namespace Exiled.Loader.Features.Configs | EXILED Docs",
    "keywords": "Namespace Exiled.Loader.Features.Configs Classes CommentGatheringTypeInspector Spurce: https://dotnetfiddle.net/8M6iIE . CommentsObjectDescriptor Source: https://dotnetfiddle.net/8M6iIE . CommentsObjectGraphVisitor Source: https://dotnetfiddle.net/8M6iIE . CommentsPropertyDescriptor Source: https://dotnetfiddle.net/8M6iIE . ValidatingNodeDeserializer Basic configs validation."
  },
  "api/Exiled.Loader.Features.Configs.ValidatingNodeDeserializer.html": {
    "href": "api/Exiled.Loader.Features.Configs.ValidatingNodeDeserializer.html",
    "title": "Class ValidatingNodeDeserializer | EXILED Docs",
    "keywords": "Class ValidatingNodeDeserializer Basic configs validation. Inheritance System.Object ValidatingNodeDeserializer Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class ValidatingNodeDeserializer : INodeDeserializer Constructors | Improve this Doc View Source ValidatingNodeDeserializer(INodeDeserializer) Initializes a new instance of the ValidatingNodeDeserializer class. Declaration public ValidatingNodeDeserializer(INodeDeserializer nodeDeserializer) Parameters Type Name Description INodeDeserializer nodeDeserializer The node deserializer instance. Methods | Improve this Doc View Source Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description IParser parser System.Type expectedType System.Func < IParser , System.Type , System.Object > nestedObjectDeserializer System.Object value Returns Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.html": {
    "href": "api/Exiled.Loader.Features.html",
    "title": "Namespace Exiled.Loader.Features | EXILED Docs",
    "keywords": "Namespace Exiled.Loader.Features Classes MultiAdminFeatures This class implements all possible MultiAdmin features. PluginPriorityComparer Comparator implementation according to plugin priorities. Enums MultiAdminFeatures.ActionType MultiAdminFeatures.EventType MultiAdminFeatures.ModFeatures"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.ActionType.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.ActionType.html",
    "title": "Enum MultiAdminFeatures.ActionType | EXILED Docs",
    "keywords": "Enum MultiAdminFeatures.ActionType Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public enum ActionType Fields Name Description SET_SUPPORTED_FEATURES Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.EventType.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.EventType.html",
    "title": "Enum MultiAdminFeatures.EventType | EXILED Docs",
    "keywords": "Enum MultiAdminFeatures.EventType Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public enum EventType Fields Name Description ROUND_END ROUND_START SERVER_FULL SERVER_START WAITING_FOR_PLAYERS Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.html",
    "title": "Class MultiAdminFeatures | EXILED Docs",
    "keywords": "Class MultiAdminFeatures This class implements all possible MultiAdmin features. Inheritance System.Object MultiAdminFeatures Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public static class MultiAdminFeatures Fields | Improve this Doc View Source MULTIADMIN_CONSOLE_PREFIX Declaration public const string MULTIADMIN_CONSOLE_PREFIX = \"-multiadmin\" Field Value Type Description System.String | Improve this Doc View Source MULTIADMIN_EVENT_SUFFIX Declaration public const string MULTIADMIN_EVENT_SUFFIX = \"event\" Field Value Type Description System.String | Improve this Doc View Source MULTIADMIN_PREFIX Declaration public const string MULTIADMIN_PREFIX = \"multiadmin\" Field Value Type Description System.String | Improve this Doc View Source MultiAdminKeySeparator Declaration public static readonly char[] MultiAdminKeySeparator Field Value Type Description System.Char [] | Improve this Doc View Source MultiAdminKeySeparatorStr Declaration public static readonly string MultiAdminKeySeparatorStr Field Value Type Description System.String | Improve this Doc View Source MultiAdminModFeatures Declaration public static readonly MultiAdminFeatures.ModFeatures MultiAdminModFeatures Field Value Type Description MultiAdminFeatures.ModFeatures | Improve this Doc View Source MultiAdminUsed Declaration public static readonly bool MultiAdminUsed Field Value Type Description System.Boolean | Improve this Doc View Source MultiAdminValueSeparator Declaration public static readonly char[] MultiAdminValueSeparator Field Value Type Description System.Char [] | Improve this Doc View Source MultiAdminValueSeparatorStr Declaration public static readonly string MultiAdminValueSeparatorStr Field Value Type Description System.String | Improve this Doc View Source MultiAdminVersion Declaration public static readonly string MultiAdminVersion Field Value Type Description System.String Methods | Improve this Doc View Source CallAction(MultiAdminFeatures.ActionType, Object) Declaration public static bool CallAction(MultiAdminFeatures.ActionType actionType, object value = null) Parameters Type Name Description MultiAdminFeatures.ActionType actionType System.Object value Returns Type Description System.Boolean | Improve this Doc View Source CallEvent(MultiAdminFeatures.EventType) Declaration public static bool CallEvent(MultiAdminFeatures.EventType eventType) Parameters Type Name Description MultiAdminFeatures.EventType eventType Returns Type Description System.Boolean | Improve this Doc View Source ConvertToMultiAdminAvailable(MultiAdminFeatures.ActionType) Declaration public static string ConvertToMultiAdminAvailable(MultiAdminFeatures.ActionType actionType) Parameters Type Name Description MultiAdminFeatures.ActionType actionType Returns Type Description System.String | Improve this Doc View Source ConvertToMultiAdminAvailable(MultiAdminFeatures.EventType) Declaration public static string ConvertToMultiAdminAvailable(MultiAdminFeatures.EventType eventType) Parameters Type Name Description MultiAdminFeatures.EventType eventType Returns Type Description System.String | Improve this Doc View Source PrepareStr(String) Declaration public static string PrepareStr(string value) Parameters Type Name Description System.String value Returns Type Description System.String"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.ModFeatures.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.ModFeatures.html",
    "title": "Enum MultiAdminFeatures.ModFeatures | EXILED Docs",
    "keywords": "Enum MultiAdminFeatures.ModFeatures Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax [Flags] public enum ModFeatures Fields Name Description All CustomEvents None Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Features.PluginPriorityComparer.html": {
    "href": "api/Exiled.Loader.Features.PluginPriorityComparer.html",
    "title": "Class PluginPriorityComparer | EXILED Docs",
    "keywords": "Class PluginPriorityComparer Comparator implementation according to plugin priorities. Inheritance System.Object PluginPriorityComparer Implements System.Collections.Generic.IComparer < IPlugin < IConfig >> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public sealed class PluginPriorityComparer : IComparer<IPlugin<IConfig>> Fields | Improve this Doc View Source Instance Public instance. Declaration public static readonly PluginPriorityComparer Instance Field Value Type Description PluginPriorityComparer Methods | Improve this Doc View Source Compare(IPlugin<IConfig>, IPlugin<IConfig>) Declaration public int Compare(IPlugin<IConfig> x, IPlugin<IConfig> y) Parameters Type Name Description IPlugin < IConfig > x IPlugin < IConfig > y Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.html": {
    "href": "api/Exiled.Loader.html",
    "title": "Namespace Exiled.Loader | EXILED Docs",
    "keywords": "Namespace Exiled.Loader Classes Config The configs of the loader. ConfigManager Used to handle plugin configs. Loader Used to handle plugins. PathExtensions Contains the extensions to get a path. TranslationManager Used to handle plugin translations. Enums Loader.TOKEN_ELEVATION_TYPE Loader.TOKEN_INFORMATION_CLASS"
  },
  "api/Exiled.Loader.Loader.html": {
    "href": "api/Exiled.Loader.Loader.html",
    "title": "Class Loader | EXILED Docs",
    "keywords": "Class Loader Used to handle plugins. Inheritance System.Object Loader Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class Loader Properties | Improve this Doc View Source Config Gets the configs of the plugin manager. Declaration public static Config Config { get; } Property Value Type Description Config | Improve this Doc View Source Dependencies Gets plugin dependencies. Declaration public static List<Assembly> Dependencies { get; } Property Value Type Description System.Collections.Generic.List < System.Reflection.Assembly > | Improve this Doc View Source Deserializer Gets the deserializer for configs and translations. Declaration public static IDeserializer Deserializer { get; } Property Value Type Description IDeserializer | Improve this Doc View Source Locations Gets a dictionary containing the file paths of assemblies. Declaration public static Dictionary<Assembly, string> Locations { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Reflection.Assembly , System.String > | Improve this Doc View Source Plugins Gets the plugins list. Declaration public static SortedSet<IPlugin<IConfig>> Plugins { get; } Property Value Type Description System.Collections.Generic.SortedSet < IPlugin < IConfig >> | Improve this Doc View Source Random Gets the initialized global random class. Declaration public static Random Random { get; } Property Value Type Description System.Random | Improve this Doc View Source Serializer Gets the serializer for configs and translations. Declaration public static ISerializer Serializer { get; } Property Value Type Description ISerializer | Improve this Doc View Source ShouldDebugBeShown Gets a value indicating whether the debug should be shown or not. Declaration public static bool ShouldDebugBeShown { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Version Gets the version of the assembly. Declaration public static Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source CreatePlugin(Assembly) Create a plugin instance. Declaration public static IPlugin<IConfig> CreatePlugin(Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The plugin assembly. Returns Type Description IPlugin < IConfig > Returns the created plugin instance or null. | Improve this Doc View Source DisablePlugins() Disables all plugins. Declaration public static void DisablePlugins() | Improve this Doc View Source EnablePlugins() Enables all plugins. Declaration public static void EnablePlugins() | Improve this Doc View Source LoadAssembly(String) Loads an assembly. Declaration public static Assembly LoadAssembly(string path) Parameters Type Name Description System.String path The path to load the assembly from. Returns Type Description System.Reflection.Assembly Returns the loaded assembly or null. | Improve this Doc View Source LoadPlugins() Loads all plugins. Declaration public static void LoadPlugins() | Improve this Doc View Source ReloadPlugins() Reloads all plugins. Declaration public static void ReloadPlugins() | Improve this Doc View Source Run(Assembly[]) Runs the plugin manager, by loading all dependencies, plugins, configs and then enables all plugins. Declaration public static void Run(Assembly[] dependencies = null) Parameters Type Name Description System.Reflection.Assembly [] dependencies The dependencies that could have been loaded by Exiled.Bootstrap."
  },
  "api/Exiled.Loader.Loader.TOKEN_ELEVATION_TYPE.html": {
    "href": "api/Exiled.Loader.Loader.TOKEN_ELEVATION_TYPE.html",
    "title": "Enum Loader.TOKEN_ELEVATION_TYPE | EXILED Docs",
    "keywords": "Enum Loader.TOKEN_ELEVATION_TYPE Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public enum TOKEN_ELEVATION_TYPE Fields Name Description TokenElevationTypeDefault TokenElevationTypeFull TokenElevationTypeLimited Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Loader.TOKEN_INFORMATION_CLASS.html": {
    "href": "api/Exiled.Loader.Loader.TOKEN_INFORMATION_CLASS.html",
    "title": "Enum Loader.TOKEN_INFORMATION_CLASS | EXILED Docs",
    "keywords": "Enum Loader.TOKEN_INFORMATION_CLASS Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public enum TOKEN_INFORMATION_CLASS Fields Name Description MaxTokenInfoClass TokenAccessInformation TokenAuditPolicy TokenDefaultDacl TokenElevation TokenElevationType TokenGroups TokenGroupsAndPrivileges TokenHasRestrictions TokenImpersonationLevel TokenIntegrityLevel TokenLinkedToken TokenLogonSid TokenMandatoryPolicy TokenOrigin TokenOwner TokenPrimaryGroup TokenPrivileges TokenRestrictedSids TokenSandBoxInert TokenSessionId TokenSessionReference TokenSource TokenStatistics TokenType TokenUIAccess TokenUser TokenVirtualizationAllowed TokenVirtualizationEnabled Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.PathExtensions.html": {
    "href": "api/Exiled.Loader.PathExtensions.html",
    "title": "Class PathExtensions | EXILED Docs",
    "keywords": "Class PathExtensions Contains the extensions to get a path. Inheritance System.Object PathExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class PathExtensions Methods | Improve this Doc View Source GetPath(IPlugin<IConfig>) Gets a path of a plugin. Declaration public static string GetPath(this IPlugin<IConfig> plugin) Parameters Type Name Description IPlugin < IConfig > plugin The IPlugin<TConfig> . Returns Type Description System.String The path of the plugin or null. Exceptions Type Condition System.ArgumentNullException The provided plugin is null. | Improve this Doc View Source GetPath(Assembly) Gets a path of an assembly. Declaration public static string GetPath(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The System.Reflection.Assembly . Returns Type Description System.String The path of the assembly or null. Exceptions Type Condition System.ArgumentNullException The provided assembly is null."
  },
  "api/Exiled.Loader.TranslationManager.html": {
    "href": "api/Exiled.Loader.TranslationManager.html",
    "title": "Class TranslationManager | EXILED Docs",
    "keywords": "Class TranslationManager Used to handle plugin translations. Inheritance System.Object TranslationManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class TranslationManager Methods | Improve this Doc View Source Load(String) Loads all plugin translations. Declaration public static SortedDictionary<string, ITranslation> Load(string rawTranslations) Parameters Type Name Description System.String rawTranslations The raw translations to be loaded. Returns Type Description System.Collections.Generic.SortedDictionary < System.String , ITranslation > Returns a dictionary of loaded translations. | Improve this Doc View Source Read() Read all plugin translations. Declaration public static string Read() Returns Type Description System.String Returns the read translations. | Improve this Doc View Source Reload() Reads, Loads and Saves plugin translations. Declaration public static bool Reload() Returns Type Description System.Boolean Returns a value indicating if the reloading process has been completed successfully or not. | Improve this Doc View Source Save(SortedDictionary<String, ITranslation>) Saves plugin translations. Declaration public static bool Save(SortedDictionary<string, ITranslation> translations) Parameters Type Name Description System.Collections.Generic.SortedDictionary < System.String , ITranslation > translations The translations to be saved. Returns Type Description System.Boolean Returns a value indicating whether the translations have been saved successfully or not. | Improve this Doc View Source Save(String) Saves plugin translations. Declaration public static bool Save(string translations) Parameters Type Name Description System.String translations The translations to be saved, already serialized in yaml format. Returns Type Description System.Boolean Returns a value indicating whether the translations have been saved successfully or not."
  },
  "api/Exiled.Permissions.Commands.Permissions.Add.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Add.html",
    "title": "Class Add | EXILED Docs",
    "keywords": "Class Add Adds a permission to a group. Inheritance System.Object Add Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax public class Add : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.Add.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.Add.html",
    "title": "Class Add | EXILED Docs",
    "keywords": "Class Add Adds a group to permissions. Inheritance System.Object Add Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions.Group Assembly : Exiled.Permissions.dll Syntax public class Add : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.Group.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.Group.html",
    "title": "Class Group | EXILED Docs",
    "keywords": "Class Group Handles commands about permissions groups. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Group Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions.Group Assembly : Exiled.Permissions.dll Syntax public class Group : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Group() Initializes a new instance of the Group class. Declaration public Group() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.html",
    "title": "Namespace Exiled.Permissions.Commands.Permissions.Group | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Commands.Permissions.Group Classes Add Adds a group to permissions. Group Handles commands about permissions groups. Remove Removes a group to permissions."
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.Remove.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.Remove.html",
    "title": "Class Remove | EXILED Docs",
    "keywords": "Class Remove Removes a group to permissions. Inheritance System.Object Remove Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions.Group Assembly : Exiled.Permissions.dll Syntax public class Remove : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.html",
    "title": "Namespace Exiled.Permissions.Commands.Permissions | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Commands.Permissions Classes Add Adds a permission to a group. Permissions Handles commands about permissions. Reload Reloads all permissions. Remove Removes a permission from a group."
  },
  "api/Exiled.Permissions.Commands.Permissions.Permissions.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions Handles commands about permissions. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Permissions Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax [CommandHandler(typeof(GameConsoleCommandHandler))] public class Permissions : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Permissions() Initializes a new instance of the Permissions class. Declaration public Permissions() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Reload.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Reload.html",
    "title": "Class Reload | EXILED Docs",
    "keywords": "Class Reload Reloads all permissions. Inheritance System.Object Reload Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax public class Reload : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Remove.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Remove.html",
    "title": "Class Remove | EXILED Docs",
    "keywords": "Class Remove Removes a permission from a group. Inheritance System.Object Remove Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax public class Remove : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Config.html": {
    "href": "api/Exiled.Permissions.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions Assembly : Exiled.Permissions.dll Syntax public sealed class Config : IConfig Constructors | Improve this Doc View Source Config() Initializes a new instance of the Config class. Declaration public Config() Properties | Improve this Doc View Source Folder Gets the permissions folder path. Declaration public string Folder { get; } Property Value Type Description System.String | Improve this Doc View Source FullPath Gets the permissions full path. Declaration public string FullPath { get; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldDebugBeShown Gets a value indicating whether the debug should be shown or not. Declaration public bool ShouldDebugBeShown { get; } Property Value Type Description System.Boolean Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Extensions.html": {
    "href": "api/Exiled.Permissions.Extensions.html",
    "title": "Namespace Exiled.Permissions.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Extensions Classes Permissions"
  },
  "api/Exiled.Permissions.Extensions.Permissions.html": {
    "href": "api/Exiled.Permissions.Extensions.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions Inheritance System.Object Permissions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Extensions Assembly : Exiled.Permissions.dll Syntax public static class Permissions Properties | Improve this Doc View Source DefaultGroup Gets the default group. Declaration public static Group DefaultGroup { get; } Property Value Type Description Group | Improve this Doc View Source Groups Gets groups list. Declaration public static Dictionary<string, Group> Groups { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , Group > Methods | Improve this Doc View Source CheckPermission(CommandSender, String) Checks a sender's permission. Declaration public static bool CheckPermission(this CommandSender sender, string permission) Parameters Type Name Description CommandSender sender The sender to be checked. System.String permission The permission to be checked. Returns Type Description System.Boolean Returns a value indicating whether the user has the permission or not. | Improve this Doc View Source CheckPermission(ICommandSender, String) Checks a sender's permission. Declaration public static bool CheckPermission(this ICommandSender sender, string permission) Parameters Type Name Description CommandSystem.ICommandSender sender The sender to be checked. System.String permission The permission to be checked. Returns Type Description System.Boolean Returns a value indicating whether the user has the permission or not. | Improve this Doc View Source CheckPermission(Player, String) Checks a player's permission. Declaration public static bool CheckPermission(this Player player, string permission) Parameters Type Name Description Player player The player to be checked. System.String permission The permission to be checked. Returns Type Description System.Boolean true if the player's current or native group has permissions; otherwise, false. | Improve this Doc View Source Create() Create permissions. Declaration public static void Create() | Improve this Doc View Source Reload() Reloads permissions. Declaration public static void Reload() | Improve this Doc View Source Save() Save permissions. Declaration public static void Save()"
  },
  "api/Exiled.Permissions.Features.Group.html": {
    "href": "api/Exiled.Permissions.Features.Group.html",
    "title": "Class Group | EXILED Docs",
    "keywords": "Class Group Represents a player's group. Inheritance System.Object Group Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Features Assembly : Exiled.Permissions.dll Syntax public class Group Properties | Improve this Doc View Source CombinedPermissions Gets the combined permissions of the group plus all inherited groups. Declaration public List<string> CombinedPermissions { get; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source Inheritance Gets or sets the group inheritance. Declaration public List<string> Inheritance { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source IsDefault Gets or sets a value indicating whether group is the default one or not. Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Permissions Gets or sets the group permissions. Declaration public List<string> Permissions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Features.html": {
    "href": "api/Exiled.Permissions.Features.html",
    "title": "Namespace Exiled.Permissions.Features | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Features Classes Group Represents a player's group."
  },
  "api/Exiled.Permissions.html": {
    "href": "api/Exiled.Permissions.html",
    "title": "Namespace Exiled.Permissions | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions Classes Config Permissions Handles all plugin-related permissions, for executing commands, doing actions and so on."
  },
  "api/Exiled.Permissions.Permissions.html": {
    "href": "api/Exiled.Permissions.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions Handles all plugin-related permissions, for executing commands, doing actions and so on. Inheritance System.Object Plugin < Config > Permissions Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions Assembly : Exiled.Permissions.dll Syntax public sealed class Permissions : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets the permissions instance. Declaration public static Permissions Instance { get; } Property Value Type Description Permissions Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.Permissions.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.Permissions.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods PathExtensions.GetPath(IPlugin<IConfig>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "articles/contributing.html": {
    "href": "articles/contributing.html",
    "title": "Contributing | EXILED Docs",
    "keywords": "Contributing Contributing code Forking EXILED First, create a fork of our GitHub repository . Then, clone it to your computer like so: git clone https://github.com/your-username/EXILED.git Open a terminal in your forked EXILED folder and run git checkout dev . This will switch you to the dev branch, which all pull requests should be submitted to. Setting EXILED_REFERENCES If you haven't already, install the SCP: Secret Laboratory Dedicated Server through Steam or extract this zip file to an easily accessible folder. Windows users Open the Environment Variables menu by searching for Environment Variables in the Start Menu. Create a new environment variable titled EXILED_REFERENCES . The value should point to your_steamapps_directory/common/SCP Secret Laboratory Dedicated Server/SCPSL_Data/Managed , or to the folder where you extracted the zip file mentioned earlier. Linux users Add export EXILED_REFERENCES=\"PATH\" to your ~/.bashrc or similar file. PATH should point to your_steamapps_directory/common/SCP Secret Laboratory Dedicated Server/SCPSL_Data/Managed , or to the folder where you extracted the zip file mentioned earlier. You should now be able to open the EXILED directory in your favorite IDE. Once you are done, test your changes thoroughly, and then submit a pull request to the main EXILED repository. Make sure you are targeting the dev branch, not master ! Happy coding! Contributing docs Documentation is built using DocFX. Forking EXILED First, create a fork of our GitHub repository . Then, clone it to your computer like so: git clone https://github.com/your-username/EXILED.git Open a terminal in your forked EXILED folder and run git checkout dev . This will switch you to the dev branch, which all pull requests should be submitted to. DocFX installation If you have Chocolatey installed, installation is simple as choco install docfx Homebrew installation is just as simple: brew install docfx You can also get it via NuGet: nuget install docfx.console Writing and building docs All of our articles live in the docs/ directory in the root of the repository. To make a new article, simply create a new Markdown (.md) file in the docs/articles folder with a descriptive name. Then, add it to the toc.yml located in that same folder. For more information on toc.yml formatting, check the DocFX documentation. You can then write your article using Markdown. For more information on Markdown syntax, check out Markdown Guide. To build documentation, run docfx docfx.json and the completed documentation will be generated in _site/ . Do not push _site to GitHub, as GitHub Actions will generate updated documentation when it is pushed to master. You can then open _site/index.html in your favorite web browser to preview the results. Once you are done, submit a pull request to the main EXILED repository. Make sure you are targeting the dev branch, not master!"
  },
  "articles/install.html": {
    "href": "articles/install.html",
    "title": "Installing EXILED | EXILED Docs",
    "keywords": "Installing EXILED This guide assumes you have already installed the SCP: SL dedicated server. If you have not done this, please follow the guide here. Windows installation Download Exiled.Installer-Win.exe from here . Move it into your server directory and double click the .exe. If you would like to download pre-releases or specify other advanced options, you can reference all the flags here. Linux installation Download Exiled.Installer-Linux from here . Move it into your server directory and run it using ./Exiled.Installer-Linux If you would like to download pre-releases or specify other advanced options, you can reference all the flags here. Plugin installation To install a plugin, simply place it in your plugins directory and restart your server. Your plugins directory should be located at %appdata%\\EXILED\\Plugins on Windows and ~/.config/EXILED/Plugins on Linux. Configs are autogenerated in the {port}-config.yml in the config directory, which can be found in %appdata%\\EXILED\\Configs on Windows and ~/.config/EXILED/Configs on Linux."
  },
  "index.html": {
    "href": "index.html",
    "title": "EXILED (EXtended In-runtime Library for External Development) | EXILED Docs",
    "keywords": "EXILED (EXtended In-runtime Library for External Development) EXILED is a low-level plugin framework for SCP: Secret Laboratory servers. Our documentation is still a work in progress, help us out by following the instructions here!"
  }
}